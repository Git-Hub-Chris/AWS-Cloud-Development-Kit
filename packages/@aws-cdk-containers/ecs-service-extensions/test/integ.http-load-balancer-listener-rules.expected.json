{
  "Resources": {
    "Environmentenvironmentvpc02635CAD": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "http-load-balancer-listener-rules-integ/Environment-environment-vpc"
          }
        ]
      }
    },
    "EnvironmentenvironmentvpcPublicSubnet1Subnet90FA3050": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/19",
        "VpcId": {
          "Ref": "Environmentenvironmentvpc02635CAD"
        },
        "AvailabilityZone": "test-region-1a",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "http-load-balancer-listener-rules-integ/Environment-environment-vpc/PublicSubnet1"
          }
        ]
      }
    },
    "EnvironmentenvironmentvpcPublicSubnet1RouteTableF562A242": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Environmentenvironmentvpc02635CAD"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "http-load-balancer-listener-rules-integ/Environment-environment-vpc/PublicSubnet1"
          }
        ]
      }
    },
    "EnvironmentenvironmentvpcPublicSubnet1RouteTableAssociationFDE85030": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "EnvironmentenvironmentvpcPublicSubnet1RouteTableF562A242"
        },
        "SubnetId": {
          "Ref": "EnvironmentenvironmentvpcPublicSubnet1Subnet90FA3050"
        }
      }
    },
    "EnvironmentenvironmentvpcPublicSubnet1DefaultRoute4171CB3F": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "EnvironmentenvironmentvpcPublicSubnet1RouteTableF562A242"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "EnvironmentenvironmentvpcIGWD3352EF8"
        }
      },
      "DependsOn": [
        "EnvironmentenvironmentvpcVPCGWD59F3C86"
      ]
    },
    "EnvironmentenvironmentvpcPublicSubnet1EIP0B5752AE": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "http-load-balancer-listener-rules-integ/Environment-environment-vpc/PublicSubnet1"
          }
        ]
      }
    },
    "EnvironmentenvironmentvpcPublicSubnet1NATGateway65E8E64D": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "EnvironmentenvironmentvpcPublicSubnet1EIP0B5752AE",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "EnvironmentenvironmentvpcPublicSubnet1Subnet90FA3050"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "http-load-balancer-listener-rules-integ/Environment-environment-vpc/PublicSubnet1"
          }
        ]
      }
    },
    "EnvironmentenvironmentvpcPublicSubnet2Subnet80565813": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.32.0/19",
        "VpcId": {
          "Ref": "Environmentenvironmentvpc02635CAD"
        },
        "AvailabilityZone": "test-region-1b",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "http-load-balancer-listener-rules-integ/Environment-environment-vpc/PublicSubnet2"
          }
        ]
      }
    },
    "EnvironmentenvironmentvpcPublicSubnet2RouteTableCC311A3A": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Environmentenvironmentvpc02635CAD"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "http-load-balancer-listener-rules-integ/Environment-environment-vpc/PublicSubnet2"
          }
        ]
      }
    },
    "EnvironmentenvironmentvpcPublicSubnet2RouteTableAssociation54B3A48A": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "EnvironmentenvironmentvpcPublicSubnet2RouteTableCC311A3A"
        },
        "SubnetId": {
          "Ref": "EnvironmentenvironmentvpcPublicSubnet2Subnet80565813"
        }
      }
    },
    "EnvironmentenvironmentvpcPublicSubnet2DefaultRouteCA3995A5": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "EnvironmentenvironmentvpcPublicSubnet2RouteTableCC311A3A"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "EnvironmentenvironmentvpcIGWD3352EF8"
        }
      },
      "DependsOn": [
        "EnvironmentenvironmentvpcVPCGWD59F3C86"
      ]
    },
    "EnvironmentenvironmentvpcPublicSubnet2EIP54A162E2": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "http-load-balancer-listener-rules-integ/Environment-environment-vpc/PublicSubnet2"
          }
        ]
      }
    },
    "EnvironmentenvironmentvpcPublicSubnet2NATGatewayEDDF81A3": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "EnvironmentenvironmentvpcPublicSubnet2EIP54A162E2",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "EnvironmentenvironmentvpcPublicSubnet2Subnet80565813"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "http-load-balancer-listener-rules-integ/Environment-environment-vpc/PublicSubnet2"
          }
        ]
      }
    },
    "EnvironmentenvironmentvpcPublicSubnet3Subnet10097D0C": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.64.0/19",
        "VpcId": {
          "Ref": "Environmentenvironmentvpc02635CAD"
        },
        "AvailabilityZone": "test-region-1c",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "http-load-balancer-listener-rules-integ/Environment-environment-vpc/PublicSubnet3"
          }
        ]
      }
    },
    "EnvironmentenvironmentvpcPublicSubnet3RouteTable61D66B59": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Environmentenvironmentvpc02635CAD"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "http-load-balancer-listener-rules-integ/Environment-environment-vpc/PublicSubnet3"
          }
        ]
      }
    },
    "EnvironmentenvironmentvpcPublicSubnet3RouteTableAssociationAACB1C09": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "EnvironmentenvironmentvpcPublicSubnet3RouteTable61D66B59"
        },
        "SubnetId": {
          "Ref": "EnvironmentenvironmentvpcPublicSubnet3Subnet10097D0C"
        }
      }
    },
    "EnvironmentenvironmentvpcPublicSubnet3DefaultRoute2A05E259": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "EnvironmentenvironmentvpcPublicSubnet3RouteTable61D66B59"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "EnvironmentenvironmentvpcIGWD3352EF8"
        }
      },
      "DependsOn": [
        "EnvironmentenvironmentvpcVPCGWD59F3C86"
      ]
    },
    "EnvironmentenvironmentvpcPublicSubnet3EIP82FD47E5": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "http-load-balancer-listener-rules-integ/Environment-environment-vpc/PublicSubnet3"
          }
        ]
      }
    },
    "EnvironmentenvironmentvpcPublicSubnet3NATGateway537826D7": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "EnvironmentenvironmentvpcPublicSubnet3EIP82FD47E5",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "EnvironmentenvironmentvpcPublicSubnet3Subnet10097D0C"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "http-load-balancer-listener-rules-integ/Environment-environment-vpc/PublicSubnet3"
          }
        ]
      }
    },
    "EnvironmentenvironmentvpcPrivateSubnet1SubnetE66B59C1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.96.0/19",
        "VpcId": {
          "Ref": "Environmentenvironmentvpc02635CAD"
        },
        "AvailabilityZone": "test-region-1a",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "http-load-balancer-listener-rules-integ/Environment-environment-vpc/PrivateSubnet1"
          }
        ]
      }
    },
    "EnvironmentenvironmentvpcPrivateSubnet1RouteTable2FAF7412": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Environmentenvironmentvpc02635CAD"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "http-load-balancer-listener-rules-integ/Environment-environment-vpc/PrivateSubnet1"
          }
        ]
      }
    },
    "EnvironmentenvironmentvpcPrivateSubnet1RouteTableAssociation46A426C7": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "EnvironmentenvironmentvpcPrivateSubnet1RouteTable2FAF7412"
        },
        "SubnetId": {
          "Ref": "EnvironmentenvironmentvpcPrivateSubnet1SubnetE66B59C1"
        }
      }
    },
    "EnvironmentenvironmentvpcPrivateSubnet1DefaultRoute1AFA55BA": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "EnvironmentenvironmentvpcPrivateSubnet1RouteTable2FAF7412"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "EnvironmentenvironmentvpcPublicSubnet1NATGateway65E8E64D"
        }
      }
    },
    "EnvironmentenvironmentvpcPrivateSubnet2SubnetD38DAD67": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.128.0/19",
        "VpcId": {
          "Ref": "Environmentenvironmentvpc02635CAD"
        },
        "AvailabilityZone": "test-region-1b",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "http-load-balancer-listener-rules-integ/Environment-environment-vpc/PrivateSubnet2"
          }
        ]
      }
    },
    "EnvironmentenvironmentvpcPrivateSubnet2RouteTable244FED3F": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Environmentenvironmentvpc02635CAD"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "http-load-balancer-listener-rules-integ/Environment-environment-vpc/PrivateSubnet2"
          }
        ]
      }
    },
    "EnvironmentenvironmentvpcPrivateSubnet2RouteTableAssociation9FE6BFCD": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "EnvironmentenvironmentvpcPrivateSubnet2RouteTable244FED3F"
        },
        "SubnetId": {
          "Ref": "EnvironmentenvironmentvpcPrivateSubnet2SubnetD38DAD67"
        }
      }
    },
    "EnvironmentenvironmentvpcPrivateSubnet2DefaultRouteF5A23DA3": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "EnvironmentenvironmentvpcPrivateSubnet2RouteTable244FED3F"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "EnvironmentenvironmentvpcPublicSubnet2NATGatewayEDDF81A3"
        }
      }
    },
    "EnvironmentenvironmentvpcPrivateSubnet3Subnet1D189E7A": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.160.0/19",
        "VpcId": {
          "Ref": "Environmentenvironmentvpc02635CAD"
        },
        "AvailabilityZone": "test-region-1c",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "http-load-balancer-listener-rules-integ/Environment-environment-vpc/PrivateSubnet3"
          }
        ]
      }
    },
    "EnvironmentenvironmentvpcPrivateSubnet3RouteTableB47CCB3A": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Environmentenvironmentvpc02635CAD"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "http-load-balancer-listener-rules-integ/Environment-environment-vpc/PrivateSubnet3"
          }
        ]
      }
    },
    "EnvironmentenvironmentvpcPrivateSubnet3RouteTableAssociationCEC91ECD": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "EnvironmentenvironmentvpcPrivateSubnet3RouteTableB47CCB3A"
        },
        "SubnetId": {
          "Ref": "EnvironmentenvironmentvpcPrivateSubnet3Subnet1D189E7A"
        }
      }
    },
    "EnvironmentenvironmentvpcPrivateSubnet3DefaultRoute979F6FF4": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "EnvironmentenvironmentvpcPrivateSubnet3RouteTableB47CCB3A"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "EnvironmentenvironmentvpcPublicSubnet3NATGateway537826D7"
        }
      }
    },
    "EnvironmentenvironmentvpcIGWD3352EF8": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "http-load-balancer-listener-rules-integ/Environment-environment-vpc"
          }
        ]
      }
    },
    "EnvironmentenvironmentvpcVPCGWD59F3C86": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "Environmentenvironmentvpc02635CAD"
        },
        "InternetGatewayId": {
          "Ref": "EnvironmentenvironmentvpcIGWD3352EF8"
        }
      }
    },
    "EnvironmentenvironmentclusterA67A8E69": {
      "Type": "AWS::ECS::Cluster"
    },
    "Alb16C2F182": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false"
          }
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "AlbSecurityGroup580F65A6",
              "GroupId"
            ]
          }
        ],
        "Subnets": [
          {
            "Ref": "EnvironmentenvironmentvpcPublicSubnet1Subnet90FA3050"
          },
          {
            "Ref": "EnvironmentenvironmentvpcPublicSubnet2Subnet80565813"
          },
          {
            "Ref": "EnvironmentenvironmentvpcPublicSubnet3Subnet10097D0C"
          }
        ],
        "Type": "application"
      },
      "DependsOn": [
        "EnvironmentenvironmentvpcPublicSubnet1DefaultRoute4171CB3F",
        "EnvironmentenvironmentvpcPublicSubnet2DefaultRouteCA3995A5",
        "EnvironmentenvironmentvpcPublicSubnet3DefaultRoute2A05E259"
      ]
    },
    "AlbSecurityGroup580F65A6": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB httploadbalancerlistenerrulesintegAlb63F39206",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80
          }
        ],
        "VpcId": {
          "Ref": "Environmentenvironmentvpc02635CAD"
        }
      }
    },
    "AlbSecurityGrouptohttploadbalancerlistenerrulesintegServiceserviceSecurityGroupF94CF5DF80A7A9B4AA": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": [
            "AlbSecurityGroup580F65A6",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "ServiceserviceSecurityGroup1915660F",
            "GroupId"
          ]
        },
        "FromPort": 80,
        "ToPort": 80
      }
    },
    "AlbSecurityGrouptohttploadbalancerlistenerrulesintegServiceserviceSecurityGroupF94CF5DFALLPORTS5D39F311": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": [
            "AlbSecurityGroup580F65A6",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "Description": "to httploadbalancerlistenerrulesintegServiceserviceSecurityGroupF94CF5DF:ALL PORTS",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "ServiceserviceSecurityGroup1915660F",
            "GroupId"
          ]
        },
        "FromPort": 0,
        "ToPort": 65535
      }
    },
    "AlbhttpF4DDFFB4": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "FixedResponseConfig": {
              "ContentType": "text/plain",
              "MessageBody": "404 Not Found",
              "StatusCode": "404"
            },
            "Type": "fixed-response"
          }
        ],
        "LoadBalancerArn": {
          "Ref": "Alb16C2F182"
        },
        "Port": 80,
        "Protocol": "HTTP"
      }
    },
    "ServicetaskdefinitionTaskRole5B4B60A4": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "Servicetaskdefinition0CEAD834": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [
          {
            "Cpu": 256,
            "Environment": [
              {
                "Name": "PORT",
                "Value": "80"
              }
            ],
            "Essential": true,
            "Image": "nathanpeck/name",
            "Memory": 512,
            "Name": "app",
            "PortMappings": [
              {
                "ContainerPort": 80,
                "Protocol": "tcp"
              }
            ],
            "Ulimits": [
              {
                "HardLimit": 1024000,
                "Name": "nofile",
                "SoftLimit": 1024000
              }
            ]
          }
        ],
        "Cpu": "256",
        "Family": "httploadbalancerlistenerrulesintegServicetaskdefinition627BCACB",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "EC2",
          "FARGATE"
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "ServicetaskdefinitionTaskRole5B4B60A4",
            "Arn"
          ]
        }
      }
    },
    "ServiceserviceService6A153CB8": {
      "Type": "AWS::ECS::Service",
      "Properties": {
        "Cluster": {
          "Ref": "EnvironmentenvironmentclusterA67A8E69"
        },
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 100
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": [
          {
            "ContainerName": "app",
            "ContainerPort": 80,
            "TargetGroupArn": {
              "Ref": "loadbalancerlistenerruleshttploadbalancerlistenerrules84153F11"
            }
          }
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "ServiceserviceSecurityGroup1915660F",
                  "GroupId"
                ]
              }
            ],
            "Subnets": [
              {
                "Ref": "EnvironmentenvironmentvpcPrivateSubnet1SubnetE66B59C1"
              },
              {
                "Ref": "EnvironmentenvironmentvpcPrivateSubnet2SubnetD38DAD67"
              },
              {
                "Ref": "EnvironmentenvironmentvpcPrivateSubnet3Subnet1D189E7A"
              }
            ]
          }
        },
        "TaskDefinition": {
          "Ref": "Servicetaskdefinition0CEAD834"
        }
      },
      "DependsOn": [
        "loadbalancerlistenerruleshttploadbalancerlistenerrulesrule131E41141",
        "loadbalancerlistenerruleshttploadbalancerlistenerrulesrule6D5878D1E"
      ]
    },
    "ServiceserviceSecurityGroup1915660F": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "http-load-balancer-listener-rules-integ/Service-service/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "Environmentenvironmentvpc02635CAD"
        }
      }
    },
    "ServiceserviceSecurityGroupfromhttploadbalancerlistenerrulesintegAlbSecurityGroup8A31DFD0801728DE9F": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "ServiceserviceSecurityGroup1915660F",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "AlbSecurityGroup580F65A6",
            "GroupId"
          ]
        },
        "ToPort": 80
      }
    },
    "ServiceserviceSecurityGroupfromhttploadbalancerlistenerrulesintegAlbSecurityGroup8A31DFD0ALLPORTS7AE45C07": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from httploadbalancerlistenerrulesintegAlbSecurityGroup8A31DFD0:ALL PORTS",
        "FromPort": 0,
        "GroupId": {
          "Fn::GetAtt": [
            "ServiceserviceSecurityGroup1915660F",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "AlbSecurityGroup580F65A6",
            "GroupId"
          ]
        },
        "ToPort": 65535
      }
    },
    "loadbalancerlistenerruleshttploadbalancerlistenerrules84153F11": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "Port": 80,
        "Protocol": "HTTP",
        "TargetType": "ip",
        "VpcId": {
          "Ref": "Environmentenvironmentvpc02635CAD"
        }
      }
    },
    "loadbalancerlistenerruleshttploadbalancerlistenerrulesrule131E41141": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "loadbalancerlistenerruleshttploadbalancerlistenerrules84153F11"
            },
            "Type": "forward"
          }
        ],
        "Conditions": [
          {
            "Field": "path-pattern",
            "PathPatternConfig": {
              "Values": [
                "/name1"
              ]
            }
          }
        ],
        "ListenerArn": {
          "Ref": "AlbhttpF4DDFFB4"
        },
        "Priority": 1
      }
    },
    "loadbalancerlistenerruleshttploadbalancerlistenerrulesrule6D5878D1E": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "loadbalancerlistenerruleshttploadbalancerlistenerrules84153F11"
            },
            "Type": "forward"
          }
        ],
        "Conditions": [
          {
            "Field": "path-pattern",
            "PathPatternConfig": {
              "Values": [
                "/name2"
              ]
            }
          }
        ],
        "ListenerArn": {
          "Ref": "AlbhttpF4DDFFB4"
        },
        "Priority": 6
      }
    },
    "loadbalancerlistenerruleshttploadbalancerlistenerrulesrule110429747B": {
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
      "Properties": {
        "Actions": [
          {
            "RedirectConfig": {
              "Host": "aws.amazon.com",
              "Path": "/",
              "Port": "443",
              "Protocol": "HTTPS",
              "StatusCode": "HTTP_302"
            },
            "Type": "redirect"
          }
        ],
        "Conditions": [
          {
            "Field": "path-pattern",
            "PathPatternConfig": {
              "Values": [
                "/redirect"
              ]
            }
          }
        ],
        "ListenerArn": {
          "Ref": "AlbhttpF4DDFFB4"
        },
        "Priority": 11
      }
    }
  },
  "Outputs": {
    "Error404Endpoint": {
      "Value": {
        "Fn::Sub": [
          "http://${AlbDns}",
          {
            "AlbDns": {
              "Fn::GetAtt": [
                "Alb16C2F182",
                "DNSName"
              ]
            }
          }
        ]
      }
    },
    "NameEndpoint1": {
      "Value": {
        "Fn::Sub": [
          "http://${AlbDns}/name1",
          {
            "AlbDns": {
              "Fn::GetAtt": [
                "Alb16C2F182",
                "DNSName"
              ]
            }
          }
        ]
      }
    },
    "NameEndpoint2": {
      "Value": {
        "Fn::Sub": [
          "http://${AlbDns}/name2",
          {
            "AlbDns": {
              "Fn::GetAtt": [
                "Alb16C2F182",
                "DNSName"
              ]
            }
          }
        ]
      }
    },
    "RedirectToAmazon": {
      "Value": {
        "Fn::Sub": [
          "http://${AlbDns}/redirect",
          {
            "AlbDns": {
              "Fn::GetAtt": [
                "Alb16C2F182",
                "DNSName"
              ]
            }
          }
        ]
      }
    }
  }
}