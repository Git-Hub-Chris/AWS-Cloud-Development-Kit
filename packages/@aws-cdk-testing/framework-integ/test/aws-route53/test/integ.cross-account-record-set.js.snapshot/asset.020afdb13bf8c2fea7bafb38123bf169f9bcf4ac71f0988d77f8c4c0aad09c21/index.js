"use strict";var A=Object.create;var u=Object.defineProperty;var T=Object.getOwnPropertyDescriptor;var P=Object.getOwnPropertyNames;var w=Object.getPrototypeOf,L=Object.prototype.hasOwnProperty;var b=(e,t)=>{for(var r in t)u(e,r,{get:t[r],enumerable:!0})},g=(e,t,r,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of P(t))!L.call(e,s)&&s!==r&&u(e,s,{get:()=>t[s],enumerable:!(o=T(t,s))||o.enumerable});return e};var R=(e,t,r)=>(r=e!=null?A(w(e)):{},g(t||!e||!e.__esModule?u(r,"default",{value:e,enumerable:!0}):r,e)),D=e=>g(u({},"__esModule",{value:!0}),e);var v={};b(v,{PhysicalResourceId:()=>c,handler:()=>$});module.exports=D(v);var p=R(require("crypto")),I=require("@aws-sdk/client-route-53"),C=require("@aws-sdk/credential-providers");var m=R(require("https")),S=R(require("url")),f={sendHttpRequest:x,log:H,includeStackTraces:!0,userHandlerIndex:"./index"};var N="AWSCDK::CustomResourceProviderFramework::MISSING_PHYSICAL_ID";async function l(e,t){let r={Status:e,Reason:t.Reason??e,StackId:t.StackId,RequestId:t.RequestId,PhysicalResourceId:t.PhysicalResourceId||N,LogicalResourceId:t.LogicalResourceId,NoEcho:t.NoEcho,Data:t.Data},o=S.parse(t.ResponseURL),s=`${o.protocol}//${o.hostname}/${o.pathname}?***`;f.log("submit response to cloudformation",s,r);let n=JSON.stringify(r),d={hostname:o.hostname,path:o.path,method:"PUT",headers:{"content-type":"","content-length":Buffer.byteLength(n,"utf8")}};await O({attempts:5,sleep:1e3},f.sendHttpRequest)(d,n)}async function x(e,t){return new Promise((r,o)=>{try{let s=m.request(e,n=>{n.resume(),!n.statusCode||n.statusCode>=400?o(new Error(`Unsuccessful HTTP response: ${n.statusCode}`)):r()});s.on("error",o),s.write(t),s.end()}catch(s){o(s)}})}function H(e,...t){console.log(e,...t)}function O(e,t){return async(...r)=>{let o=e.attempts,s=e.sleep;for(;;)try{return await t(...r)}catch(n){if(o--<=0)throw n;await U(Math.floor(Math.random()*s)),s*=2}}}async function U(e){return new Promise(t=>setTimeout(t,e))}function y(e){let t={cn:"cn-northwest-1","us-gov":"us-gov-west-1","us-iso":"us-iso-east-1","us-isob":"us-isob-east-1","eu-isoe":"eu-isoe-west-1","us-isof":"us-isof-south-1"};for(let[r,o]of Object.entries(t))if(e.startsWith(`${r}-`))return o;return"us-east-1"}async function $(e){try{let t=c.create(e.ResourceProperties),r=e.ResourceProperties,o=_(r);switch(e.RequestType){case"Create":await q(o,r);break;case"Update":await k(o,e.OldResourceProperties,r);break;case"Delete":await W(o,r,e.PhysicalResourceId);break}await l("SUCCESS",{...e,PhysicalResourceId:t.physicalResourceId()})}catch(t){let r=c.create(e.ResourceProperties),o="An unknown error occurred";t instanceof Error&&(o=t.message),await l("FAILED",{...e,PhysicalResourceId:r.physicalResourceId(),Reason:o})}}function _(e){let t=new Date().getTime();return new I.Route53({credentials:(0,C.fromTemporaryCredentials)({clientConfig:{region:e.AssumeRoleRegion??y(process.env.AWS_REGION??process.env.AWS_DEFAULT_REGION??"")},params:{RoleArn:e.AssumeRoleArn,RoleSessionName:`cross-account-record-set-${t}`}})})}async function E(e,t,r){let o={HostedZoneId:t.HostedZoneId,StartRecordName:t.Name,StartRecordType:t.Type,MaxItems:1};t.SetIdentifier&&(o.StartRecordIdentifier=t.SetIdentifier),i("Searching for recordsets with args: ",o);let s=await e.listResourceRecordSets(o);i("Returned RecordSets: ",s.ResourceRecordSets);let n=s.ResourceRecordSets?.find(d=>d.Name?.toLowerCase()===t.Name.toLowerCase()&&d.Type===t.Type);if(i("Existing Record: ",n),n)return r?.requireStrictIdentifierMatch&&t.SetIdentifier!==n.SetIdentifier?void 0:(n.Name=h(n.Name),n)}async function q(e,t){let r=[];if(F(t.DeleteExisting)){let o=await E(e,t,{requireStrictIdentifierMatch:!0});o&&r.push({Action:"DELETE",ResourceRecordSet:o})}r.push({Action:"CREATE",ResourceRecordSet:a(t)}),i("Sending ChangeBatch for create operation: ",r),await e.changeResourceRecordSets({HostedZoneId:t.HostedZoneId,ChangeBatch:{Changes:r}})}async function k(e,t,r){let o=[{Action:"DELETE",ResourceRecordSet:a(t)},{Action:"UPSERT",ResourceRecordSet:a(r)}];i("Sending ChangeBatch for Update operation: ",o),await e.changeResourceRecordSets({HostedZoneId:r.HostedZoneId,ChangeBatch:{Changes:o}})}async function W(e,t,r){let o=await E(e,t);if(!o){i(`The RecordSet has already been deleted in a prior CREATE or UPDATE operation.
Taking no action for Delete event.`);return}let s=new c(o);if(r===s.physicalResourceId()){let n=[{Action:"DELETE",ResourceRecordSet:o}];i(`Existing record found that matches provided PhysicalResourceId
value of ${r}.`),i("Sending ChangeBatch for Delete operation: ",n),await e.changeResourceRecordSets({HostedZoneId:t.HostedZoneId,ChangeBatch:{Changes:n}})}else i(`Record to delete with props ${JSON.stringify(a(t))}
does not match found existing record ${JSON.stringify(o)}.
Taking no action for this Delete event.
`)}var c=class e{static create(t){return new e(a(t))}constructor(t){this._resourceRecordSet=t,this.recordName=this._resourceRecordSet.Name,this.recordType=this._resourceRecordSet.Type,this.setIdentifier=this._resourceRecordSet.SetIdentifier}simpleUniqueRecordId(){return this.setIdentifier?`${this.recordName}-${this.recordType}-${this.setIdentifier}`:`${this.recordName}-${this.recordType}`}fullUniqueRecordId(){let t=JSON.stringify(this._resourceRecordSet,Object.keys(this._resourceRecordSet).sort());return p.createHash("md5").update(t,"utf8").digest("hex").slice(0,12)}physicalResourceId(){return`${this.simpleUniqueRecordId()}_${this.fullUniqueRecordId()}`}};function a(e){let t={Name:h(e.Name),Type:e.Type,Region:e.Region,Weight:e.Weight,ResourceRecords:e.ResourceRecords,GeoLocation:e.GeoLocation,SetIdentifier:e.SetIdentifier};e.ResourceRecords&&(t.TTL=parseInt(e.TTL)),e.AliasTarget&&(t.AliasTarget={DNSName:h(e.AliasTarget.DNSName),HostedZoneId:e.AliasTarget.HostedZoneId,EvaluateTargetHealth:!1});function r(s){return typeof s=="object"&&s!==null&&!Array.isArray(s)&&Object.keys(s).length===0}function o(s){for(let n in s)(s[n]===void 0||s[n]===""||r(s[n]))&&delete s[n];return s}return o(t)}function h(e){return e.endsWith(".")?e.toLowerCase():`${e}.`.toLowerCase()}function F(e){let t=e.toLowerCase();if(t==="1"||t==="true")return!0;if(t==="0"||t==="false")return!1;throw new Error(`The string ${e} must be one of [0, 1, true, false, True, False]`)}function i(...e){let t=e.map(r=>typeof r=="object"&&r!==null?JSON.stringify(r,null,2):String(r));console.log(t.join(" "))}0&&(module.exports={PhysicalResourceId,handler});
