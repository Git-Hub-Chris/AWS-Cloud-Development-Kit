"use strict";var re=Object.create;var A=Object.defineProperty;var ne=Object.getOwnPropertyDescriptor;var oe=Object.getOwnPropertyNames;var ae=Object.getPrototypeOf,se=Object.prototype.hasOwnProperty;var S=(e,i)=>()=>(e&&(i=e(e=0)),i);var ce=(e,i)=>()=>(i||e((i={exports:{}}).exports,i),i.exports),f=(e,i)=>{for(var t in i)A(e,t,{get:i[t],enumerable:!0})},_=(e,i,t,n)=>{if(i&&typeof i=="object"||typeof i=="function")for(let r of oe(i))!se.call(e,r)&&r!==t&&A(e,r,{get:()=>i[r],enumerable:!(n=ne(i,r))||n.enumerable});return e};var v=(e,i,t)=>(t=e!=null?re(ae(e)):{},_(i||!e||!e.__esModule?A(t,"default",{value:e,enumerable:!0}):t,e)),C=e=>_(A({},"__esModule",{value:!0}),e);function ue(e){return Buffer.isBuffer(e)?e.toString("utf8"):ArrayBuffer.isView(e)?le.decode(e.buffer):e}function k(e){function i(t,n=[]){return[].concat(...Object.keys(t).map(r=>{let a=ue(t[r]);return typeof a=="object"&&a!==null?i(a,n.concat([r])):{[n.concat([r]).join(".")]:a}}))}return Object.assign({},...i(e))}function P(e,i){return JSON.parse(JSON.stringify(e),(t,n)=>{switch(n){case D:return i;default:return n}})}function w(e,i){return Object.entries(e).reduce((t,[n,r])=>i(n)?{...t,[n]:r}:t,{})}function y(e,i,t,n,r){let a=JSON.stringify({Status:i,Reason:t,PhysicalResourceId:n,StackId:e.StackId,RequestId:e.RequestId,LogicalResourceId:e.LogicalResourceId,NoEcho:!1,Data:r});console.log("Responding",a);let o=require("url").parse(e.ResponseURL),s={hostname:o.hostname,path:o.path,method:"PUT",headers:{"content-type":"","content-length":Buffer.byteLength(a,"utf8")}};return new Promise((d,l)=>{try{let c=require("https").request(s,d);c.on("error",l),c.write(a),c.end()}catch(c){l(c)}})}function m(e){if(e)return JSON.parse(e)}function M(e){return function(i){for(let t of e)if(i.startsWith(t))return!0;return!1}}var D,le,b=S(()=>{"use strict";D="PHYSICAL:RESOURCEID:",le=new TextDecoder});var N={};f(N,{forceSdkInstallation:()=>de,handler:()=>me});function de(){E=!1}function pe(){console.log("Installing latest AWS SDK v2"),(0,B.execSync)("HOME=/tmp npm install aws-sdk@2 --production --no-package-lock --no-save --prefix /tmp"),E=!0}function Se(e){let i=e.apiLoader;return ge.forEach(({serviceName:t,apiVersions:n})=>{let r=t.toLowerCase();e.Service.hasService(r)?e.Service.addVersions(e[t],n):(i.services[r]={},e[t]=e.Service.defineService(r,n)),n.forEach(a=>{Object.defineProperty(i.services[r],a,{get:function(){let s=`aws-sdk-patch/${r}-${a}`,d=JSON.parse(L.readFileSync((0,O.join)(__dirname,`${s}.service.json`),"utf-8"));return d.paginators=JSON.parse(L.readFileSync((0,O.join)(__dirname,`${s}.paginators.json`),"utf-8")).pagination,d},enumerable:!0,configurable:!0})})}),e}async function me(e,i){try{let t;if(!E&&e.ResourceProperties.InstallLatestAwsSdk==="true")try{pe(),t=require("/tmp/node_modules/aws-sdk")}catch(s){console.log(`Failed to install latest AWS SDK v2: ${s}`),t=require("aws-sdk")}else E?t=require("/tmp/node_modules/aws-sdk"):t=require("aws-sdk");try{t=Se(t)}catch(s){console.log(`Failed to patch AWS SDK: ${s}. Proceeding with the installed copy.`)}console.log(JSON.stringify({...e,ResponseURL:"..."})),console.log("AWS SDK VERSION: "+t.VERSION),e.ResourceProperties.Create=m(e.ResourceProperties.Create),e.ResourceProperties.Update=m(e.ResourceProperties.Update),e.ResourceProperties.Delete=m(e.ResourceProperties.Delete);let n;switch(e.RequestType){case"Create":n=e.ResourceProperties.Create?.physicalResourceId?.id??e.ResourceProperties.Update?.physicalResourceId?.id??e.ResourceProperties.Delete?.physicalResourceId?.id??e.LogicalResourceId;break;case"Update":case"Delete":n=e.ResourceProperties[e.RequestType]?.physicalResourceId?.id??e.PhysicalResourceId;break}let r={},a={},o=e.ResourceProperties[e.RequestType];if(o){let s;if(o.assumedRoleArn){let l=new Date().getTime(),c={RoleArn:o.assumedRoleArn,RoleSessionName:`${l}-${n}`.substring(0,64)};s=new t.ChainableTemporaryCredentials({params:c,stsConfig:{stsRegionalEndpoints:"regional"}})}if(!Object.prototype.hasOwnProperty.call(t,o.service))throw Error(`Service ${o.service} does not exist in AWS SDK version ${t.VERSION}.`);let d=new t[o.service]({apiVersion:o.apiVersion,credentials:s,region:o.region});try{let l=await d[o.action](o.parameters&&P(o.parameters,n)).promise();r={apiVersion:d.config.apiVersion,region:d.config.region,...k(l)};let c;o.outputPath?c=[o.outputPath]:o.outputPaths&&(c=o.outputPaths),c?a=w(r,M(c)):a=r}catch(l){if(!o.ignoreErrorCodesMatching||!new RegExp(o.ignoreErrorCodesMatching).test(l.code))throw l}o.physicalResourceId?.responsePath&&(n=r[o.physicalResourceId.responsePath])}await y(e,"SUCCESS","OK",n,a)}catch(t){console.log(t),await y(e,"FAILED",t.message||"Internal Error",i.logStreamName,{})}}var B,L,O,E,ge,K=S(()=>{"use strict";B=require("child_process"),L=v(require("fs")),O=require("path");b();E=!1;ge=[]});var G,q=S(()=>{"use strict";G=["ACM","ACMPCA","APIGateway","ARCZonalShift","AccessAnalyzer","Account","AlexaForBusiness","Amp","Amplify","AmplifyBackend","AmplifyUIBuilder","ApiGatewayManagementApi","ApiGatewayV2","AppConfig","AppConfigData","AppIntegrations","AppMesh","AppRunner","AppStream","AppSync","Appflow","ApplicationAutoScaling","ApplicationCostProfiler","ApplicationInsights","Athena","AuditManager","AugmentedAIRuntime","AutoScaling","AutoScalingPlans","Backup","BackupGateway","BackupStorage","Batch","Billingconductor","Braket","Budgets","CUR","Chime","ChimeSDKIdentity","ChimeSDKMediaPipelines","ChimeSDKMeetings","ChimeSDKMessaging","ChimeSDKVoice","Cloud9","CloudControl","CloudDirectory","CloudFormation","CloudFront","CloudHSM","CloudHSMV2","CloudSearch","CloudSearchDomain","CloudTrail","CloudWatch","CloudWatchEvents","CloudWatchLogs","CodeArtifact","CodeBuild","CodeCatalyst","CodeCommit","CodeDeploy","CodeGuruProfiler","CodeGuruReviewer","CodePipeline","CodeStar","CodeStarNotifications","CodeStarconnections","CognitoIdentity","CognitoIdentityServiceProvider","CognitoSync","Comprehend","ComprehendMedical","ComputeOptimizer","ConfigService","Connect","ConnectCampaigns","ConnectCases","ConnectContactLens","ConnectParticipant","ControlTower","CostExplorer","CustomerProfiles","DAX","DLM","DMS","DataBrew","DataExchange","DataPipeline","DataSync","Detective","DevOpsGuru","DeviceFarm","DirectConnect","DirectoryService","Discovery","DocDB","DocDBElastic","Drs","DynamoDB","DynamoDBStreams","EBS","EC2","EC2InstanceConnect","ECR","ECRPUBLIC","ECS","EFS","EKS","ELB","ELBv2","EMR","EMRServerless","EMRcontainers","ES","ElastiCache","ElasticBeanstalk","ElasticInference","ElasticTranscoder","EventBridge","Evidently","FMS","FSx","Finspace","Finspacedata","Firehose","Fis","ForecastQueryService","ForecastService","FraudDetector","GameLift","GameSparks","Glacier","GlobalAccelerator","Glue","Grafana","Greengrass","GreengrassV2","GroundStation","GuardDuty","Health","HealthLake","Honeycode","IAM","IVS","IdentityStore","Imagebuilder","Inspector","Inspector2","IoT1ClickDevicesService","IoT1ClickProjects","IoTAnalytics","IoTEvents","IoTEventsData","IoTFleetHub","IoTFleetWise","IoTJobsDataPlane","IoTRoboRunner","IoTSecureTunneling","IoTSiteWise","IoTThingsGraph","IoTTwinMaker","IoTWireless","Iot","IotData","IotDeviceAdvisor","Ivschat","KMS","Kafka","KafkaConnect","Kendra","Keyspaces","Kinesis","KinesisAnalytics","KinesisAnalyticsV2","KinesisVideo","KinesisVideoArchivedMedia","KinesisVideoMedia","KinesisVideoSignalingChannels","KinesisVideoWebRTCStorage","LakeFormation","Lambda","LexModelBuildingService","LexModelsV2","LexRuntime","LexRuntimeV2","LicenseManager","LicenseManagerLinuxSubscriptions","LicenseManagerUserSubscriptions","Lightsail","Location","LookoutEquipment","LookoutMetrics","LookoutVision","M2","MQ","MTurk","MWAA","MachineLearning","Macie","Macie2","ManagedBlockchain","MarketplaceCatalog","MarketplaceCommerceAnalytics","MarketplaceEntitlementService","MarketplaceMetering","MediaConnect","MediaConvert","MediaLive","MediaPackage","MediaPackageVod","MediaStore","MediaStoreData","MediaTailor","MemoryDB","Mgn","MigrationHub","MigrationHubConfig","MigrationHubOrchestrator","MigrationHubRefactorSpaces","MigrationHubStrategy","Mobile","Neptune","NetworkFirewall","NetworkManager","Nimble","OAM","Omics","OpenSearch","OpenSearchServerless","OpsWorks","OpsWorksCM","Organizations","Outposts","PI","Panorama","Personalize","PersonalizeEvents","PersonalizeRuntime","Pinpoint","PinpointEmail","PinpointSMSVoice","PinpointSMSVoiceV2","Pipes","Polly","Pricing","PrivateNetworks","Proton","QLDB","QLDBSession","QuickSight","RAM","RDS","RDSDataService","RUM","Rbin","Redshift","RedshiftData","RedshiftServerless","Rekognition","Resiliencehub","ResourceExplorer2","ResourceGroups","ResourceGroupsTaggingAPI","RoboMaker","RolesAnywhere","Route53","Route53Domains","Route53RecoveryCluster","Route53RecoveryControlConfig","Route53RecoveryReadiness","Route53Resolver","S3","S3Control","S3Outposts","SES","SESV2","SMS","SNS","SQS","SSM","SSMContacts","SSMIncidents","SSO","SSOAdmin","SSOOIDC","STS","SWF","SageMaker","SageMakerFeatureStoreRuntime","SageMakerGeospatial","SageMakerMetrics","SageMakerRuntime","SagemakerEdge","SavingsPlans","Scheduler","Schemas","SecretsManager","SecurityHub","SecurityLake","ServerlessApplicationRepository","ServiceCatalog","ServiceCatalogAppRegistry","ServiceDiscovery","ServiceQuotas","Shield","Signer","SimSpaceWeaver","SnowDeviceManagement","Snowball","SsmSap","StepFunctions","StorageGateway","Support","SupportApp","Synthetics","Textract","TimestreamQuery","TimestreamWrite","TranscribeService","Transfer","Translate","VoiceID","WAF","WAFRegional","WAFV2","WellArchitected","Wisdom","WorkDocs","WorkLink","WorkMail","WorkMailMessageFlow","WorkSpaces","WorkSpacesWeb","XRay"]});var W,$=S(()=>{"use strict";q();W={...G.reduce((e,i)=>({...e,[i]:`client-${i.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase()}`.replace("-chime-sdk","-chime-sdk-").replace("client-amplify-","client-amplify").replace("client-cloud-","client-cloud").replace("client-code-","client-code").replace("client-connect-","client-connect").replace("client-data-","client-data").replace("client-io-t","client-iot-").replace("client-iot-fleet-","client-iotfleet").replace("client-lookout-","client-lookout").replace("client-media-","client-media").replace("client-migration-hub-","client-migrationhub").replace("client-pinpoint-sms","client-pinpoint-sms-").replace("client-route53","client-route53-").replace("client-sage-maker","client-sagemaker").replace("client-security-","client-security").replace("client-work-","client-work")}),{}),AccessAnalyzer:"client-accessanalyzer",ACMPCA:"client-acm-pca",APIGateway:"client-api-gateway",ApiGatewayManagementApi:"client-apigatewaymanagementapi",ApiGatewayV2:"client-apigatewayv2",AppConfig:"client-appconfig",AppConfigData:"client-appconfigdata",AppIntegrations:"client-appintegrations",AppRunner:"client-apprunner",AppStream:"client-appstream",AppSync:"client-appsync",ApplicationCostProfiler:"client-applicationcostprofiler",ARCZonalShift:"client-arc-zonal-shift",AugmentedAIRuntime:"client-sage-maker-a2iruntime",AuditManager:"client-auditmanager",BackupStorage:"client-backupstorage",CUR:"client-cost-and-usage-report-service",CloudHSMV2:"client-cloudhsm-v2",CodeGuruProfiler:"client-codeguruprofiler",CodeStarconnections:"client-codestar-connections",CognitoIdentityServiceProvider:"client-cognito-identity-provider",ComprehendMedical:"client-comprehendmedical",ConnectContactLens:"client-connect-contact-lens",ControlTower:"client-controltower",DMS:"client-database-migration-service",DataPipeline:"client-data-pipeline",Discovery:"client-application-discovery-service",DevOpsGuru:"client-devops-guru",DynamoDB:"client-dynamodb",DynamoDBStreams:"client-dynamodb-streams",DocDB:"client-docdb",DocDBElastic:"client-docdb-elastic",EC2InstanceConnect:"client-ec2-instance-connect",ECRPUBLIC:"client-ecr-public",ELB:"client-elastic-load-balancing",ELBv2:"client-elastic-load-balancing-v2",ElastiCache:"client-elasticache",EMRcontainers:"client-emr-containers",EMRServerless:"client-emr-serverless",ES:"client-elasticsearch-service",EventBridge:"client-eventbridge",Finspacedata:"client-finspace-data",ForecastQueryService:"client-forecastquery",ForecastService:"client-forecast",FraudDetector:"client-frauddetector",GameLift:"client-gamelift",GameSparks:"client-gamesparks",GreengrassV2:"client-greengrassv2",GroundStation:"client-groundstation",GuardDuty:"client-guardduty",HealthLake:"client-healthlake",IdentityStore:"client-identitystore",IoTAnalytics:"client-iotanalytics",IotData:"client-iot-data-plane",IotDeviceAdvisor:"client-iotdeviceadvisor",IoTSecureTunneling:"client-iotsecuretunneling",IoTSiteWise:"client-iotsitewise",IoTThingsGraph:"client-iotthingsgraph",IoTTwinMaker:"client-iottwinmaker",IoTRoboRunner:"client-iot-roborunner",KafkaConnect:"client-kafkaconnect",KinesisVideoSignalingChannels:"client-kinesis-video-signaling",KinesisVideoWebRTCStorage:"client-kinesis-video-webrtc-storage",LakeFormation:"client-lakeformation",LexRuntime:"client-lex-runtime-service",ManagedBlockchain:"client-managedblockchain",MigrationHubConfig:"client-migrationhub-config",MigrationHubRefactorSpaces:"client-migration-hub-refactor-spaces",NetworkManager:"client-networkmanager",OpenSearch:"client-opensearch",OpenSearchServerless:"client-opensearchserverless",OpsWorks:"client-opsworks",OpsWorksCM:"client-opsworkscm",PrivateNetworks:"client-privatenetworks",QLDBSession:"client-qldb-session",QuickSight:"client-quicksight",ResourceExplorer2:"client-resource-explorer-2",RDSDataService:"client-rds-data",RoboMaker:"client-robomaker",RolesAnywhere:"client-rolesanywhere",Route53:"client-route-53",Route53Domains:"client-route-53-domains",Route53Resolver:"client-route53resolver",S3Control:"client-s3-control",SageMakerFeatureStoreRuntime:"client-sagemaker-featurestore-runtime",SavingsPlans:"client-savingsplans",SecurityHub:"client-securityhub",ServerlessApplicationRepository:"client-serverlessapplicationrepository",ServiceCatalogAppRegistry:"client-service-catalog-appregistry",ServiceDiscovery:"client-servicediscovery",SimSpaceWeaver:"client-simspaceweaver",SSMContacts:"client-ssm-contacts",SSMIncidents:"client-ssm-incidents",SSOAdmin:"client-sso-admin",SSOOIDC:"client-sso-oidc",StepFunctions:"client-sfn",TranscribeService:"client-transcribe",WAFRegional:"client-waf-regional",WellArchitected:"client-wellarchitected",WorkMailMessageFlow:"client-workmailmessageflow"}});var U={};f(U,{getV3ClientPackageName:()=>T});var T,V=S(()=>{"use strict";$();T=e=>{if(e in W)return`@aws-sdk/${W[e]}`;throw new Error(`Client '${e}' is either deprecated or newly added. Please consider using the v3 package format (@aws-sdk/client-xxx).`)}});var j={};f(j,{findV3ClientConstructor:()=>x});function x(e){let[i,t]=Object.entries(e).find(([n])=>n.endsWith("Client")&&n!=="__Client");return t}var F=S(()=>{"use strict"});var H={};f(H,{getV3Client:()=>Ce,getV3Command:()=>ye,loadV3ClientPackage:()=>fe});function fe(e){let i=e.startsWith("@aws-sdk/")?e:T(e);try{let t=require(i),{version:n}=require(i+"/package.json");return{service:i.replace("@aws-sdk/client-",""),pkg:t,packageName:i,packageVersion:n}}catch{throw Error(`Service ${e} client package with name '${i}' does not exist.`)}}function Ce(e,i={}){try{let t=x(e.pkg);return new t(i)}catch{throw Error(`No client constructor found within package: ${e.packageName}`)}}function ye(e,i){let t=i.endsWith("Command")?i:`${i}Command`,n=Object.entries(e.pkg).find(([r])=>r.toLowerCase()===t.toLowerCase())?.[1];if(!n)throw new Error(`Unable to find command named: ${t} for api: ${i} in service package`);return n}var Q=S(()=>{"use strict";F();V()});var z=ce(u=>{"use strict";var he=u&&u.__createBinding||(Object.create?function(e,i,t,n){n===void 0&&(n=t);var r=Object.getOwnPropertyDescriptor(i,t);(!r||("get"in r?!i.__esModule:r.writable||r.configurable))&&(r={enumerable:!0,get:function(){return i[t]}}),Object.defineProperty(e,n,r)}:function(e,i,t,n){n===void 0&&(n=t),e[n]=i[t]}),Re=u&&u.__exportStar||function(e,i){for(var t in e)t!=="default"&&!Object.prototype.hasOwnProperty.call(i,t)&&he(i,e,t)};Object.defineProperty(u,"__esModule",{value:!0});u.findV3ClientConstructor=u.getV3ClientPackageName=void 0;var Ae=(V(),C(U));Object.defineProperty(u,"getV3ClientPackageName",{enumerable:!0,get:function(){return Ae.getV3ClientPackageName}});var ke=(F(),C(j));Object.defineProperty(u,"findV3ClientConstructor",{enumerable:!0,get:function(){return ke.findV3ClientConstructor}});Re((Q(),C(H)),u)});var X={};f(X,{forceSdkInstallation:()=>Pe,handler:()=>be});function Pe(){h={}}function we(e){console.log(`Installing latest AWS SDK v3: ${e}`),(0,J.execSync)(`NPM_CONFIG_UPDATE_NOTIFIER=false HOME=/tmp npm install ${e} --omit=dev --no-package-lock --no-save --prefix /tmp`),h={...h,[e]:!0}}async function Me(e,i){let t;try{if(!h[e]&&i==="true")try{we(e),t=require(`/tmp/node_modules/${e}`)}catch(n){return console.log(`Failed to install latest AWS SDK v3. Falling back to pre-installed version. Error: ${n}`),require(e)}else h[e]?t=require(`/tmp/node_modules/${e}`):t=require(e)}catch{throw Error(`Package ${e} does not exist.`)}return t}async function be(e,i){try{e.ResourceProperties.Create=m(e.ResourceProperties.Create),e.ResourceProperties.Update=m(e.ResourceProperties.Update),e.ResourceProperties.Delete=m(e.ResourceProperties.Delete);let t={},n;switch(e.RequestType){case"Create":n=e.ResourceProperties.Create?.physicalResourceId?.id??e.ResourceProperties.Update?.physicalResourceId?.id??e.ResourceProperties.Delete?.physicalResourceId?.id??e.LogicalResourceId;break;case"Update":case"Delete":n=e.ResourceProperties[e.RequestType]?.physicalResourceId?.id??e.PhysicalResourceId;break}let r=e.ResourceProperties[e.RequestType];if(r){let a=r.service.startsWith("@aws-sdk/")?r.service:(0,I.getV3ClientPackageName)(r.service),o=Me(a,e.ResourceProperties.InstallLatestAwsSdk);console.log(JSON.stringify({...e,ResponseURL:"..."}));let s;if(r.assumedRoleArn){let p=new Date().getTime(),g={RoleArn:r.assumedRoleArn,RoleSessionName:`${p}-${n}`.substring(0,64)},{fromTemporaryCredentials:ie}=await import("@aws-sdk/credential-providers");s=ie({params:g,clientConfig:r.region!==void 0?{region:r.region}:void 0})}o=await o;let d=(0,I.findV3ClientConstructor)(o),l=new d({apiVersion:r.apiVersion,credentials:s,region:r.region}),c=r.action.endsWith("Command")?r.action:`${r.action}Command`,te=Object.entries(o).find(([p])=>p.toLowerCase()===c.toLowerCase())?.[1],R={};try{let p=await l.send(new te((r.parameters&&P(r.parameters,n))??{}));R={apiVersion:l.config.apiVersion,region:await l.config.region().catch(()=>{}),...k(p)};let g;r.outputPath?g=[r.outputPath]:r.outputPaths&&(g=r.outputPaths),g?t=w(R,M(g)):t=R}catch(p){let g=p.name??p.constructor.name;if(!r.ignoreErrorCodesMatching||!new RegExp(r.ignoreErrorCodesMatching).test(g))throw p}r.physicalResourceId?.responsePath&&(n=R[r.physicalResourceId.responsePath])}await y(e,"SUCCESS","OK",n,t)}catch(t){console.log(t),await y(e,"FAILED",t.message||"Internal Error",i.logStreamName,{})}}var J,I,h,Y=S(()=>{"use strict";J=require("child_process"),I=v(z());b();h={}});var Ie={};f(Ie,{PHYSICAL_RESOURCE_ID_REFERENCE:()=>D,handler:()=>Ee,v2handler:()=>Z,v3handler:()=>ee});module.exports=C(Ie);b();function Z(e,i){return(K(),C(N)).handler(e,i)}function ee(e,i){return(Y(),C(X)).handler(e,i)}function Ee(e,i){let t=process.env.AWS_EXECUTION_ENV;return t&&t>="AWS_Lambda_nodejs18.x"?ee(e,i):Z(e,i)}0&&(module.exports={PHYSICAL_RESOURCE_ID_REFERENCE,handler,v2handler,v3handler});
