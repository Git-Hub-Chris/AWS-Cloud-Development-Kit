{
 "Resources": {
  "FirstSourceAPIB0DE8D5A": {
   "Type": "AWS::AppSync::GraphQLApi",
   "Properties": {
    "AuthenticationType": "API_KEY",
    "Name": "FirstSourceAPI"
   }
  },
  "FirstSourceAPISchemaF2FDB692": {
   "Type": "AWS::AppSync::GraphQLSchema",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "FirstSourceAPIB0DE8D5A",
      "ApiId"
     ]
    },
    "Definition": "type firstTest {\n  version: String!\n}\ntype Query {\n  getFirstTests: [firstTest]!\n}\ntype Mutation {\n  addFirstTest(version: String!): firstTest\n}\n"
   }
  },
  "FirstSourceAPIDefaultApiKey9D9AE06D": {
   "Type": "AWS::AppSync::ApiKey",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "FirstSourceAPIB0DE8D5A",
      "ApiId"
     ]
    }
   },
   "DependsOn": [
    "FirstSourceAPISchemaF2FDB692"
   ]
  },
  "FirstSourceAPIFirstSourceDS6AD299B7": {
   "Type": "AWS::AppSync::DataSource",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "FirstSourceAPIB0DE8D5A",
      "ApiId"
     ]
    },
    "Name": "FirstSourceDS",
    "Type": "NONE"
   }
  },
  "SecondSourceAPIE903371D": {
   "Type": "AWS::AppSync::GraphQLApi",
   "Properties": {
    "AuthenticationType": "API_KEY",
    "Name": "SecondSourceAPI"
   }
  },
  "SecondSourceAPISchema65B7401E": {
   "Type": "AWS::AppSync::GraphQLSchema",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "SecondSourceAPIE903371D",
      "ApiId"
     ]
    },
    "Definition": "type secondTest {\n  version: String!\n}\ntype Query {\n  getSecondTests: [secondTest]!\n}\ntype Mutation {\n  addSecondTest(version: String!): secondTest\n}\n"
   }
  },
  "SecondSourceAPIDefaultApiKeyCE5A0A64": {
   "Type": "AWS::AppSync::ApiKey",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "SecondSourceAPIE903371D",
      "ApiId"
     ]
    }
   },
   "DependsOn": [
    "SecondSourceAPISchema65B7401E"
   ]
  },
  "SecondSourceAPISecondSourceDSEA46EBA7": {
   "Type": "AWS::AppSync::DataSource",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "SecondSourceAPIE903371D",
      "ApiId"
     ]
    },
    "Name": "SecondSourceDS",
    "Type": "NONE"
   }
  },
  "MergedApiExecutionRoleA4AA677D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "appsync.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "MergedApiExecutionRoleDefaultPolicy249A5507": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "appsync:SourceGraphQL",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "SourceApiAssociation17B8F97C7",
          "SourceApiArn"
         ]
        },
        {
         "Fn::GetAtt": [
          "SourceApiAssociation254340D38",
          "SourceApiArn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SourceApiAssociation17B8F97C7",
             "SourceApiArn"
            ]
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SourceApiAssociation254340D38",
             "SourceApiArn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "MergedApiExecutionRoleDefaultPolicy249A5507",
    "Roles": [
     {
      "Ref": "MergedApiExecutionRoleA4AA677D"
     }
    ]
   }
  },
  "MergedAPI08D3EAD1": {
   "Type": "AWS::AppSync::GraphQLApi",
   "Properties": {
    "ApiType": "MERGED",
    "AuthenticationType": "API_KEY",
    "MergedApiExecutionRoleArn": {
     "Fn::GetAtt": [
      "MergedApiExecutionRoleA4AA677D",
      "Arn"
     ]
    },
    "Name": "MergedAPI"
   }
  },
  "MergedAPIDefaultApiKeyAF5EA13C": {
   "Type": "AWS::AppSync::ApiKey",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "MergedAPI08D3EAD1",
      "ApiId"
     ]
    }
   }
  },
  "SourceApiAssociation17B8F97C7": {
   "Type": "AWS::AppSync::SourceApiAssociation",
   "Properties": {
    "MergedApiIdentifier": {
     "Fn::GetAtt": [
      "MergedAPI08D3EAD1",
      "Arn"
     ]
    },
    "SourceApiAssociationConfig": {
     "MergeType": "MANUAL_MERGE"
    },
    "SourceApiIdentifier": {
     "Fn::GetAtt": [
      "FirstSourceAPIB0DE8D5A",
      "Arn"
     ]
    }
   }
  },
  "SourceApiAssociation254340D38": {
   "Type": "AWS::AppSync::SourceApiAssociation",
   "Properties": {
    "MergedApiIdentifier": {
     "Fn::GetAtt": [
      "MergedAPI08D3EAD1",
      "Arn"
     ]
    },
    "SourceApiAssociationConfig": {
     "MergeType": "MANUAL_MERGE"
    },
    "SourceApiIdentifier": {
     "Fn::GetAtt": [
      "SecondSourceAPIE903371D",
      "Arn"
     ]
    }
   }
  },
  "SchemaMergeProviderMergeSourceApiSchemaLambdaServiceRole81CD71F1": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "SchemaMergeProviderMergeSourceApiSchemaLambdaServiceRoleDefaultPolicy0290F46A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "appsync:StartSchemaMerge",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "SourceApiAssociation17B8F97C7",
          "AssociationArn"
         ]
        },
        {
         "Fn::GetAtt": [
          "SourceApiAssociation254340D38",
          "AssociationArn"
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "SchemaMergeProviderMergeSourceApiSchemaLambdaServiceRoleDefaultPolicy0290F46A",
    "Roles": [
     {
      "Ref": "SchemaMergeProviderMergeSourceApiSchemaLambdaServiceRole81CD71F1"
     }
    ]
   }
  },
  "SchemaMergeProviderMergeSourceApiSchemaLambda543A744A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "6368fdfec5f79fa1d0cea965d895d01b71b6805c7b26eb89f8d0d01421fb4839.zip"
    },
    "Environment": {
     "Variables": {
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.onEvent",
    "Role": {
     "Fn::GetAtt": [
      "SchemaMergeProviderMergeSourceApiSchemaLambdaServiceRole81CD71F1",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 120
   },
   "DependsOn": [
    "SchemaMergeProviderMergeSourceApiSchemaLambdaServiceRoleDefaultPolicy0290F46A",
    "SchemaMergeProviderMergeSourceApiSchemaLambdaServiceRole81CD71F1"
   ]
  },
  "SchemaMergeProviderPollSourceApiMergeLambdaServiceRole6D3B457F": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "SchemaMergeProviderPollSourceApiMergeLambdaServiceRoleDefaultPolicy73AE6B3D": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "appsync:GetSourceApiAssociation",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "SourceApiAssociation17B8F97C7",
          "AssociationArn"
         ]
        },
        {
         "Fn::GetAtt": [
          "SourceApiAssociation254340D38",
          "AssociationArn"
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "SchemaMergeProviderPollSourceApiMergeLambdaServiceRoleDefaultPolicy73AE6B3D",
    "Roles": [
     {
      "Ref": "SchemaMergeProviderPollSourceApiMergeLambdaServiceRole6D3B457F"
     }
    ]
   }
  },
  "SchemaMergeProviderPollSourceApiMergeLambda1580B930": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "6368fdfec5f79fa1d0cea965d895d01b71b6805c7b26eb89f8d0d01421fb4839.zip"
    },
    "Environment": {
     "Variables": {
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.isComplete",
    "Role": {
     "Fn::GetAtt": [
      "SchemaMergeProviderPollSourceApiMergeLambdaServiceRole6D3B457F",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 120
   },
   "DependsOn": [
    "SchemaMergeProviderPollSourceApiMergeLambdaServiceRoleDefaultPolicy73AE6B3D",
    "SchemaMergeProviderPollSourceApiMergeLambdaServiceRole6D3B457F"
   ]
  },
  "SchemaMergeProviderSchemaMergeOperationProviderframeworkonEventServiceRoleE2D5067B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "SchemaMergeProviderSchemaMergeOperationProviderframeworkonEventServiceRoleDefaultPolicy97594CC2": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "SchemaMergeProviderMergeSourceApiSchemaLambda543A744A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "SchemaMergeProviderPollSourceApiMergeLambda1580B930",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SchemaMergeProviderMergeSourceApiSchemaLambda543A744A",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SchemaMergeProviderPollSourceApiMergeLambda1580B930",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "states:StartExecution",
       "Effect": "Allow",
       "Resource": {
        "Ref": "SchemaMergeProviderSchemaMergeOperationProviderwaiterstatemachine96F012AD"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "SchemaMergeProviderSchemaMergeOperationProviderframeworkonEventServiceRoleDefaultPolicy97594CC2",
    "Roles": [
     {
      "Ref": "SchemaMergeProviderSchemaMergeOperationProviderframeworkonEventServiceRoleE2D5067B"
     }
    ]
   }
  },
  "SchemaMergeProviderSchemaMergeOperationProviderframeworkonEvent9D29F6F0": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "d002370061965c69bc4caf15dddb5eccc9df318933ade6e4fa57cddb81c5abef.zip"
    },
    "Description": "AWS CDK resource provider framework - onEvent (stack/SchemaMergeProvider/SchemaMergeOperationProvider)",
    "Environment": {
     "Variables": {
      "USER_ON_EVENT_FUNCTION_ARN": {
       "Fn::GetAtt": [
        "SchemaMergeProviderMergeSourceApiSchemaLambda543A744A",
        "Arn"
       ]
      },
      "USER_IS_COMPLETE_FUNCTION_ARN": {
       "Fn::GetAtt": [
        "SchemaMergeProviderPollSourceApiMergeLambda1580B930",
        "Arn"
       ]
      },
      "WAITER_STATE_MACHINE_ARN": {
       "Ref": "SchemaMergeProviderSchemaMergeOperationProviderwaiterstatemachine96F012AD"
      }
     }
    },
    "Handler": "framework.onEvent",
    "Role": {
     "Fn::GetAtt": [
      "SchemaMergeProviderSchemaMergeOperationProviderframeworkonEventServiceRoleE2D5067B",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 900
   },
   "DependsOn": [
    "SchemaMergeProviderSchemaMergeOperationProviderframeworkonEventServiceRoleDefaultPolicy97594CC2",
    "SchemaMergeProviderSchemaMergeOperationProviderframeworkonEventServiceRoleE2D5067B"
   ]
  },
  "SchemaMergeProviderSchemaMergeOperationProviderframeworkisCompleteServiceRoleE8BF458E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "SchemaMergeProviderSchemaMergeOperationProviderframeworkisCompleteServiceRoleDefaultPolicy6CF7E75E": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "SchemaMergeProviderMergeSourceApiSchemaLambda543A744A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "SchemaMergeProviderPollSourceApiMergeLambda1580B930",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SchemaMergeProviderMergeSourceApiSchemaLambda543A744A",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SchemaMergeProviderPollSourceApiMergeLambda1580B930",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "SchemaMergeProviderSchemaMergeOperationProviderframeworkisCompleteServiceRoleDefaultPolicy6CF7E75E",
    "Roles": [
     {
      "Ref": "SchemaMergeProviderSchemaMergeOperationProviderframeworkisCompleteServiceRoleE8BF458E"
     }
    ]
   }
  },
  "SchemaMergeProviderSchemaMergeOperationProviderframeworkisComplete14D47EC2": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "d002370061965c69bc4caf15dddb5eccc9df318933ade6e4fa57cddb81c5abef.zip"
    },
    "Description": "AWS CDK resource provider framework - isComplete (stack/SchemaMergeProvider/SchemaMergeOperationProvider)",
    "Environment": {
     "Variables": {
      "USER_ON_EVENT_FUNCTION_ARN": {
       "Fn::GetAtt": [
        "SchemaMergeProviderMergeSourceApiSchemaLambda543A744A",
        "Arn"
       ]
      },
      "USER_IS_COMPLETE_FUNCTION_ARN": {
       "Fn::GetAtt": [
        "SchemaMergeProviderPollSourceApiMergeLambda1580B930",
        "Arn"
       ]
      }
     }
    },
    "Handler": "framework.isComplete",
    "Role": {
     "Fn::GetAtt": [
      "SchemaMergeProviderSchemaMergeOperationProviderframeworkisCompleteServiceRoleE8BF458E",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 900
   },
   "DependsOn": [
    "SchemaMergeProviderSchemaMergeOperationProviderframeworkisCompleteServiceRoleDefaultPolicy6CF7E75E",
    "SchemaMergeProviderSchemaMergeOperationProviderframeworkisCompleteServiceRoleE8BF458E"
   ]
  },
  "SchemaMergeProviderSchemaMergeOperationProviderframeworkonTimeoutServiceRole79C4B854": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "SchemaMergeProviderSchemaMergeOperationProviderframeworkonTimeoutServiceRoleDefaultPolicy267D92B2": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "SchemaMergeProviderMergeSourceApiSchemaLambda543A744A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "SchemaMergeProviderPollSourceApiMergeLambda1580B930",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SchemaMergeProviderMergeSourceApiSchemaLambda543A744A",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SchemaMergeProviderPollSourceApiMergeLambda1580B930",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "SchemaMergeProviderSchemaMergeOperationProviderframeworkonTimeoutServiceRoleDefaultPolicy267D92B2",
    "Roles": [
     {
      "Ref": "SchemaMergeProviderSchemaMergeOperationProviderframeworkonTimeoutServiceRole79C4B854"
     }
    ]
   }
  },
  "SchemaMergeProviderSchemaMergeOperationProviderframeworkonTimeout3F0EBB58": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "d002370061965c69bc4caf15dddb5eccc9df318933ade6e4fa57cddb81c5abef.zip"
    },
    "Description": "AWS CDK resource provider framework - onTimeout (stack/SchemaMergeProvider/SchemaMergeOperationProvider)",
    "Environment": {
     "Variables": {
      "USER_ON_EVENT_FUNCTION_ARN": {
       "Fn::GetAtt": [
        "SchemaMergeProviderMergeSourceApiSchemaLambda543A744A",
        "Arn"
       ]
      },
      "USER_IS_COMPLETE_FUNCTION_ARN": {
       "Fn::GetAtt": [
        "SchemaMergeProviderPollSourceApiMergeLambda1580B930",
        "Arn"
       ]
      }
     }
    },
    "Handler": "framework.onTimeout",
    "Role": {
     "Fn::GetAtt": [
      "SchemaMergeProviderSchemaMergeOperationProviderframeworkonTimeoutServiceRole79C4B854",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 900
   },
   "DependsOn": [
    "SchemaMergeProviderSchemaMergeOperationProviderframeworkonTimeoutServiceRoleDefaultPolicy267D92B2",
    "SchemaMergeProviderSchemaMergeOperationProviderframeworkonTimeoutServiceRole79C4B854"
   ]
  },
  "SchemaMergeProviderSchemaMergeOperationProviderwaiterstatemachineRole5EEBE5E9": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "states.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "SchemaMergeProviderSchemaMergeOperationProviderwaiterstatemachineRoleDefaultPolicyF0F8C916": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "SchemaMergeProviderSchemaMergeOperationProviderframeworkisComplete14D47EC2",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "SchemaMergeProviderSchemaMergeOperationProviderframeworkonTimeout3F0EBB58",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SchemaMergeProviderSchemaMergeOperationProviderframeworkisComplete14D47EC2",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SchemaMergeProviderSchemaMergeOperationProviderframeworkonTimeout3F0EBB58",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "SchemaMergeProviderSchemaMergeOperationProviderwaiterstatemachineRoleDefaultPolicyF0F8C916",
    "Roles": [
     {
      "Ref": "SchemaMergeProviderSchemaMergeOperationProviderwaiterstatemachineRole5EEBE5E9"
     }
    ]
   }
  },
  "SchemaMergeProviderSchemaMergeOperationProviderwaiterstatemachine96F012AD": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"framework-isComplete-task\",\"States\":{\"framework-isComplete-task\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"States.ALL\"],\"IntervalSeconds\":5,\"MaxAttempts\":360,\"BackoffRate\":1}],\"Catch\":[{\"ErrorEquals\":[\"States.ALL\"],\"Next\":\"framework-onTimeout-task\"}],\"Type\":\"Task\",\"Resource\":\"",
       {
        "Fn::GetAtt": [
         "SchemaMergeProviderSchemaMergeOperationProviderframeworkisComplete14D47EC2",
         "Arn"
        ]
       },
       "\"},\"framework-onTimeout-task\":{\"End\":true,\"Type\":\"Task\",\"Resource\":\"",
       {
        "Fn::GetAtt": [
         "SchemaMergeProviderSchemaMergeOperationProviderframeworkonTimeout3F0EBB58",
         "Arn"
        ]
       },
       "\"}}}"
      ]
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "SchemaMergeProviderSchemaMergeOperationProviderwaiterstatemachineRole5EEBE5E9",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "SchemaMergeProviderSchemaMergeOperationProviderwaiterstatemachineRoleDefaultPolicyF0F8C916",
    "SchemaMergeProviderSchemaMergeOperationProviderwaiterstatemachineRole5EEBE5E9"
   ]
  },
  "MergeOperation1SourceApiSchemaMergeOperationC6A79583": {
   "Type": "Custom::AppSyncSourceApiMergeOperation",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "SchemaMergeProviderSchemaMergeOperationProviderframeworkonEvent9D29F6F0",
      "Arn"
     ]
    },
    "associationId": {
     "Fn::GetAtt": [
      "SourceApiAssociation17B8F97C7",
      "AssociationId"
     ]
    },
    "mergedApiIdentifier": {
     "Fn::GetAtt": [
      "MergedAPI08D3EAD1",
      "Arn"
     ]
    },
    "sourceApiIdentifier": {
     "Fn::GetAtt": [
      "FirstSourceAPIB0DE8D5A",
      "Arn"
     ]
    },
    "versionIdentifier": "1"
   },
   "DependsOn": [
    "FirstSourceAPIDefaultApiKey9D9AE06D",
    "FirstSourceAPIFirstSourceDS6AD299B7",
    "FirstSourceAPIB0DE8D5A",
    "FirstSourceAPISchemaF2FDB692"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "MergeOperation2SourceApiSchemaMergeOperation8BB9FB65": {
   "Type": "Custom::AppSyncSourceApiMergeOperation",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "SchemaMergeProviderSchemaMergeOperationProviderframeworkonEvent9D29F6F0",
      "Arn"
     ]
    },
    "associationId": {
     "Fn::GetAtt": [
      "SourceApiAssociation254340D38",
      "AssociationId"
     ]
    },
    "mergedApiIdentifier": {
     "Fn::GetAtt": [
      "MergedAPI08D3EAD1",
      "Arn"
     ]
    },
    "sourceApiIdentifier": {
     "Fn::GetAtt": [
      "SecondSourceAPIE903371D",
      "Arn"
     ]
    },
    "versionIdentifier": "2"
   },
   "DependsOn": [
    "SecondSourceAPIDefaultApiKeyCE5A0A64",
    "SecondSourceAPIE903371D",
    "SecondSourceAPISchema65B7401E",
    "SecondSourceAPISecondSourceDSEA46EBA7"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}