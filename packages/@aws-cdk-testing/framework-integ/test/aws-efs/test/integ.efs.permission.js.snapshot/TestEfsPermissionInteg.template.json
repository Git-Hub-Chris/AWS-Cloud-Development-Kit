{
 "Resources": {
  "Vpc8378EB38": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "TestEfsPermissionInteg/Vpc"
     }
    ]
   }
  },
  "VpcPublicSubnet1Subnet5C2D37C4": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "Vpc8378EB38"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "TestEfsPermissionInteg/Vpc/PublicSubnet1"
     }
    ]
   }
  },
  "VpcPublicSubnet1RouteTable6C95E38E": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "Vpc8378EB38"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "TestEfsPermissionInteg/Vpc/PublicSubnet1"
     }
    ]
   }
  },
  "VpcPublicSubnet1RouteTableAssociation97140677": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
    },
    "SubnetId": {
     "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
    }
   }
  },
  "VpcPublicSubnet1DefaultRoute3DA9E72A": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VpcIGWD7BA715C"
    }
   },
   "DependsOn": [
    "VpcVPCGWBF912B6E"
   ]
  },
  "VpcPublicSubnet1EIPD7E02669": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "TestEfsPermissionInteg/Vpc/PublicSubnet1"
     }
    ]
   }
  },
  "VpcPublicSubnet1NATGateway4D7517AA": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "SubnetId": {
     "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
    },
    "AllocationId": {
     "Fn::GetAtt": [
      "VpcPublicSubnet1EIPD7E02669",
      "AllocationId"
     ]
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "TestEfsPermissionInteg/Vpc/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "VpcPublicSubnet1DefaultRoute3DA9E72A",
    "VpcPublicSubnet1RouteTableAssociation97140677"
   ]
  },
  "VpcPublicSubnet2Subnet691E08A3": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "Vpc8378EB38"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.64.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "TestEfsPermissionInteg/Vpc/PublicSubnet2"
     }
    ]
   }
  },
  "VpcPublicSubnet2RouteTable94F7E489": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "Vpc8378EB38"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "TestEfsPermissionInteg/Vpc/PublicSubnet2"
     }
    ]
   }
  },
  "VpcPublicSubnet2RouteTableAssociationDD5762D8": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPublicSubnet2RouteTable94F7E489"
    },
    "SubnetId": {
     "Ref": "VpcPublicSubnet2Subnet691E08A3"
    }
   }
  },
  "VpcPublicSubnet2DefaultRoute97F91067": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPublicSubnet2RouteTable94F7E489"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VpcIGWD7BA715C"
    }
   },
   "DependsOn": [
    "VpcVPCGWBF912B6E"
   ]
  },
  "VpcPublicSubnet2EIP3C605A87": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "TestEfsPermissionInteg/Vpc/PublicSubnet2"
     }
    ]
   }
  },
  "VpcPublicSubnet2NATGateway9182C01D": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "SubnetId": {
     "Ref": "VpcPublicSubnet2Subnet691E08A3"
    },
    "AllocationId": {
     "Fn::GetAtt": [
      "VpcPublicSubnet2EIP3C605A87",
      "AllocationId"
     ]
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "TestEfsPermissionInteg/Vpc/PublicSubnet2"
     }
    ]
   },
   "DependsOn": [
    "VpcPublicSubnet2DefaultRoute97F91067",
    "VpcPublicSubnet2RouteTableAssociationDD5762D8"
   ]
  },
  "VpcPrivateSubnet1Subnet536B997A": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "Vpc8378EB38"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.128.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "TestEfsPermissionInteg/Vpc/PrivateSubnet1"
     }
    ]
   }
  },
  "VpcPrivateSubnet1RouteTableB2C5B500": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "Vpc8378EB38"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "TestEfsPermissionInteg/Vpc/PrivateSubnet1"
     }
    ]
   }
  },
  "VpcPrivateSubnet1RouteTableAssociation70C59FA6": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
    },
    "SubnetId": {
     "Ref": "VpcPrivateSubnet1Subnet536B997A"
    }
   }
  },
  "VpcPrivateSubnet1DefaultRouteBE02A9ED": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VpcPublicSubnet1NATGateway4D7517AA"
    }
   }
  },
  "VpcPrivateSubnet2Subnet3788AAA1": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "Vpc8378EB38"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.192.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "TestEfsPermissionInteg/Vpc/PrivateSubnet2"
     }
    ]
   }
  },
  "VpcPrivateSubnet2RouteTableA678073B": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "Vpc8378EB38"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "TestEfsPermissionInteg/Vpc/PrivateSubnet2"
     }
    ]
   }
  },
  "VpcPrivateSubnet2RouteTableAssociationA89CAD56": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPrivateSubnet2RouteTableA678073B"
    },
    "SubnetId": {
     "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
    }
   }
  },
  "VpcPrivateSubnet2DefaultRoute060D2087": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPrivateSubnet2RouteTableA678073B"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VpcPublicSubnet2NATGateway9182C01D"
    }
   }
  },
  "VpcIGWD7BA715C": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "TestEfsPermissionInteg/Vpc"
     }
    ]
   }
  },
  "VpcVPCGWBF912B6E": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "VpcId": {
     "Ref": "Vpc8378EB38"
    },
    "InternetGatewayId": {
     "Ref": "VpcIGWD7BA715C"
    }
   }
  },
  "VpcRestrictDefaultSecurityGroupCustomResourceC73DA2BE": {
   "Type": "Custom::VpcRestrictDefaultSG",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E",
      "Arn"
     ]
    },
    "DefaultSecurityGroupId": {
     "Fn::GetAtt": [
      "Vpc8378EB38",
      "DefaultSecurityGroup"
     ]
    },
    "Account": {
     "Ref": "AWS::AccountId"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Action": [
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:AuthorizeSecurityGroupEgress",
          "ec2:RevokeSecurityGroupIngress",
          "ec2:RevokeSecurityGroupEgress"
         ],
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             "arn:",
             {
              "Ref": "AWS::Partition"
             },
             ":ec2:",
             {
              "Ref": "AWS::Region"
             },
             ":",
             {
              "Ref": "AWS::AccountId"
             },
             ":security-group/",
             {
              "Fn::GetAtt": [
               "Vpc8378EB38",
               "DefaultSecurityGroup"
              ]
             }
            ]
           ]
          }
         ]
        }
       ]
      }
     }
    ]
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "ba598c1f1d84f7077ea9c16a6b921e4f8acf18e996100e72a8f17da980e64fdd.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Description": "Lambda function for removing all inbound/outbound rules from the VPC default security group"
   },
   "DependsOn": [
    "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
   ]
  },
  "FileSystem8A8E25C0": {
   "Type": "AWS::EFS::FileSystem",
   "Properties": {
    "Encrypted": true,
    "FileSystemPolicy": {
     "Statement": [
      {
       "Action": [
        "elasticfilesystem:ClientRootAccess",
        "elasticfilesystem:ClientWrite"
       ],
       "Condition": {
        "Bool": {
         "elasticfilesystem:AccessedViaMountTarget": "true"
        }
       },
       "Effect": "Allow",
       "Principal": {
        "AWS": "*"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "FileSystemTags": [
     {
      "Key": "Name",
      "Value": "TestEfsPermissionInteg/FileSystem"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "FileSystemEfsSecurityGroup212D3ACB": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "TestEfsPermissionInteg/FileSystem/EfsSecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "TestEfsPermissionInteg/FileSystem"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   }
  },
  "FileSystemEfsSecurityGroupfromTestEfsPermissionIntegWriteInstanceInstanceSecurityGroup87F0F3182049FA7405C2": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "Description": "from TestEfsPermissionIntegWriteInstanceInstanceSecurityGroup87F0F318:2049",
    "FromPort": 2049,
    "GroupId": {
     "Fn::GetAtt": [
      "FileSystemEfsSecurityGroup212D3ACB",
      "GroupId"
     ]
    },
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "WriteInstanceInstanceSecurityGroupBB94A852",
      "GroupId"
     ]
    },
    "ToPort": 2049
   }
  },
  "FileSystemEfsSecurityGroupfromTestEfsPermissionIntegReadInstanceInstanceSecurityGroup5D77ED6D2049061C2933": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "Description": "from TestEfsPermissionIntegReadInstanceInstanceSecurityGroup5D77ED6D:2049",
    "FromPort": 2049,
    "GroupId": {
     "Fn::GetAtt": [
      "FileSystemEfsSecurityGroup212D3ACB",
      "GroupId"
     ]
    },
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "ReadInstanceInstanceSecurityGroup4E6DE54D",
      "GroupId"
     ]
    },
    "ToPort": 2049
   }
  },
  "FileSystemEfsSecurityGroupfromTestEfsPermissionIntegAnonymousInstanceInstanceSecurityGroup193F4B1A20495777E209": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "Description": "from TestEfsPermissionIntegAnonymousInstanceInstanceSecurityGroup193F4B1A:2049",
    "FromPort": 2049,
    "GroupId": {
     "Fn::GetAtt": [
      "FileSystemEfsSecurityGroup212D3ACB",
      "GroupId"
     ]
    },
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "AnonymousInstanceInstanceSecurityGroup648A5675",
      "GroupId"
     ]
    },
    "ToPort": 2049
   }
  },
  "FileSystemEfsMountTarget1586453F0": {
   "Type": "AWS::EFS::MountTarget",
   "Properties": {
    "FileSystemId": {
     "Ref": "FileSystem8A8E25C0"
    },
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "FileSystemEfsSecurityGroup212D3ACB",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "VpcPrivateSubnet1Subnet536B997A"
    }
   }
  },
  "FileSystemEfsMountTarget24B8EBB43": {
   "Type": "AWS::EFS::MountTarget",
   "Properties": {
    "FileSystemId": {
     "Ref": "FileSystem8A8E25C0"
    },
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "FileSystemEfsSecurityGroup212D3ACB",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
    }
   }
  },
  "WriteInstanceInstanceSecurityGroupBB94A852": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "TestEfsPermissionInteg/WriteInstance/InstanceSecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "TestEfsPermissionInteg/WriteInstance"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   }
  },
  "WriteInstanceInstanceRole74D7BFCC": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSSMManagedInstanceCore"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "TestEfsPermissionInteg/WriteInstance"
     }
    ]
   }
  },
  "WriteInstanceInstanceRoleDefaultPolicy692CCD00": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "cloudformation:DescribeStackResource",
        "cloudformation:SignalResource"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "AWS::StackId"
       }
      },
      {
       "Action": [
        "elasticfilesystem:ClientMount",
        "elasticfilesystem:ClientWrite"
       ],
       "Condition": {
        "Bool": {
         "elasticfilesystem:AccessedViaMountTarget": "true"
        }
       },
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "FileSystem8A8E25C0",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "WriteInstanceInstanceRoleDefaultPolicy692CCD00",
    "Roles": [
     {
      "Ref": "WriteInstanceInstanceRole74D7BFCC"
     }
    ]
   }
  },
  "WriteInstanceInstanceProfile6EEEF088": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "WriteInstanceInstanceRole74D7BFCC"
     }
    ]
   }
  },
  "WriteInstance7FF20E8Eb90cd3a29a6c7625": {
   "Type": "AWS::EC2::Instance",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "IamInstanceProfile": {
     "Ref": "WriteInstanceInstanceProfile6EEEF088"
    },
    "ImageId": {
     "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestal2023amikernel61arm64C96584B6F00A464EAD1953AFF4B05118Parameter"
    },
    "InstanceType": "t4g.nano",
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "WriteInstanceInstanceSecurityGroupBB94A852",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "VpcPrivateSubnet1Subnet536B997A"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "TestEfsPermissionInteg/WriteInstance"
     }
    ],
    "UserData": {
     "Fn::Base64": {
      "Fn::Join": [
       "",
       [
        "#!/bin/bash\n# fingerprint: be8fd20a37905a0b\n(\n  set +e\n  /opt/aws/bin/cfn-init -v --region ",
        {
         "Ref": "AWS::Region"
        },
        " --stack ",
        {
         "Ref": "AWS::StackName"
        },
        " --resource WriteInstance7FF20E8Eb90cd3a29a6c7625 -c default\n  /opt/aws/bin/cfn-signal -e $? --region ",
        {
         "Ref": "AWS::Region"
        },
        " --stack ",
        {
         "Ref": "AWS::StackName"
        },
        " --resource WriteInstance7FF20E8Eb90cd3a29a6c7625\n  cat /var/log/cfn-init.log >&2\n)"
       ]
      ]
     }
    }
   },
   "DependsOn": [
    "FileSystemEfsMountTarget1586453F0",
    "FileSystemEfsMountTarget24B8EBB43",
    "FileSystemEfsSecurityGroupfromTestEfsPermissionIntegAnonymousInstanceInstanceSecurityGroup193F4B1A20495777E209",
    "FileSystemEfsSecurityGroupfromTestEfsPermissionIntegReadInstanceInstanceSecurityGroup5D77ED6D2049061C2933",
    "FileSystemEfsSecurityGroupfromTestEfsPermissionIntegWriteInstanceInstanceSecurityGroup87F0F3182049FA7405C2",
    "FileSystemEfsSecurityGroup212D3ACB",
    "FileSystem8A8E25C0",
    "WriteInstanceInstanceRoleDefaultPolicy692CCD00",
    "WriteInstanceInstanceRole74D7BFCC"
   ],
   "CreationPolicy": {
    "ResourceSignal": {
     "Count": 1,
     "Timeout": "PT10M"
    }
   },
   "Metadata": {
    "AWS::CloudFormation::Init": {
     "configSets": {
      "default": [
       "config"
      ]
     },
     "config": {
      "commands": {
       "000": {
        "command": "dnf install -y amazon-efs-utils"
       },
       "001": {
        "command": "mkdir /mnt/efs"
       },
       "002": {
        "command": "sleep 5m"
       },
       "003": {
        "command": {
         "Fn::Join": [
          "",
          [
           "mount -t efs -o tls,iam ",
           {
            "Ref": "FileSystem8A8E25C0"
           },
           " /mnt/efs"
          ]
         ]
        }
       },
       "004": {
        "command": "echo 'Integ Test' | tee /mnt/efs/integ-test.txt"
       }
      }
     }
    }
   }
  },
  "ReadInstanceInstanceSecurityGroup4E6DE54D": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "TestEfsPermissionInteg/ReadInstance/InstanceSecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "TestEfsPermissionInteg/ReadInstance"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   }
  },
  "ReadInstanceInstanceRoleFE151AE8": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSSMManagedInstanceCore"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "TestEfsPermissionInteg/ReadInstance"
     }
    ]
   }
  },
  "ReadInstanceInstanceRoleDefaultPolicy54DA36A2": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "cloudformation:DescribeStackResource",
        "cloudformation:SignalResource"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "AWS::StackId"
       }
      },
      {
       "Action": "elasticfilesystem:ClientMount",
       "Condition": {
        "Bool": {
         "elasticfilesystem:AccessedViaMountTarget": "true"
        }
       },
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "FileSystem8A8E25C0",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ReadInstanceInstanceRoleDefaultPolicy54DA36A2",
    "Roles": [
     {
      "Ref": "ReadInstanceInstanceRoleFE151AE8"
     }
    ]
   }
  },
  "ReadInstanceInstanceProfile8FAC51BA": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "ReadInstanceInstanceRoleFE151AE8"
     }
    ]
   }
  },
  "ReadInstanceE94183C76867391ec2104698": {
   "Type": "AWS::EC2::Instance",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "IamInstanceProfile": {
     "Ref": "ReadInstanceInstanceProfile8FAC51BA"
    },
    "ImageId": {
     "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestal2023amikernel61arm64C96584B6F00A464EAD1953AFF4B05118Parameter"
    },
    "InstanceType": "t4g.nano",
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "ReadInstanceInstanceSecurityGroup4E6DE54D",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "VpcPrivateSubnet1Subnet536B997A"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "TestEfsPermissionInteg/ReadInstance"
     }
    ],
    "UserData": {
     "Fn::Base64": {
      "Fn::Join": [
       "",
       [
        "#!/bin/bash\n# fingerprint: 7966a6fe536e3753\n(\n  set +e\n  /opt/aws/bin/cfn-init -v --region ",
        {
         "Ref": "AWS::Region"
        },
        " --stack ",
        {
         "Ref": "AWS::StackName"
        },
        " --resource ReadInstanceE94183C76867391ec2104698 -c default\n  /opt/aws/bin/cfn-signal -e $? --region ",
        {
         "Ref": "AWS::Region"
        },
        " --stack ",
        {
         "Ref": "AWS::StackName"
        },
        " --resource ReadInstanceE94183C76867391ec2104698\n  cat /var/log/cfn-init.log >&2\n)"
       ]
      ]
     }
    }
   },
   "DependsOn": [
    "FileSystemEfsMountTarget1586453F0",
    "FileSystemEfsMountTarget24B8EBB43",
    "FileSystemEfsSecurityGroupfromTestEfsPermissionIntegAnonymousInstanceInstanceSecurityGroup193F4B1A20495777E209",
    "FileSystemEfsSecurityGroupfromTestEfsPermissionIntegReadInstanceInstanceSecurityGroup5D77ED6D2049061C2933",
    "FileSystemEfsSecurityGroupfromTestEfsPermissionIntegWriteInstanceInstanceSecurityGroup87F0F3182049FA7405C2",
    "FileSystemEfsSecurityGroup212D3ACB",
    "FileSystem8A8E25C0",
    "ReadInstanceInstanceRoleDefaultPolicy54DA36A2",
    "ReadInstanceInstanceRoleFE151AE8"
   ],
   "CreationPolicy": {
    "ResourceSignal": {
     "Count": 1,
     "Timeout": "PT10M"
    }
   },
   "Metadata": {
    "AWS::CloudFormation::Init": {
     "configSets": {
      "default": [
       "config"
      ]
     },
     "config": {
      "commands": {
       "000": {
        "command": "dnf install -y amazon-efs-utils"
       },
       "001": {
        "command": "mkdir /mnt/efs"
       },
       "002": {
        "command": "sleep 5m"
       },
       "003": {
        "command": {
         "Fn::Join": [
          "",
          [
           "mount -t efs -o tls,iam ",
           {
            "Ref": "FileSystem8A8E25C0"
           },
           " /mnt/efs"
          ]
         ]
        }
       }
      }
     }
    }
   }
  },
  "AnonymousInstanceInstanceSecurityGroup648A5675": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "TestEfsPermissionInteg/AnonymousInstance/InstanceSecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "TestEfsPermissionInteg/AnonymousInstance"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   }
  },
  "AnonymousInstanceInstanceRole174145F6": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSSMManagedInstanceCore"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "TestEfsPermissionInteg/AnonymousInstance"
     }
    ]
   }
  },
  "AnonymousInstanceInstanceRoleDefaultPolicy7A752F3D": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "cloudformation:DescribeStackResource",
        "cloudformation:SignalResource"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "AWS::StackId"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AnonymousInstanceInstanceRoleDefaultPolicy7A752F3D",
    "Roles": [
     {
      "Ref": "AnonymousInstanceInstanceRole174145F6"
     }
    ]
   }
  },
  "AnonymousInstanceInstanceProfile5C6B5DC3": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "AnonymousInstanceInstanceRole174145F6"
     }
    ]
   }
  },
  "AnonymousInstance51D4C7152602e043eee6300d": {
   "Type": "AWS::EC2::Instance",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "IamInstanceProfile": {
     "Ref": "AnonymousInstanceInstanceProfile5C6B5DC3"
    },
    "ImageId": {
     "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestal2023amikernel61arm64C96584B6F00A464EAD1953AFF4B05118Parameter"
    },
    "InstanceType": "t4g.nano",
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "AnonymousInstanceInstanceSecurityGroup648A5675",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "VpcPrivateSubnet1Subnet536B997A"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "TestEfsPermissionInteg/AnonymousInstance"
     }
    ],
    "UserData": {
     "Fn::Base64": {
      "Fn::Join": [
       "",
       [
        "#!/bin/bash\n# fingerprint: 0a4aed3288b47274\n(\n  set +e\n  /opt/aws/bin/cfn-init -v --region ",
        {
         "Ref": "AWS::Region"
        },
        " --stack ",
        {
         "Ref": "AWS::StackName"
        },
        " --resource AnonymousInstance51D4C7152602e043eee6300d -c default\n  /opt/aws/bin/cfn-signal -e $? --region ",
        {
         "Ref": "AWS::Region"
        },
        " --stack ",
        {
         "Ref": "AWS::StackName"
        },
        " --resource AnonymousInstance51D4C7152602e043eee6300d\n  cat /var/log/cfn-init.log >&2\n)"
       ]
      ]
     }
    }
   },
   "DependsOn": [
    "AnonymousInstanceInstanceRoleDefaultPolicy7A752F3D",
    "AnonymousInstanceInstanceRole174145F6"
   ],
   "CreationPolicy": {
    "ResourceSignal": {
     "Count": 1,
     "Timeout": "PT10M"
    }
   },
   "Metadata": {
    "AWS::CloudFormation::Init": {
     "configSets": {
      "default": [
       "config"
      ]
     },
     "config": {
      "commands": {
       "000": {
        "command": "dnf install -y amazon-efs-utils"
       },
       "001": {
        "command": "mkdir /mnt/efs"
       },
       "002": {
        "command": "sleep 5m"
       }
      }
     }
    }
   }
  }
 },
 "Parameters": {
  "SsmParameterValueawsserviceamiamazonlinuxlatestal2023amikernel61arm64C96584B6F00A464EAD1953AFF4B05118Parameter": {
   "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
   "Default": "/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-arm64"
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Outputs": {
  "ExportsOutputRefAnonymousInstance51D4C7152602e043eee6300d7C50D25E": {
   "Value": {
    "Ref": "AnonymousInstance51D4C7152602e043eee6300d"
   },
   "Export": {
    "Name": "TestEfsPermissionInteg:ExportsOutputRefAnonymousInstance51D4C7152602e043eee6300d7C50D25E"
   }
  },
  "ExportsOutputRefFileSystem8A8E25C0B454ACF3": {
   "Value": {
    "Ref": "FileSystem8A8E25C0"
   },
   "Export": {
    "Name": "TestEfsPermissionInteg:ExportsOutputRefFileSystem8A8E25C0B454ACF3"
   }
  },
  "ExportsOutputRefReadInstanceE94183C76867391ec2104698F9816D55": {
   "Value": {
    "Ref": "ReadInstanceE94183C76867391ec2104698"
   },
   "Export": {
    "Name": "TestEfsPermissionInteg:ExportsOutputRefReadInstanceE94183C76867391ec2104698F9816D55"
   }
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}