import { convertToCliArgs } from '../lib/convert-to-cli-args';

test('yargs object can be converted to cli arguments', async () => {
  // This input represents what would come out of yargs, i.e.
  // await parseCommandLineArguments(args);
  const input = {
    '_': ['deploy'],
    'notification-arns': ['[]'],
    'notificationArns': ['[]'],
    'v': 1,
    'verbose': 1,
    'lookups': true,
    'ignore-errors': false,
    'ignoreErrors': false,
    'json': false,
    'j': false,
    'debug': false,
    'ec2creds': undefined,
    'i': undefined,
    'version-reporting': undefined,
    'versionReporting': undefined,
    'path-metadata': undefined,
    'pathMetadata': undefined,
    'asset-metadata': undefined,
    'assetMetadata': undefined,
    'role-arn': undefined,
    'r': undefined,
    'roleArn': undefined,
    'staging': true,
    'no-color': false,
    'noColor': false,
    'ci': false,
    'unstable': [],
    'all': false,
    'build-exclude': [],
    'E': [],
    'buildExclude': [],
    'force': false,
    'f': false,
    'parameters': [{}],
    'previous-parameters': true,
    'previousParameters': true,
    'logs': true,
    'concurrency': 1,
    'asset-prebuild': true,
    'assetPrebuild': true,
    'ignore-no-stacks': false,
    'ignoreNoStacks': false,
  };

  const result = convertToCliArgs(input);

  expect(result).toEqual({
    _: ['deploy'],
    globalOptions: {
      app: undefined,
      assetMetadata: undefined,
      build: undefined,
      caBundlePath: undefined,
      context: undefined,
      ignoreErrors: false,
      noColor: false,
      pathMetadata: undefined,
      proxy: undefined,
      roleArn: undefined,
      staging: true,
      strict: undefined,
      verbose: 1,
      versionReporting: undefined,
      ci: false,
      debug: false,
      ec2creds: undefined,
      json: false,
      lookups: true,
      unstable: [],
      notices: undefined,
      output: undefined,
    },
    deploy: {
      all: false,
      assetParallelism: undefined,
      assetPrebuild: true,
      buildExclude: [],
      changeSetName: undefined,
      concurrency: 1,
      execute: undefined,
      exclusively: undefined,
      force: false,
      hotswap: undefined,
      hotswapFallback: undefined,
      ignoreNoStacks: false,
      logs: true,
      method: undefined,
      notificationArns: ['[]'],
      outputsFile: undefined,
      parameters: [{}],
      previousParameters: true,
      progress: undefined,
      requireApproval: undefined,
      rollback: undefined,
      tags: undefined,
      toolkitStackName: undefined,
      watch: undefined,
    },
  });
});
