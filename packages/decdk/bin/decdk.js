"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const cdk = require("@aws-cdk/core");
const chalk = require("chalk");
const lib_1 = require("../lib");
async function main() {
    const args = require('yargs')
        .usage('$0 <filename>', 'Hydrate a deconstruct file', (yargs) => {
        yargs.positional('filename', { type: 'string', required: true });
    })
        .parse();
    const templateFile = args.filename;
    const template = await lib_1.readTemplate(templateFile);
    const stackName = lib_1.stackNameFromFileName(templateFile);
    const typeSystem = await lib_1.loadTypeSystem();
    const app = new cdk.App();
    new lib_1.DeclarativeStack(app, stackName, { template, typeSystem });
    app.synth();
}
main().catch(e => {
    // eslint-disable-next-line no-console
    console.error(chalk.red(e));
    process.exit(1);
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVjZGsuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJkZWNkay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHFDQUFxQztBQUNyQywrQkFBK0I7QUFDL0IsZ0NBQStGO0FBRS9GLEtBQUssVUFBVSxJQUFJO0lBQ2pCLE1BQU0sSUFBSSxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUM7U0FDMUIsS0FBSyxDQUFDLGVBQWUsRUFBRSw0QkFBNEIsRUFBRSxDQUFDLEtBQVUsRUFBRSxFQUFFO1FBQ25FLEtBQUssQ0FBQyxVQUFVLENBQUMsVUFBVSxFQUFFLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQztJQUNuRSxDQUFDLENBQUM7U0FDRCxLQUFLLEVBQUUsQ0FBQztJQUVYLE1BQU0sWUFBWSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDbkMsTUFBTSxRQUFRLEdBQUcsTUFBTSxrQkFBWSxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQ2xELE1BQU0sU0FBUyxHQUFHLDJCQUFxQixDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQ3RELE1BQU0sVUFBVSxHQUFHLE1BQU0sb0JBQWMsRUFBRSxDQUFDO0lBRTFDLE1BQU0sR0FBRyxHQUFHLElBQUksR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDO0lBQzFCLElBQUksc0JBQWdCLENBQUMsR0FBRyxFQUFFLFNBQVMsRUFBRSxFQUFFLFFBQVEsRUFBRSxVQUFVLEVBQUUsQ0FBQyxDQUFDO0lBQy9ELEdBQUcsQ0FBQyxLQUFLLEVBQUUsQ0FBQztBQUNkLENBQUM7QUFFRCxJQUFJLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUU7SUFDZixzQ0FBc0M7SUFDdEMsT0FBTyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDNUIsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNsQixDQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGNkayBmcm9tICdAYXdzLWNkay9jb3JlJztcbmltcG9ydCAqIGFzIGNoYWxrIGZyb20gJ2NoYWxrJztcbmltcG9ydCB7IERlY2xhcmF0aXZlU3RhY2ssIGxvYWRUeXBlU3lzdGVtLCByZWFkVGVtcGxhdGUsIHN0YWNrTmFtZUZyb21GaWxlTmFtZSB9IGZyb20gJy4uL2xpYic7XG5cbmFzeW5jIGZ1bmN0aW9uIG1haW4oKSB7XG4gIGNvbnN0IGFyZ3MgPSByZXF1aXJlKCd5YXJncycpXG4gICAgLnVzYWdlKCckMCA8ZmlsZW5hbWU+JywgJ0h5ZHJhdGUgYSBkZWNvbnN0cnVjdCBmaWxlJywgKHlhcmdzOiBhbnkpID0+IHtcbiAgICAgIHlhcmdzLnBvc2l0aW9uYWwoJ2ZpbGVuYW1lJywgeyB0eXBlOiAnc3RyaW5nJywgcmVxdWlyZWQ6IHRydWUgfSk7XG4gICAgfSlcbiAgICAucGFyc2UoKTtcblxuICBjb25zdCB0ZW1wbGF0ZUZpbGUgPSBhcmdzLmZpbGVuYW1lO1xuICBjb25zdCB0ZW1wbGF0ZSA9IGF3YWl0IHJlYWRUZW1wbGF0ZSh0ZW1wbGF0ZUZpbGUpO1xuICBjb25zdCBzdGFja05hbWUgPSBzdGFja05hbWVGcm9tRmlsZU5hbWUodGVtcGxhdGVGaWxlKTtcbiAgY29uc3QgdHlwZVN5c3RlbSA9IGF3YWl0IGxvYWRUeXBlU3lzdGVtKCk7XG5cbiAgY29uc3QgYXBwID0gbmV3IGNkay5BcHAoKTtcbiAgbmV3IERlY2xhcmF0aXZlU3RhY2soYXBwLCBzdGFja05hbWUsIHsgdGVtcGxhdGUsIHR5cGVTeXN0ZW0gfSk7XG4gIGFwcC5zeW50aCgpO1xufVxuXG5tYWluKCkuY2F0Y2goZSA9PiB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gIGNvbnNvbGUuZXJyb3IoY2hhbGsucmVkKGUpKTtcbiAgcHJvY2Vzcy5leGl0KDEpO1xufSk7XG4iXX0=