{
  "Resources": {
    "StateMachineRoleB840431D": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "states.",
                      {
                        "Ref": "AWS::Region"
                      },
                      ".amazonaws.com"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "StateMachine2E01A3A5": {
      "Type": "AWS::StepFunctions::StateMachine",
      "Properties": {
        "RoleArn": {
          "Fn::GetAtt": [
            "StateMachineRoleB840431D",
            "Arn"
          ]
        },
        "DefinitionString": "{\"StartAt\":\"PassTask\",\"States\":{\"PassTask\":{\"Type\":\"Pass\",\"Result\":\"Hello\",\"End\":true}}}",
        "StateMachineType": "EXPRESS"
      },
      "DependsOn": [
        "StateMachineRoleB840431D"
      ]
    },
    "StepFunctionsRestApiDeploymentStackStateMachineapiRoleNewD8D444E0": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "StepFunctionsRestApiDeploymentStackStateMachineapiRoleNewDefaultPolicy6DEF984E": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "states:StartSyncExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "StateMachine2E01A3A5"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "StepFunctionsRestApiDeploymentStackStateMachineapiRoleNewDefaultPolicy6DEF984E",
        "Roles": [
          {
            "Ref": "StepFunctionsRestApiDeploymentStackStateMachineapiRoleNewD8D444E0"
          }
        ]
      }
    },
    "StepFunctionsRestApiC6E3E883": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "StepFunctionsRestApi"
      }
    },
    "StepFunctionsRestApiCloudWatchRoleB06ACDB9": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      }
    },
    "StepFunctionsRestApiAccountBD0CCC0E": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "StepFunctionsRestApiCloudWatchRoleB06ACDB9",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "StepFunctionsRestApiC6E3E883"
      ]
    },
    "StepFunctionsRestApiANY7699CA92": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "ResourceId": {
          "Fn::GetAtt": [
            "StepFunctionsRestApiC6E3E883",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "StepFunctionsRestApiC6E3E883"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "Credentials": {
            "Fn::GetAtt": [
              "StepFunctionsRestApiDeploymentStackStateMachineapiRoleNewD8D444E0",
              "Arn"
            ]
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "ResponseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$'))\n                #if($input.path('$.status').toString().equals(\"FAILED\"))\n                    #set($context.responseOverride.status = 500)\n                    { \n                      \"error\": \"$input.path('$.error')\",\n                      \"cause\": \"$input.path('$.cause')\"\n                    }\n                #else\n                    $input.path('$.output')\n                #end"
              },
              "StatusCode": "200"
            },
            {
              "ResponseTemplates": {
                "application/json": "{\n            \"error\": \"Bad input!\"\n          }"
              },
              "SelectionPattern": "4\\d{2}",
              "StatusCode": "400"
            },
            {
              "ResponseTemplates": {
                "application/json": "\"error\": $input.path('$.error')"
              },
              "SelectionPattern": "5\\d{2}",
              "StatusCode": "500"
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": {
              "Fn::Join": [
                "",
                [
                  "## Velocity Template used for API Gateway request mapping template\n##\n## This template forwards the request body, header, path, and querystring\n## to the execution input of the state machine.\n##\n## \"@@\" is used here as a placeholder for '\"' to avoid using escape characters.\n\n#set($inputString = '')\n#set($includeHeaders = true)\n#set($includeQueryString = true)\n#set($includePath = true)\n#set($allParams = $input.params())\n{\n    \"stateMachineArn\": \"",
                  {
                    "Ref": "StateMachine2E01A3A5"
                  },
                  "\",\n\n    #set($inputString = \"$inputString,@@body@@: $input.body\")\n\n    #if ($includeHeaders)\n        #set($inputString = \"$inputString, @@header@@:{\")\n        #foreach($paramName in $allParams.header.keySet())\n            #set($inputString = \"$inputString @@$paramName@@: @@$util.escapeJavaScript($allParams.header.get($paramName))@@\")\n            #if($foreach.hasNext)\n                #set($inputString = \"$inputString,\")\n            #end\n        #end\n        #set($inputString = \"$inputString }\")\n        \n    #end\n\n    #if ($includeQueryString)\n        \n        #set($inputString = \"$inputString, @@querystring@@:{\")\n        #foreach($paramName in $allParams.querystring.keySet())\n            #set($inputString = \"$inputString @@$paramName@@: @@$util.escapeJavaScript($allParams.querystring.get($paramName))@@\")\n            #if($foreach.hasNext)\n                #set($inputString = \"$inputString,\")\n            #end\n        #end\n        #set($inputString = \"$inputString }\")\n    #end\n\n    #if ($includePath)\n        #set($inputString = \"$inputString, @@path@@: @@$context.resourcePath@@\")\n    #end\n    \n    #set($requestContext = \"@@requestContext@@: {@@accountId@@:@@$context.identity.accountId@@,@@apiId@@:@@$context.apiId@@,@@apiKey@@:@@$context.identity.apiKey@@,@@authorizerPrincipalId@@:@@$context.authorizer.principalId@@,@@caller@@:@@$context.identity.caller@@,@@cognitoAuthenticationProvider@@:@@$context.identity.cognitoAuthenticationProvider@@,@@cognitoAuthenticationType@@:@@$context.identity.cognitoAuthenticationType@@,@@cognitoIdentityId@@:@@$context.identity.cognitoIdentityId@@,@@cognitoIdentityPoolId@@:@@$context.identity.cognitoIdentityPoolId@@,@@httpMethod@@:@@$context.httpMethod@@,@@stage@@:@@$context.stage@@,@@sourceIp@@:@@$context.identity.sourceIp@@,@@user@@:@@$context.identity.user@@,@@userAgent@@:@@$context.identity.userAgent@@,@@userArn@@:@@$context.identity.userArn@@,@@requestId@@:@@$context.requestId@@,@@resourceId@@:@@$context.resourceId@@,@@resourcePath@@:@@$context.resourcePath@@}\")\n    ## Check if the request context should be included as part of the execution input\n    #if($requestContext && !$requestContext.empty)\n        #set($inputString = \"$inputString,\")\n        #set($inputString = \"$inputString $requestContext\")\n    #end\n\n    #set($inputString = \"$inputString}\")\n    #set($inputString = $inputString.replaceAll(\"@@\",'\"'))\n    #set($len = $inputString.length() - 1)\n    \"input\": \"{$util.escapeJavaScript($inputString.substring(1,$len))}\"\n}\n"
                ]
              ]
            }
          },
          "Type": "AWS",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":states:action/StartSyncExecution"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty"
            },
            "StatusCode": "200"
          },
          {
            "ResponseModels": {
              "application/json": "Error"
            },
            "StatusCode": "400"
          },
          {
            "ResponseModels": {
              "application/json": "Error"
            },
            "StatusCode": "500"
          }
        ]
      }
    },
    "deployment33381975b5dafda9a97138f301ea25da405640e8": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "StepFunctionsRestApiC6E3E883"
        }
      },
      "DependsOn": [
        "StepFunctionsRestApiANY7699CA92"
      ]
    },
    "stage0661E4AC": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "StepFunctionsRestApiC6E3E883"
        },
        "DeploymentId": {
          "Ref": "deployment33381975b5dafda9a97138f301ea25da405640e8"
        },
        "StageName": "prod"
      }
    }
  }
}