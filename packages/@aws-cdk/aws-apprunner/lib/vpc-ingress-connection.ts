import * as ec2 from '@aws-cdk/aws-ec2';
import * as cdk from '@aws-cdk/core';
import { Construct } from 'constructs';
import { CfnVpcIngressConnection } from './apprunner.generated';
import { IService } from './service';

/**
 * Properties of the AppRunner VPC Ingress Connection
 */
export interface VpcIngressConnectionProps {

  /**
   * The service to connect.
   */
  readonly service: IService,

  /**
   * The VPC for the VPC Ingress Connection.
   */
  readonly vpc: ec2.IVpc;

  /**
   * The VPC Interface Endpoint for the VPC Ingress Connection.
   */
  readonly vpcInterfaceEndpoint: ec2.IInterfaceVpcEndpoint;

  /**
    * The name for the VPC Ingress Connection.
    *
    * @default - a name generated by CloudFormation
    */
  readonly vpcIngressConnectionName?: string;
}

/**
 * Attributes for the App Runner VPC Ingress Connection
 */
export interface VpcIngressConnectionAttributes {
  /**
   * The Amazon Resource Name (ARN) of the VPC Ingress Connection.
   * @attribute
   */
  readonly vpcIngressConnectionArn: string;

  /**
   * The domain name associated with the VPC Ingress Connection resource.
   * @attribute
   */
  readonly domainName: string;

  /**
   * The current status of the VPC Ingress Connection.
   * @attribute
   */
  readonly status: string;

  /**
   * The name of the VPC Ingress Connection.
   * @attribute
   */
  readonly vpcIngressConnectionName: string;
}

/**
 * Represents the App Runner VPC Ingress Connection.
 */
export interface IVpcIngressConnection extends cdk.IResource {
  /**
   * The Amazon Resource Name (ARN) of the VPC Ingress Connection.
   * @attribute
   */
  readonly vpcIngressConnectionArn: string;

  /**
    * The domain name associated with the VPC Ingress Connection resource.
    * @attribute
    */
  readonly domainName: string;

  /**
    * The current status of the VPC Ingress Connection.
    * @attribute
    */
  readonly status: string;

  /**
    * The name of the VPC Ingress Connection.
    * @attribute
    */
  readonly vpcIngressConnectionName: string;
}

/**
 * The App Runner VPC Ingress Connection
 *
 * @resource AWS::AppRunner::VpcIngressConnection
 */
export class VpcIngressConnection extends cdk.Resource implements IVpcIngressConnection {
  /**
   * Import from VPC Ingress Connection attributes.
   */
  public static fromVpcIngressConnectionAttributes(scope: Construct, id: string, attrs: VpcIngressConnectionAttributes): IVpcIngressConnection {
    const vpcIngressConnectionArn = attrs.vpcIngressConnectionArn;
    const domainName = attrs.domainName;
    const status = attrs.status;
    const vpcIngressConnectionName = attrs.vpcIngressConnectionName;

    class Import extends cdk.Resource {
      public readonly vpcIngressConnectionArn = vpcIngressConnectionArn;
      public readonly domainName = domainName;
      public readonly status = status;
      public readonly vpcIngressConnectionName = vpcIngressConnectionName;
    }

    return new Import(scope, id);
  }

  /**
   * The Amazon Resource Name (ARN) of the VPC Ingress Connection.
   * @attribute
   */
  readonly vpcIngressConnectionArn: string;

  /**
   * The domain name associated with the VPC Ingress Connection resource.
   * @attribute
   */
  readonly domainName: string;

  /**
   * The current status of the VPC Ingress Connection.
   * @attribute
   */
  readonly status: string;

  /**
   * The name of the VPC Ingress Connection.
   * @attribute
   */
  readonly vpcIngressConnectionName: string;

  public constructor(scope: Construct, id: string, props: VpcIngressConnectionProps) {
    super(scope, id, {
      physicalName: props.vpcIngressConnectionName,
    });

    const resource = new CfnVpcIngressConnection(this, 'Resource', {
      ingressVpcConfiguration: {
        vpcEndpointId: props.vpcInterfaceEndpoint.vpcEndpointId,
        vpcId: props.vpc.vpcId,
      },
      serviceArn: props.service.serviceArn,
      vpcIngressConnectionName: this.physicalName,
    });

    this.vpcIngressConnectionArn = resource.attrVpcIngressConnectionArn;
    this.domainName = resource.attrDomainName,
    this.status = resource.attrStatus,
    this.vpcIngressConnectionName = resource.ref;
  }
}