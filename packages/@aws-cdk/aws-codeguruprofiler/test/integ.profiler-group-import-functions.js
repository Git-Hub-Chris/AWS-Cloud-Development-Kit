"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const aws_iam_1 = require("@aws-cdk/aws-iam");
const core_1 = require("@aws-cdk/core");
const integ_tests_1 = require("@aws-cdk/integ-tests");
const lib_1 = require("../lib");
const app = new core_1.App();
const stack = new core_1.Stack(app, 'ProfilingGroupTestStack');
const profilingGroup1 = new lib_1.ProfilingGroup(stack, 'ProfilingGroupWithExplicitlySetName', {
    profilingGroupName: 'ExplicitlySetName',
});
const profilingGroup2 = new lib_1.ProfilingGroup(stack, 'ProfilingGroupWithImplicitlySetName');
const publishAppRole = new aws_iam_1.Role(stack, 'PublishAppRole', {
    assumedBy: new aws_iam_1.AccountRootPrincipal(),
});
profilingGroup1.grantPublish(publishAppRole);
profilingGroup2.grantPublish(publishAppRole);
const importedGroupWithExplicitlySetName = lib_1.ProfilingGroup.fromProfilingGroupName(stack, 'ImportedProfilingGroupWithExplicitlySetName', profilingGroup1.profilingGroupName);
const importedGroupWithImplicitlySetName = lib_1.ProfilingGroup.fromProfilingGroupName(stack, 'ImportedProfilingGroupWithImplicitlySetName', profilingGroup2.profilingGroupName);
const importedGroupFromArn = lib_1.ProfilingGroup.fromProfilingGroupArn(stack, 'ImportedProfilingGroupFromArn', 'arn:aws:codeguru-profiler:a-region-1:1234567890:profilingGroup/MyAwesomeProfilingGroup');
new core_1.CfnOutput(stack, 'ExplicitlySetProfilingGroupName', {
    value: importedGroupWithExplicitlySetName.profilingGroupName,
});
new core_1.CfnOutput(stack, 'ImplicitlySetProfilingGroupName', {
    value: importedGroupWithImplicitlySetName.profilingGroupName,
});
new core_1.CfnOutput(stack, 'ImportedFromArnProfilingGroupName', {
    value: importedGroupFromArn.profilingGroupName,
});
new core_1.CfnOutput(stack, 'ImportedFromArnProfilingGroupArn', {
    value: importedGroupFromArn.profilingGroupArn,
});
const testCase = new integ_tests_1.IntegTest(app, 'test', {
    testCases: [stack],
});
const describe = testCase.assertions.awsApiCall('CloudFormation', 'describeStacks', {
    StackName: 'ProfilingGroupTestStack',
});
describe.assertAtPath('Stacks.0.Outputs.0.OutputKey', integ_tests_1.ExpectedResult.stringLikeRegexp('ExplicitlySetProfilingGroupName'));
describe.assertAtPath('Stacks.0.Outputs.0.OutputValue', integ_tests_1.ExpectedResult.stringLikeRegexp('ExplicitlySetName'));
describe.assertAtPath('Stacks.0.Outputs.1.OutputKey', integ_tests_1.ExpectedResult.stringLikeRegexp('ImplicitlySetProfilingGroupName'));
describe.assertAtPath('Stacks.0.Outputs.1.OutputValue', integ_tests_1.ExpectedResult.stringLikeRegexp('ProfilingGroupTestStackProfilingGroupWithImplicitlySetName98463923'));
describe.assertAtPath('Stacks.0.Outputs.2.OutputKey', integ_tests_1.ExpectedResult.stringLikeRegexp('ImportedFromArnProfilingGroupName'));
describe.assertAtPath('Stacks.0.Outputs.2.OutputValue', integ_tests_1.ExpectedResult.stringLikeRegexp('MyAwesomeProfilingGroup'));
describe.assertAtPath('Stacks.0.Outputs.3.OutputKey', integ_tests_1.ExpectedResult.stringLikeRegexp('ImportedFromArnProfilingGroupArn'));
describe.assertAtPath('Stacks.0.Outputs.3.OutputValue', integ_tests_1.ExpectedResult.stringLikeRegexp('arn:aws:codeguru-profiler:a-region-1:1234567890:profilingGroup/MyAwesomeProfilingGroup'));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZWcucHJvZmlsZXItZ3JvdXAtaW1wb3J0LWZ1bmN0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImludGVnLnByb2ZpbGVyLWdyb3VwLWltcG9ydC1mdW5jdGlvbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSw4Q0FBOEQ7QUFDOUQsd0NBQXNEO0FBQ3RELHNEQUFpRTtBQUNqRSxnQ0FBd0M7QUFFeEMsTUFBTSxHQUFHLEdBQUcsSUFBSSxVQUFHLEVBQUUsQ0FBQztBQUV0QixNQUFNLEtBQUssR0FBRyxJQUFJLFlBQUssQ0FBQyxHQUFHLEVBQUUseUJBQXlCLENBQUMsQ0FBQztBQUV4RCxNQUFNLGVBQWUsR0FBRyxJQUFJLG9CQUFjLENBQUMsS0FBSyxFQUFFLHFDQUFxQyxFQUFFO0lBQ3ZGLGtCQUFrQixFQUFFLG1CQUFtQjtDQUN4QyxDQUFDLENBQUM7QUFDSCxNQUFNLGVBQWUsR0FBRyxJQUFJLG9CQUFjLENBQUMsS0FBSyxFQUFFLHFDQUFxQyxDQUFDLENBQUM7QUFFekYsTUFBTSxjQUFjLEdBQUcsSUFBSSxjQUFJLENBQUMsS0FBSyxFQUFFLGdCQUFnQixFQUFFO0lBQ3ZELFNBQVMsRUFBRSxJQUFJLDhCQUFvQixFQUFFO0NBQ3RDLENBQUMsQ0FBQztBQUNILGVBQWUsQ0FBQyxZQUFZLENBQUMsY0FBYyxDQUFDLENBQUM7QUFDN0MsZUFBZSxDQUFDLFlBQVksQ0FBQyxjQUFjLENBQUMsQ0FBQztBQUU3QyxNQUFNLGtDQUFrQyxHQUFHLG9CQUFjLENBQUMsc0JBQXNCLENBQzlFLEtBQUssRUFDTCw2Q0FBNkMsRUFDN0MsZUFBZSxDQUFDLGtCQUFrQixDQUNuQyxDQUFDO0FBRUYsTUFBTSxrQ0FBa0MsR0FBRyxvQkFBYyxDQUFDLHNCQUFzQixDQUM5RSxLQUFLLEVBQ0wsNkNBQTZDLEVBQzdDLGVBQWUsQ0FBQyxrQkFBa0IsQ0FDbkMsQ0FBQztBQUVGLE1BQU0sb0JBQW9CLEdBQUcsb0JBQWMsQ0FBQyxxQkFBcUIsQ0FDL0QsS0FBSyxFQUNMLCtCQUErQixFQUMvQix3RkFBd0YsQ0FDekYsQ0FBQztBQUVGLElBQUksZ0JBQVMsQ0FBQyxLQUFLLEVBQUUsaUNBQWlDLEVBQUU7SUFDdEQsS0FBSyxFQUFFLGtDQUFrQyxDQUFDLGtCQUFrQjtDQUM3RCxDQUFDLENBQUM7QUFFSCxJQUFJLGdCQUFTLENBQUMsS0FBSyxFQUFFLGlDQUFpQyxFQUFFO0lBQ3RELEtBQUssRUFBRSxrQ0FBa0MsQ0FBQyxrQkFBa0I7Q0FDN0QsQ0FBQyxDQUFDO0FBRUgsSUFBSSxnQkFBUyxDQUFDLEtBQUssRUFBRSxtQ0FBbUMsRUFBRTtJQUN4RCxLQUFLLEVBQUUsb0JBQW9CLENBQUMsa0JBQWtCO0NBQy9DLENBQUMsQ0FBQztBQUVILElBQUksZ0JBQVMsQ0FBQyxLQUFLLEVBQUUsa0NBQWtDLEVBQUU7SUFDdkQsS0FBSyxFQUFFLG9CQUFvQixDQUFDLGlCQUFpQjtDQUM5QyxDQUFDLENBQUM7QUFFSCxNQUFNLFFBQVEsR0FBRyxJQUFJLHVCQUFTLENBQUMsR0FBRyxFQUFFLE1BQU0sRUFBRTtJQUMxQyxTQUFTLEVBQUUsQ0FBQyxLQUFLLENBQUM7Q0FDbkIsQ0FBQyxDQUFDO0FBRUgsTUFBTSxRQUFRLEdBQUcsUUFBUSxDQUFDLFVBQVUsQ0FBQyxVQUFVLENBQUMsZ0JBQWdCLEVBQUUsZ0JBQWdCLEVBQUU7SUFDbEYsU0FBUyxFQUFFLHlCQUF5QjtDQUNyQyxDQUFDLENBQUM7QUFFSCxRQUFRLENBQUMsWUFBWSxDQUFDLDhCQUE4QixFQUFFLDRCQUFjLENBQUMsZ0JBQWdCLENBQUMsaUNBQWlDLENBQUMsQ0FBQyxDQUFDO0FBQzFILFFBQVEsQ0FBQyxZQUFZLENBQUMsZ0NBQWdDLEVBQUUsNEJBQWMsQ0FBQyxnQkFBZ0IsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDLENBQUM7QUFFOUcsUUFBUSxDQUFDLFlBQVksQ0FBQyw4QkFBOEIsRUFBRSw0QkFBYyxDQUFDLGdCQUFnQixDQUFDLGlDQUFpQyxDQUFDLENBQUMsQ0FBQztBQUMxSCxRQUFRLENBQUMsWUFBWSxDQUFDLGdDQUFnQyxFQUFFLDRCQUFjLENBQUMsZ0JBQWdCLENBQUMsb0VBQW9FLENBQUMsQ0FBQyxDQUFDO0FBRS9KLFFBQVEsQ0FBQyxZQUFZLENBQUMsOEJBQThCLEVBQUUsNEJBQWMsQ0FBQyxnQkFBZ0IsQ0FBQyxtQ0FBbUMsQ0FBQyxDQUFDLENBQUM7QUFDNUgsUUFBUSxDQUFDLFlBQVksQ0FBQyxnQ0FBZ0MsRUFBRSw0QkFBYyxDQUFDLGdCQUFnQixDQUFDLHlCQUF5QixDQUFDLENBQUMsQ0FBQztBQUVwSCxRQUFRLENBQUMsWUFBWSxDQUFDLDhCQUE4QixFQUFFLDRCQUFjLENBQUMsZ0JBQWdCLENBQUMsa0NBQWtDLENBQUMsQ0FBQyxDQUFDO0FBQzNILFFBQVEsQ0FBQyxZQUFZLENBQUMsZ0NBQWdDLEVBQUUsNEJBQWMsQ0FBQyxnQkFBZ0IsQ0FBQyx3RkFBd0YsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBY2NvdW50Um9vdFByaW5jaXBhbCwgUm9sZSB9IGZyb20gJ0Bhd3MtY2RrL2F3cy1pYW0nO1xuaW1wb3J0IHsgQXBwLCBDZm5PdXRwdXQsIFN0YWNrIH0gZnJvbSAnQGF3cy1jZGsvY29yZSc7XG5pbXBvcnQgeyBFeHBlY3RlZFJlc3VsdCwgSW50ZWdUZXN0IH0gZnJvbSAnQGF3cy1jZGsvaW50ZWctdGVzdHMnO1xuaW1wb3J0IHsgUHJvZmlsaW5nR3JvdXAgfSBmcm9tICcuLi9saWInO1xuXG5jb25zdCBhcHAgPSBuZXcgQXBwKCk7XG5cbmNvbnN0IHN0YWNrID0gbmV3IFN0YWNrKGFwcCwgJ1Byb2ZpbGluZ0dyb3VwVGVzdFN0YWNrJyk7XG5cbmNvbnN0IHByb2ZpbGluZ0dyb3VwMSA9IG5ldyBQcm9maWxpbmdHcm91cChzdGFjaywgJ1Byb2ZpbGluZ0dyb3VwV2l0aEV4cGxpY2l0bHlTZXROYW1lJywge1xuICBwcm9maWxpbmdHcm91cE5hbWU6ICdFeHBsaWNpdGx5U2V0TmFtZScsXG59KTtcbmNvbnN0IHByb2ZpbGluZ0dyb3VwMiA9IG5ldyBQcm9maWxpbmdHcm91cChzdGFjaywgJ1Byb2ZpbGluZ0dyb3VwV2l0aEltcGxpY2l0bHlTZXROYW1lJyk7XG5cbmNvbnN0IHB1Ymxpc2hBcHBSb2xlID0gbmV3IFJvbGUoc3RhY2ssICdQdWJsaXNoQXBwUm9sZScsIHtcbiAgYXNzdW1lZEJ5OiBuZXcgQWNjb3VudFJvb3RQcmluY2lwYWwoKSxcbn0pO1xucHJvZmlsaW5nR3JvdXAxLmdyYW50UHVibGlzaChwdWJsaXNoQXBwUm9sZSk7XG5wcm9maWxpbmdHcm91cDIuZ3JhbnRQdWJsaXNoKHB1Ymxpc2hBcHBSb2xlKTtcblxuY29uc3QgaW1wb3J0ZWRHcm91cFdpdGhFeHBsaWNpdGx5U2V0TmFtZSA9IFByb2ZpbGluZ0dyb3VwLmZyb21Qcm9maWxpbmdHcm91cE5hbWUoXG4gIHN0YWNrLFxuICAnSW1wb3J0ZWRQcm9maWxpbmdHcm91cFdpdGhFeHBsaWNpdGx5U2V0TmFtZScsXG4gIHByb2ZpbGluZ0dyb3VwMS5wcm9maWxpbmdHcm91cE5hbWUsXG4pO1xuXG5jb25zdCBpbXBvcnRlZEdyb3VwV2l0aEltcGxpY2l0bHlTZXROYW1lID0gUHJvZmlsaW5nR3JvdXAuZnJvbVByb2ZpbGluZ0dyb3VwTmFtZShcbiAgc3RhY2ssXG4gICdJbXBvcnRlZFByb2ZpbGluZ0dyb3VwV2l0aEltcGxpY2l0bHlTZXROYW1lJyxcbiAgcHJvZmlsaW5nR3JvdXAyLnByb2ZpbGluZ0dyb3VwTmFtZSxcbik7XG5cbmNvbnN0IGltcG9ydGVkR3JvdXBGcm9tQXJuID0gUHJvZmlsaW5nR3JvdXAuZnJvbVByb2ZpbGluZ0dyb3VwQXJuKFxuICBzdGFjayxcbiAgJ0ltcG9ydGVkUHJvZmlsaW5nR3JvdXBGcm9tQXJuJyxcbiAgJ2Fybjphd3M6Y29kZWd1cnUtcHJvZmlsZXI6YS1yZWdpb24tMToxMjM0NTY3ODkwOnByb2ZpbGluZ0dyb3VwL015QXdlc29tZVByb2ZpbGluZ0dyb3VwJyxcbik7XG5cbm5ldyBDZm5PdXRwdXQoc3RhY2ssICdFeHBsaWNpdGx5U2V0UHJvZmlsaW5nR3JvdXBOYW1lJywge1xuICB2YWx1ZTogaW1wb3J0ZWRHcm91cFdpdGhFeHBsaWNpdGx5U2V0TmFtZS5wcm9maWxpbmdHcm91cE5hbWUsXG59KTtcblxubmV3IENmbk91dHB1dChzdGFjaywgJ0ltcGxpY2l0bHlTZXRQcm9maWxpbmdHcm91cE5hbWUnLCB7XG4gIHZhbHVlOiBpbXBvcnRlZEdyb3VwV2l0aEltcGxpY2l0bHlTZXROYW1lLnByb2ZpbGluZ0dyb3VwTmFtZSxcbn0pO1xuXG5uZXcgQ2ZuT3V0cHV0KHN0YWNrLCAnSW1wb3J0ZWRGcm9tQXJuUHJvZmlsaW5nR3JvdXBOYW1lJywge1xuICB2YWx1ZTogaW1wb3J0ZWRHcm91cEZyb21Bcm4ucHJvZmlsaW5nR3JvdXBOYW1lLFxufSk7XG5cbm5ldyBDZm5PdXRwdXQoc3RhY2ssICdJbXBvcnRlZEZyb21Bcm5Qcm9maWxpbmdHcm91cEFybicsIHtcbiAgdmFsdWU6IGltcG9ydGVkR3JvdXBGcm9tQXJuLnByb2ZpbGluZ0dyb3VwQXJuLFxufSk7XG5cbmNvbnN0IHRlc3RDYXNlID0gbmV3IEludGVnVGVzdChhcHAsICd0ZXN0Jywge1xuICB0ZXN0Q2FzZXM6IFtzdGFja10sXG59KTtcblxuY29uc3QgZGVzY3JpYmUgPSB0ZXN0Q2FzZS5hc3NlcnRpb25zLmF3c0FwaUNhbGwoJ0Nsb3VkRm9ybWF0aW9uJywgJ2Rlc2NyaWJlU3RhY2tzJywge1xuICBTdGFja05hbWU6ICdQcm9maWxpbmdHcm91cFRlc3RTdGFjaycsXG59KTtcblxuZGVzY3JpYmUuYXNzZXJ0QXRQYXRoKCdTdGFja3MuMC5PdXRwdXRzLjAuT3V0cHV0S2V5JywgRXhwZWN0ZWRSZXN1bHQuc3RyaW5nTGlrZVJlZ2V4cCgnRXhwbGljaXRseVNldFByb2ZpbGluZ0dyb3VwTmFtZScpKTtcbmRlc2NyaWJlLmFzc2VydEF0UGF0aCgnU3RhY2tzLjAuT3V0cHV0cy4wLk91dHB1dFZhbHVlJywgRXhwZWN0ZWRSZXN1bHQuc3RyaW5nTGlrZVJlZ2V4cCgnRXhwbGljaXRseVNldE5hbWUnKSk7XG5cbmRlc2NyaWJlLmFzc2VydEF0UGF0aCgnU3RhY2tzLjAuT3V0cHV0cy4xLk91dHB1dEtleScsIEV4cGVjdGVkUmVzdWx0LnN0cmluZ0xpa2VSZWdleHAoJ0ltcGxpY2l0bHlTZXRQcm9maWxpbmdHcm91cE5hbWUnKSk7XG5kZXNjcmliZS5hc3NlcnRBdFBhdGgoJ1N0YWNrcy4wLk91dHB1dHMuMS5PdXRwdXRWYWx1ZScsIEV4cGVjdGVkUmVzdWx0LnN0cmluZ0xpa2VSZWdleHAoJ1Byb2ZpbGluZ0dyb3VwVGVzdFN0YWNrUHJvZmlsaW5nR3JvdXBXaXRoSW1wbGljaXRseVNldE5hbWU5ODQ2MzkyMycpKTtcblxuZGVzY3JpYmUuYXNzZXJ0QXRQYXRoKCdTdGFja3MuMC5PdXRwdXRzLjIuT3V0cHV0S2V5JywgRXhwZWN0ZWRSZXN1bHQuc3RyaW5nTGlrZVJlZ2V4cCgnSW1wb3J0ZWRGcm9tQXJuUHJvZmlsaW5nR3JvdXBOYW1lJykpO1xuZGVzY3JpYmUuYXNzZXJ0QXRQYXRoKCdTdGFja3MuMC5PdXRwdXRzLjIuT3V0cHV0VmFsdWUnLCBFeHBlY3RlZFJlc3VsdC5zdHJpbmdMaWtlUmVnZXhwKCdNeUF3ZXNvbWVQcm9maWxpbmdHcm91cCcpKTtcblxuZGVzY3JpYmUuYXNzZXJ0QXRQYXRoKCdTdGFja3MuMC5PdXRwdXRzLjMuT3V0cHV0S2V5JywgRXhwZWN0ZWRSZXN1bHQuc3RyaW5nTGlrZVJlZ2V4cCgnSW1wb3J0ZWRGcm9tQXJuUHJvZmlsaW5nR3JvdXBBcm4nKSk7XG5kZXNjcmliZS5hc3NlcnRBdFBhdGgoJ1N0YWNrcy4wLk91dHB1dHMuMy5PdXRwdXRWYWx1ZScsIEV4cGVjdGVkUmVzdWx0LnN0cmluZ0xpa2VSZWdleHAoJ2Fybjphd3M6Y29kZWd1cnUtcHJvZmlsZXI6YS1yZWdpb24tMToxMjM0NTY3ODkwOnByb2ZpbGluZ0dyb3VwL015QXdlc29tZVByb2ZpbGluZ0dyb3VwJykpOyJdfQ==