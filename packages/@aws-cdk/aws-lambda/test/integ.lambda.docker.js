"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const path = require("path");
const core_1 = require("@aws-cdk/core");
const integ_tests_1 = require("@aws-cdk/integ-tests");
const lib_1 = require("../lib");
class TestStack extends core_1.Stack {
    constructor(scope, id) {
        super(scope, id);
        this.fn = new lib_1.DockerImageFunction(this, 'MyLambda', {
            code: lib_1.DockerImageCode.fromImageAsset(path.join(__dirname, 'docker-lambda-handler')),
        });
    }
}
const app = new core_1.App();
const testStack = new TestStack(app, 'lambda-ecr-docker');
const integ = new integ_tests_1.IntegTest(app, 'integ', {
    testCases: [testStack],
});
const invoke = integ.assertions.invokeFunction({
    functionName: testStack.fn.functionName,
});
invoke.expect(integ_tests_1.ExpectedResult.objectLike({
    Payload: integ_tests_1.Match.serializedJson({ statusCode: 200 }),
}));
app.synth();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZWcubGFtYmRhLmRvY2tlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImludGVnLmxhbWJkYS5kb2NrZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSw2QkFBNkI7QUFDN0Isd0NBQTJDO0FBQzNDLHNEQUF3RTtBQUN4RSxnQ0FBd0U7QUFFeEUsTUFBTSxTQUFVLFNBQVEsWUFBSztJQUUzQixZQUFZLEtBQVUsRUFBRSxFQUFVO1FBQ2hDLEtBQUssQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFFakIsSUFBSSxDQUFDLEVBQUUsR0FBRyxJQUFJLHlCQUFtQixDQUFDLElBQUksRUFBRSxVQUFVLEVBQUU7WUFDbEQsSUFBSSxFQUFFLHFCQUFlLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLHVCQUF1QixDQUFDLENBQUM7U0FDcEYsQ0FBQyxDQUFDO0tBQ0o7Q0FDRjtBQUVELE1BQU0sR0FBRyxHQUFHLElBQUksVUFBRyxFQUFFLENBQUM7QUFDdEIsTUFBTSxTQUFTLEdBQUcsSUFBSSxTQUFTLENBQUMsR0FBRyxFQUFFLG1CQUFtQixDQUFDLENBQUM7QUFDMUQsTUFBTSxLQUFLLEdBQUcsSUFBSSx1QkFBUyxDQUFDLEdBQUcsRUFBRSxPQUFPLEVBQUU7SUFDeEMsU0FBUyxFQUFFLENBQUMsU0FBUyxDQUFDO0NBQ3ZCLENBQUMsQ0FBQztBQUVILE1BQU0sTUFBTSxHQUFHLEtBQUssQ0FBQyxVQUFVLENBQUMsY0FBYyxDQUFDO0lBQzdDLFlBQVksRUFBRSxTQUFTLENBQUMsRUFBRSxDQUFDLFlBQVk7Q0FDeEMsQ0FBQyxDQUFDO0FBRUgsTUFBTSxDQUFDLE1BQU0sQ0FBQyw0QkFBYyxDQUFDLFVBQVUsQ0FBQztJQUN0QyxPQUFPLEVBQUUsbUJBQUssQ0FBQyxjQUFjLENBQUMsRUFBRSxVQUFVLEVBQUUsR0FBRyxFQUFFLENBQUM7Q0FDbkQsQ0FBQyxDQUFDLENBQUM7QUFFSixHQUFHLENBQUMsS0FBSyxFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBwYXRoIGZyb20gJ3BhdGgnO1xuaW1wb3J0IHsgQXBwLCBTdGFjayB9IGZyb20gJ0Bhd3MtY2RrL2NvcmUnO1xuaW1wb3J0IHsgRXhwZWN0ZWRSZXN1bHQsIEludGVnVGVzdCwgTWF0Y2ggfSBmcm9tICdAYXdzLWNkay9pbnRlZy10ZXN0cyc7XG5pbXBvcnQgeyBEb2NrZXJJbWFnZUNvZGUsIERvY2tlckltYWdlRnVuY3Rpb24sIEZ1bmN0aW9uIH0gZnJvbSAnLi4vbGliJztcblxuY2xhc3MgVGVzdFN0YWNrIGV4dGVuZHMgU3RhY2sge1xuICBwdWJsaWMgZm46IEZ1bmN0aW9uXG4gIGNvbnN0cnVjdG9yKHNjb3BlOiBBcHAsIGlkOiBzdHJpbmcpIHtcbiAgICBzdXBlcihzY29wZSwgaWQpO1xuXG4gICAgdGhpcy5mbiA9IG5ldyBEb2NrZXJJbWFnZUZ1bmN0aW9uKHRoaXMsICdNeUxhbWJkYScsIHtcbiAgICAgIGNvZGU6IERvY2tlckltYWdlQ29kZS5mcm9tSW1hZ2VBc3NldChwYXRoLmpvaW4oX19kaXJuYW1lLCAnZG9ja2VyLWxhbWJkYS1oYW5kbGVyJykpLFxuICAgIH0pO1xuICB9XG59XG5cbmNvbnN0IGFwcCA9IG5ldyBBcHAoKTtcbmNvbnN0IHRlc3RTdGFjayA9IG5ldyBUZXN0U3RhY2soYXBwLCAnbGFtYmRhLWVjci1kb2NrZXInKTtcbmNvbnN0IGludGVnID0gbmV3IEludGVnVGVzdChhcHAsICdpbnRlZycsIHtcbiAgdGVzdENhc2VzOiBbdGVzdFN0YWNrXSxcbn0pO1xuXG5jb25zdCBpbnZva2UgPSBpbnRlZy5hc3NlcnRpb25zLmludm9rZUZ1bmN0aW9uKHtcbiAgZnVuY3Rpb25OYW1lOiB0ZXN0U3RhY2suZm4uZnVuY3Rpb25OYW1lLFxufSk7XG5cbmludm9rZS5leHBlY3QoRXhwZWN0ZWRSZXN1bHQub2JqZWN0TGlrZSh7XG4gIFBheWxvYWQ6IE1hdGNoLnNlcmlhbGl6ZWRKc29uKHsgc3RhdHVzQ29kZTogMjAwIH0pLFxufSkpO1xuXG5hcHAuc3ludGgoKTtcbiJdfQ==