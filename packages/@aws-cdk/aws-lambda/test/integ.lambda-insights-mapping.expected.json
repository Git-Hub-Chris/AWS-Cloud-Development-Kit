{
  "Resources": {
    "MyFunc1ServiceRoleF96C5B5C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy"
              ]
            ]
          }
        ]
      }
    },
    "MyFunc11BE70A62": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "exports.handler = function handler(event, _context, callback) {\n    console.log(JSON.stringify(event, undefined, 2));\n    return callback();\n}"
        },
        "Role": {
          "Fn::GetAtt": [
            "MyFunc1ServiceRoleF96C5B5C",
            "Arn"
          ]
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:lambda:",
                {
                  "Ref": "AWS::Region"
                },
                ":580247275435:layer:LambdaInsightsExtension:2"
              ]
            ]
          }
        ],
        "Runtime": "nodejs10.x"
      },
      "DependsOn": [
        "MyFunc1ServiceRoleF96C5B5C"
      ]
    },
    "MyFunc2ServiceRole68E50443": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy"
              ]
            ]
          }
        ]
      }
    },
    "MyFunc242557A97": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "exports.handler = function handler(event, _context, callback) {\n    console.log(JSON.stringify(event, undefined, 2));\n    return callback();\n}"
        },
        "Role": {
          "Fn::GetAtt": [
            "MyFunc2ServiceRole68E50443",
            "Arn"
          ]
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:lambda:",
                {
                  "Ref": "AWS::Region"
                },
                ":580247275435:layer:LambdaInsightsExtension:11"
              ]
            ]
          }
        ],
        "Runtime": "nodejs10.x"
      },
      "DependsOn": [
        "MyFunc2ServiceRole68E50443"
      ]
    },
    "MyFunc3ServiceRoleA69795ED": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy"
              ]
            ]
          }
        ]
      }
    },
    "MyFunc3666B7A2F": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "exports.handler = function handler(event, _context, callback) {\n    console.log(JSON.stringify(event, undefined, 2));\n    return callback();\n}"
        },
        "Role": {
          "Fn::GetAtt": [
            "MyFunc3ServiceRoleA69795ED",
            "Arn"
          ]
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:lambda:",
                {
                  "Ref": "AWS::Region"
                },
                ":580247275435:layer:LambdaInsightsExtension:12"
              ]
            ]
          }
        ],
        "Runtime": "nodejs10.x"
      },
      "DependsOn": [
        "MyFunc3ServiceRoleA69795ED"
      ]
    },
    "MyFunc4ServiceRole93C4DEFF": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy"
              ]
            ]
          }
        ]
      }
    },
    "MyFunc4B88F85C6": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "exports.handler = function handler(event, _context, callback) {\n    console.log(JSON.stringify(event, undefined, 2));\n    return callback();\n}"
        },
        "Role": {
          "Fn::GetAtt": [
            "MyFunc4ServiceRole93C4DEFF",
            "Arn"
          ]
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Fn::FindInMap": [
              "CloudwatchlambdainsightsversionMap",
              {
                "Ref": "AWS::Region"
              },
              "1_0_98_0"
            ]
          }
        ],
        "Runtime": "nodejs10.x"
      },
      "DependsOn": [
        "MyFunc4ServiceRole93C4DEFF"
      ]
    }
  },
  "Mappings": {
    "CloudwatchlambdainsightsversionMap": {
      "af-south-1": {
        "1_0_98_0": "arn:aws:lambda:af-south-1:012438385374:layer:LambdaInsightsExtension:8"
      },
      "ap-east-1": {
        "1_0_98_0": "arn:aws:lambda:ap-east-1:519774774795:layer:LambdaInsightsExtension:8"
      },
      "ap-northeast-1": {
        "1_0_98_0": "arn:aws:lambda:ap-northeast-1:580247275435:layer:LambdaInsightsExtension:14"
      },
      "ap-northeast-2": {
        "1_0_98_0": "arn:aws:lambda:ap-northeast-2:580247275435:layer:LambdaInsightsExtension:14"
      },
      "ap-south-1": {
        "1_0_98_0": "arn:aws:lambda:ap-south-1:580247275435:layer:LambdaInsightsExtension:14"
      },
      "ap-southeast-1": {
        "1_0_98_0": "arn:aws:lambda:ap-southeast-1:580247275435:layer:LambdaInsightsExtension:14"
      },
      "ap-southeast-2": {
        "1_0_98_0": "arn:aws:lambda:ap-southeast-2:580247275435:layer:LambdaInsightsExtension:14"
      },
      "ca-central-1": {
        "1_0_98_0": "arn:aws:lambda:ca-central-1:580247275435:layer:LambdaInsightsExtension:14"
      },
      "eu-central-1": {
        "1_0_98_0": "arn:aws:lambda:eu-central-1:580247275435:layer:LambdaInsightsExtension:14"
      },
      "eu-north-1": {
        "1_0_98_0": "arn:aws:lambda:eu-north-1:580247275435:layer:LambdaInsightsExtension:14"
      },
      "eu-south-1": {
        "1_0_98_0": "arn:aws:lambda:eu-south-1:339249233099:layer:LambdaInsightsExtension:8"
      },
      "eu-west-1": {
        "1_0_98_0": "arn:aws:lambda:eu-west-1:580247275435:layer:LambdaInsightsExtension:14"
      },
      "eu-west-2": {
        "1_0_98_0": "arn:aws:lambda:eu-west-2:580247275435:layer:LambdaInsightsExtension:14"
      },
      "eu-west-3": {
        "1_0_98_0": "arn:aws:lambda:eu-west-3:580247275435:layer:LambdaInsightsExtension:14"
      },
      "me-south-1": {
        "1_0_98_0": "arn:aws:lambda:me-south-1:285320876703:layer:LambdaInsightsExtension:8"
      },
      "sa-east-1": {
        "1_0_98_0": "arn:aws:lambda:sa-east-1:580247275435:layer:LambdaInsightsExtension:14"
      },
      "us-east-1": {
        "1_0_98_0": "arn:aws:lambda:us-east-1:580247275435:layer:LambdaInsightsExtension:14"
      },
      "us-east-2": {
        "1_0_98_0": "arn:aws:lambda:us-east-2:580247275435:layer:LambdaInsightsExtension:14"
      },
      "us-west-1": {
        "1_0_98_0": "arn:aws:lambda:us-west-1:580247275435:layer:LambdaInsightsExtension:14"
      },
      "us-west-2": {
        "1_0_98_0": "arn:aws:lambda:us-west-2:580247275435:layer:LambdaInsightsExtension:14"
      }
    }
  }
}