"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const path = require("path");
const iam = require("@aws-cdk/aws-iam");
const cdk = require("@aws-cdk/core");
const assets = require("../lib");
const app = new cdk.App();
const stack = new cdk.Stack(app, 'integ-assets-docker');
const asset = new assets.DockerImageAsset(stack, 'DockerImage', {
    directory: path.join(__dirname, 'demo-image'),
});
const asset2 = new assets.DockerImageAsset(stack, 'DockerImage2', {
    directory: path.join(__dirname, 'demo-image'),
});
const asset3 = new assets.DockerImageAsset(stack, 'DockerImage3', {
    directory: path.join(__dirname, 'demo-image'),
    platform: assets.Platform.LINUX_ARM64,
});
const asset4 = new assets.DockerImageAsset(stack, 'DockerImage4', {
    directory: path.join(__dirname, 'demo-image'),
    outputs: ['type=docker'],
});
const asset5 = new assets.DockerImageAsset(stack, 'DockerImage5', {
    directory: path.join(__dirname, 'demo-image-secret'),
    buildSecrets: {
        mysecret: cdk.DockerBuildSecret.fromSrc('index.py'),
    },
});
const asset6 = new assets.DockerImageAsset(stack, 'DockerImage6', {
    directory: path.join(__dirname, 'demo-image'),
    cacheTo: { type: 'inline' },
});
process.env.DOCKER_IMG_ASSET7_FIXTURE = 'abc';
const asset7 = new assets.DockerImageAsset(stack, 'DockerImage7', {
    directory: path.join(__dirname, 'demo-image-env-secret'),
    buildSecrets: {
        myenvsecret: cdk.DockerBuildSecret.fromEnvironment('DOCKER_IMG_ASSET7_FIXTURE'),
    },
});
const user = new iam.User(stack, 'MyUser');
asset.repository.grantPull(user);
asset2.repository.grantPull(user);
asset3.repository.grantPull(user);
asset4.repository.grantPull(user);
asset5.repository.grantPull(user);
asset6.repository.grantPull(user);
asset7.repository.grantPull(user);
new cdk.CfnOutput(stack, 'ImageUri', { value: asset.imageUri });
new cdk.CfnOutput(stack, 'ImageUri2', { value: asset2.imageUri });
new cdk.CfnOutput(stack, 'ImageUri3', { value: asset3.imageUri });
new cdk.CfnOutput(stack, 'ImageUri4', { value: asset4.imageUri });
new cdk.CfnOutput(stack, 'ImageUri5', { value: asset5.imageUri });
new cdk.CfnOutput(stack, 'ImageUri6', { value: asset6.imageUri });
new cdk.CfnOutput(stack, 'ImageUri7', { value: asset7.imageUri });
app.synth();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZWcuYXNzZXRzLWRvY2tlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImludGVnLmFzc2V0cy1kb2NrZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSw2QkFBNkI7QUFDN0Isd0NBQXdDO0FBQ3hDLHFDQUFxQztBQUNyQyxpQ0FBaUM7QUFFakMsTUFBTSxHQUFHLEdBQUcsSUFBSSxHQUFHLENBQUMsR0FBRyxFQUFFLENBQUM7QUFDMUIsTUFBTSxLQUFLLEdBQUcsSUFBSSxHQUFHLENBQUMsS0FBSyxDQUFDLEdBQUcsRUFBRSxxQkFBcUIsQ0FBQyxDQUFDO0FBRXhELE1BQU0sS0FBSyxHQUFHLElBQUksTUFBTSxDQUFDLGdCQUFnQixDQUFDLEtBQUssRUFBRSxhQUFhLEVBQUU7SUFDOUQsU0FBUyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLFlBQVksQ0FBQztDQUM5QyxDQUFDLENBQUM7QUFFSCxNQUFNLE1BQU0sR0FBRyxJQUFJLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLEVBQUUsY0FBYyxFQUFFO0lBQ2hFLFNBQVMsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxZQUFZLENBQUM7Q0FDOUMsQ0FBQyxDQUFDO0FBRUgsTUFBTSxNQUFNLEdBQUcsSUFBSSxNQUFNLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxFQUFFLGNBQWMsRUFBRTtJQUNoRSxTQUFTLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsWUFBWSxDQUFDO0lBQzdDLFFBQVEsRUFBRSxNQUFNLENBQUMsUUFBUSxDQUFDLFdBQVc7Q0FDdEMsQ0FBQyxDQUFDO0FBRUgsTUFBTSxNQUFNLEdBQUcsSUFBSSxNQUFNLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxFQUFFLGNBQWMsRUFBRTtJQUNoRSxTQUFTLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsWUFBWSxDQUFDO0lBQzdDLE9BQU8sRUFBRSxDQUFDLGFBQWEsQ0FBQztDQUN6QixDQUFDLENBQUM7QUFFSCxNQUFNLE1BQU0sR0FBRyxJQUFJLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLEVBQUUsY0FBYyxFQUFFO0lBQ2hFLFNBQVMsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxtQkFBbUIsQ0FBQztJQUNwRCxZQUFZLEVBQUU7UUFDWixRQUFRLEVBQUUsR0FBRyxDQUFDLGlCQUFpQixDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUM7S0FDcEQ7Q0FDRixDQUFDLENBQUM7QUFFSCxNQUFNLE1BQU0sR0FBRyxJQUFJLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLEVBQUUsY0FBYyxFQUFFO0lBQ2hFLFNBQVMsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxZQUFZLENBQUM7SUFDN0MsT0FBTyxFQUFFLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRTtDQUM1QixDQUFDLENBQUM7QUFFSCxPQUFPLENBQUMsR0FBRyxDQUFDLHlCQUF5QixHQUFHLEtBQUssQ0FBQztBQUM5QyxNQUFNLE1BQU0sR0FBRyxJQUFJLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLEVBQUUsY0FBYyxFQUFFO0lBQ2hFLFNBQVMsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSx1QkFBdUIsQ0FBQztJQUN4RCxZQUFZLEVBQUU7UUFDWixXQUFXLEVBQUUsR0FBRyxDQUFDLGlCQUFpQixDQUFDLGVBQWUsQ0FBQywyQkFBMkIsQ0FBQztLQUNoRjtDQUNGLENBQUMsQ0FBQztBQUVILE1BQU0sSUFBSSxHQUFHLElBQUksR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsUUFBUSxDQUFDLENBQUM7QUFDM0MsS0FBSyxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDakMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDbEMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDbEMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDbEMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDbEMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDbEMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7QUFFbEMsSUFBSSxHQUFHLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxVQUFVLEVBQUUsRUFBRSxLQUFLLEVBQUUsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUM7QUFDaEUsSUFBSSxHQUFHLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxXQUFXLEVBQUUsRUFBRSxLQUFLLEVBQUUsTUFBTSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUM7QUFDbEUsSUFBSSxHQUFHLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxXQUFXLEVBQUUsRUFBRSxLQUFLLEVBQUUsTUFBTSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUM7QUFDbEUsSUFBSSxHQUFHLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxXQUFXLEVBQUUsRUFBRSxLQUFLLEVBQUUsTUFBTSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUM7QUFDbEUsSUFBSSxHQUFHLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxXQUFXLEVBQUUsRUFBRSxLQUFLLEVBQUUsTUFBTSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUM7QUFDbEUsSUFBSSxHQUFHLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxXQUFXLEVBQUUsRUFBRSxLQUFLLEVBQUUsTUFBTSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUM7QUFDbEUsSUFBSSxHQUFHLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxXQUFXLEVBQUUsRUFBRSxLQUFLLEVBQUUsTUFBTSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUM7QUFFbEUsR0FBRyxDQUFDLEtBQUssRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgcGF0aCBmcm9tICdwYXRoJztcbmltcG9ydCAqIGFzIGlhbSBmcm9tICdAYXdzLWNkay9hd3MtaWFtJztcbmltcG9ydCAqIGFzIGNkayBmcm9tICdAYXdzLWNkay9jb3JlJztcbmltcG9ydCAqIGFzIGFzc2V0cyBmcm9tICcuLi9saWInO1xuXG5jb25zdCBhcHAgPSBuZXcgY2RrLkFwcCgpO1xuY29uc3Qgc3RhY2sgPSBuZXcgY2RrLlN0YWNrKGFwcCwgJ2ludGVnLWFzc2V0cy1kb2NrZXInKTtcblxuY29uc3QgYXNzZXQgPSBuZXcgYXNzZXRzLkRvY2tlckltYWdlQXNzZXQoc3RhY2ssICdEb2NrZXJJbWFnZScsIHtcbiAgZGlyZWN0b3J5OiBwYXRoLmpvaW4oX19kaXJuYW1lLCAnZGVtby1pbWFnZScpLFxufSk7XG5cbmNvbnN0IGFzc2V0MiA9IG5ldyBhc3NldHMuRG9ja2VySW1hZ2VBc3NldChzdGFjaywgJ0RvY2tlckltYWdlMicsIHtcbiAgZGlyZWN0b3J5OiBwYXRoLmpvaW4oX19kaXJuYW1lLCAnZGVtby1pbWFnZScpLFxufSk7XG5cbmNvbnN0IGFzc2V0MyA9IG5ldyBhc3NldHMuRG9ja2VySW1hZ2VBc3NldChzdGFjaywgJ0RvY2tlckltYWdlMycsIHtcbiAgZGlyZWN0b3J5OiBwYXRoLmpvaW4oX19kaXJuYW1lLCAnZGVtby1pbWFnZScpLFxuICBwbGF0Zm9ybTogYXNzZXRzLlBsYXRmb3JtLkxJTlVYX0FSTTY0LFxufSk7XG5cbmNvbnN0IGFzc2V0NCA9IG5ldyBhc3NldHMuRG9ja2VySW1hZ2VBc3NldChzdGFjaywgJ0RvY2tlckltYWdlNCcsIHtcbiAgZGlyZWN0b3J5OiBwYXRoLmpvaW4oX19kaXJuYW1lLCAnZGVtby1pbWFnZScpLFxuICBvdXRwdXRzOiBbJ3R5cGU9ZG9ja2VyJ10sXG59KTtcblxuY29uc3QgYXNzZXQ1ID0gbmV3IGFzc2V0cy5Eb2NrZXJJbWFnZUFzc2V0KHN0YWNrLCAnRG9ja2VySW1hZ2U1Jywge1xuICBkaXJlY3Rvcnk6IHBhdGguam9pbihfX2Rpcm5hbWUsICdkZW1vLWltYWdlLXNlY3JldCcpLFxuICBidWlsZFNlY3JldHM6IHtcbiAgICBteXNlY3JldDogY2RrLkRvY2tlckJ1aWxkU2VjcmV0LmZyb21TcmMoJ2luZGV4LnB5JyksXG4gIH0sXG59KTtcblxuY29uc3QgYXNzZXQ2ID0gbmV3IGFzc2V0cy5Eb2NrZXJJbWFnZUFzc2V0KHN0YWNrLCAnRG9ja2VySW1hZ2U2Jywge1xuICBkaXJlY3Rvcnk6IHBhdGguam9pbihfX2Rpcm5hbWUsICdkZW1vLWltYWdlJyksXG4gIGNhY2hlVG86IHsgdHlwZTogJ2lubGluZScgfSxcbn0pO1xuXG5wcm9jZXNzLmVudi5ET0NLRVJfSU1HX0FTU0VUN19GSVhUVVJFID0gJ2FiYyc7XG5jb25zdCBhc3NldDcgPSBuZXcgYXNzZXRzLkRvY2tlckltYWdlQXNzZXQoc3RhY2ssICdEb2NrZXJJbWFnZTcnLCB7XG4gIGRpcmVjdG9yeTogcGF0aC5qb2luKF9fZGlybmFtZSwgJ2RlbW8taW1hZ2UtZW52LXNlY3JldCcpLFxuICBidWlsZFNlY3JldHM6IHtcbiAgICBteWVudnNlY3JldDogY2RrLkRvY2tlckJ1aWxkU2VjcmV0LmZyb21FbnZpcm9ubWVudCgnRE9DS0VSX0lNR19BU1NFVDdfRklYVFVSRScpLFxuICB9LFxufSk7XG5cbmNvbnN0IHVzZXIgPSBuZXcgaWFtLlVzZXIoc3RhY2ssICdNeVVzZXInKTtcbmFzc2V0LnJlcG9zaXRvcnkuZ3JhbnRQdWxsKHVzZXIpO1xuYXNzZXQyLnJlcG9zaXRvcnkuZ3JhbnRQdWxsKHVzZXIpO1xuYXNzZXQzLnJlcG9zaXRvcnkuZ3JhbnRQdWxsKHVzZXIpO1xuYXNzZXQ0LnJlcG9zaXRvcnkuZ3JhbnRQdWxsKHVzZXIpO1xuYXNzZXQ1LnJlcG9zaXRvcnkuZ3JhbnRQdWxsKHVzZXIpO1xuYXNzZXQ2LnJlcG9zaXRvcnkuZ3JhbnRQdWxsKHVzZXIpO1xuYXNzZXQ3LnJlcG9zaXRvcnkuZ3JhbnRQdWxsKHVzZXIpO1xuXG5uZXcgY2RrLkNmbk91dHB1dChzdGFjaywgJ0ltYWdlVXJpJywgeyB2YWx1ZTogYXNzZXQuaW1hZ2VVcmkgfSk7XG5uZXcgY2RrLkNmbk91dHB1dChzdGFjaywgJ0ltYWdlVXJpMicsIHsgdmFsdWU6IGFzc2V0Mi5pbWFnZVVyaSB9KTtcbm5ldyBjZGsuQ2ZuT3V0cHV0KHN0YWNrLCAnSW1hZ2VVcmkzJywgeyB2YWx1ZTogYXNzZXQzLmltYWdlVXJpIH0pO1xubmV3IGNkay5DZm5PdXRwdXQoc3RhY2ssICdJbWFnZVVyaTQnLCB7IHZhbHVlOiBhc3NldDQuaW1hZ2VVcmkgfSk7XG5uZXcgY2RrLkNmbk91dHB1dChzdGFjaywgJ0ltYWdlVXJpNScsIHsgdmFsdWU6IGFzc2V0NS5pbWFnZVVyaSB9KTtcbm5ldyBjZGsuQ2ZuT3V0cHV0KHN0YWNrLCAnSW1hZ2VVcmk2JywgeyB2YWx1ZTogYXNzZXQ2LmltYWdlVXJpIH0pO1xubmV3IGNkay5DZm5PdXRwdXQoc3RhY2ssICdJbWFnZVVyaTcnLCB7IHZhbHVlOiBhc3NldDcuaW1hZ2VVcmkgfSk7XG5cbmFwcC5zeW50aCgpO1xuIl19