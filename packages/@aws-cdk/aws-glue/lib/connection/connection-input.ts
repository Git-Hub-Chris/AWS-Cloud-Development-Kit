import { Construct, IResource, Resource } from '@aws-cdk/core';
import { PhysicalRequirements } from './physical-requirements'
import { CfnConnectionInput } from './glue.generated';

export enum ConnectionInputTypes {
  /**
   * The type of the connection. Currently, only JDBC is supported; SFTP is not supported.
   */
  JDBC = 'JDBC',
}

export interface IConnectionInput extends IResource {
  /**
   * @attribute
   */
  readonly properties: object;

  /**
   * @attribute
   */
  readonly type: ConnectionInputTypes;

  /**
   * @attribute
   */
  readonly description?: string;

  /**
   * @attribute
   */
  readonly matchCriteria?: string[];

  /**
   * @attribute
   */
  readonly name?: string;

  /**
   * @attribute
   */
  readonly physicalRequirements?: PhysicalRequirements;
}


export interface ConnectionInputAttributes {
  readonly properties: object;
  readonly type: ConnectionInputTypes;
  readonly description?: string;
  readonly matchCriteria?: string[];
  readonly name?: string;
  readonly physicalRequirements?: PhysicalRequirements;
}

export interface ConnectionInputProps {
  readonly properties: object;
  readonly type: ConnectionInputTypes;
  readonly description?: string;
  readonly matchCriteria?: string[];
  readonly name?: string;
  readonly physicalRequirements?: PhysicalRequirements;
}

export class ConnectionInput extends Resource implements IConnectionInput {
  /**
   * These key-value pairs define parameters for the connection.
   */
  public readonly properties: object;

  /**
   * The type of the connection. Currently, only JDBC is supported; SFTP is not supported.
   */
  public readonly type: ConnectionInputTypes;

  /**
   * The description of the connection.
   */
  public readonly description: string;

  /**
   * A list of criteria that can be used in selecting this connection.
   */
  public readonly matchCriteria?: string[];

  /**
   * The name of the connection.
   */
  public readonly name?: string;

  /**
   * A map of physical connection requirements, such as virtual private
   * cloud (VPC) and SecurityGroup, that are needed to successfully make
   * this connection.
   */
  public readonly physicalRequirements?: PhysicalRequirements;

  constructor(scope: Construct, id: string, props: ConnectionInputProps) {
    super(scope, id, {
      physicalName: '',
    });

    this.properties = props.properties;
    this.type = props.type || ConnectionInputTypes.JDBC;
    this.description = props.description || `${props.name} generated by CDK`;
    this.matchCriteria = props.matchCriteria;
    this.name = props.name;
    this.physicalRequirements = props.physicalRequirements

    const connectionInputResource = new CfnConnectionInput(this, 'ConnectionInput', {
      connectionProperties: JSON.stringify(this.properties),
      connectionType:  this.type,
      description: this.description,
      matchCriteria: this.matchCriteria,
      name: this.name,
      physicalConnectionRequirements: this.physicalRequirements
    })

    this.node.defaultChild = connectionInputResource
  }
}