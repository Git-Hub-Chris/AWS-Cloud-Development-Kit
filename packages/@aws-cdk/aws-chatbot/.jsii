{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-cloudwatch": "0.0.0",
    "@aws-cdk/aws-codestarnotifications": "0.0.0",
    "@aws-cdk/aws-iam": "0.0.0",
    "@aws-cdk/aws-logs": "0.0.0",
    "@aws-cdk/aws-sns": "0.0.0",
    "@aws-cdk/core": "0.0.0",
    "constructs": "^10.0.0"
  },
  "dependencyClosure": {
    "@aws-cdk/assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.Assets",
          "packageId": "Amazon.CDK.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.assets"
        },
        "js": {
          "npm": "@aws-cdk/assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.assets",
          "module": "aws_cdk.assets"
        }
      }
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch"
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      }
    },
    "@aws-cdk/aws-codestarnotifications": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeStarNotifications",
          "packageId": "Amazon.CDK.AWS.CodeStarNotifications"
        },
        "java": {
          "maven": {
            "artifactId": "codestarnotifications",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codestarnotifications"
        },
        "js": {
          "npm": "@aws-cdk/aws-codestarnotifications"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-codestarnotifications",
          "module": "aws_cdk.aws_codestarnotifications"
        }
      }
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events"
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      }
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM"
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/aws-kms": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS"
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      }
    },
    "@aws-cdk/aws-logs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Logs",
          "packageId": "Amazon.CDK.AWS.Logs"
        },
        "java": {
          "maven": {
            "artifactId": "logs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-logs",
          "module": "aws_cdk.aws_logs"
        }
      }
    },
    "@aws-cdk/aws-s3": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3",
          "packageId": "Amazon.CDK.AWS.S3"
        },
        "java": {
          "maven": {
            "artifactId": "s3",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-s3",
          "module": "aws_cdk.aws_s3"
        }
      }
    },
    "@aws-cdk/aws-s3-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3.Assets",
          "packageId": "Amazon.CDK.AWS.S3.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "s3-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-s3-assets",
          "module": "aws_cdk.aws_s3_assets"
        }
      }
    },
    "@aws-cdk/aws-sns": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SNS",
          "packageId": "Amazon.CDK.AWS.SNS"
        },
        "java": {
          "maven": {
            "artifactId": "sns",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sns"
        },
        "js": {
          "npm": "@aws-cdk/aws-sns"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-sns",
          "module": "aws_cdk.aws_sns"
        }
      }
    },
    "@aws-cdk/aws-sqs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SQS",
          "packageId": "Amazon.CDK.AWS.SQS"
        },
        "java": {
          "maven": {
            "artifactId": "sqs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sqs"
        },
        "js": {
          "npm": "@aws-cdk/aws-sqs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-sqs",
          "module": "aws_cdk.aws_sqs"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "The CDK Construct Library for AWS::Chatbot",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.73.0 (build 6faeda3)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "AWS::Chatbot",
    "aws-chatbot"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "compiledWithDeprecationWarnings": true,
      "pacmak": {
        "hasDefaultInterfaces": true
      },
      "rosetta": {
        "strict": true
      }
    }
  },
  "name": "@aws-cdk/aws-chatbot",
  "readme": {
    "markdown": "# AWS::Chatbot Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)\n\n![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)\n\n---\n\n<!--END STABILITY BANNER-->\n\nAWS Chatbot is an AWS service that enables DevOps and software development teams to use Slack chat rooms to monitor and respond to operational events in their AWS Cloud. AWS Chatbot processes AWS service notifications from Amazon Simple Notification Service (Amazon SNS), and forwards them to Slack chat rooms so teams can analyze and act on them immediately, regardless of location.\n\nThis module is part of the [AWS Cloud Development Kit](https://github.com/aws/aws-cdk) project.\n\n```ts\nimport * as chatbot from '@aws-cdk/aws-chatbot';\nimport * as sns from '@aws-cdk/aws-sns';\nimport * as iam from '@aws-cdk/aws-iam';\n\nconst slackChannel = new chatbot.SlackChannelConfiguration(this, 'MySlackChannel', {\n  slackChannelConfigurationName: 'YOUR_CHANNEL_NAME',\n  slackWorkspaceId: 'YOUR_SLACK_WORKSPACE_ID',\n  slackChannelId: 'YOUR_SLACK_CHANNEL_ID',\n});\n\nslackChannel.addToRolePolicy(new iam.PolicyStatement({\n  effect: iam.Effect.ALLOW,\n  actions: [\n    's3:GetObject',\n  ],\n  resources: ['arn:aws:s3:::abc/xyz/123.txt'],\n}));\n\nslackChannel.addNotificationTopic(new sns.Topic(this, 'MyTopic'));\n```\n\n## Log Group\n\nSlack channel configuration automatically create a log group with the name `/aws/chatbot/<configuration-name>` in `us-east-1` upon first execution with\nlog data set to never expire.\n\nThe `logRetention` property can be used to set a different expiration period. A log group will be created if not already exists.\nIf the log group already exists, it's expiration will be configured to the value specified in this construct (never expire, by default).\n\nBy default, CDK uses the AWS SDK retry options when interacting with the log group. The `logRetentionRetryOptions` property\nallows you to customize the maximum number of retries and base backoff duration.\n\n*Note* that, if `logRetention` is set, a [CloudFormation custom\nresource](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cfn-customresource.html) is added\nto the stack that pre-creates the log group as part of the stack deployment, if it already doesn't exist, and sets the\ncorrect log retention period (never expire, by default).\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-chatbot",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.Chatbot",
      "packageId": "Amazon.CDK.AWS.Chatbot"
    },
    "java": {
      "maven": {
        "artifactId": "chatbot",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.chatbot"
    },
    "js": {
      "npm": "@aws-cdk/aws-chatbot"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 2"
      ],
      "distName": "aws-cdk.aws-chatbot",
      "module": "aws_cdk.aws_chatbot"
    }
  },
  "types": {
    "@aws-cdk/aws-chatbot.CfnSlackChannelConfiguration": {
      "assembly": "@aws-cdk/aws-chatbot",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Chatbot::SlackChannelConfiguration",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html"
        },
        "remarks": "The `AWS::Chatbot::SlackChannelConfiguration` resource configures a Slack channel to allow users to use AWS Chatbot with AWS CloudFormation templates.\n\nThis resource requires some setup to be done in the AWS Chatbot console. To provide the required Slack workspace ID, you must perform the initial authorization flow with Slack in the AWS Chatbot console, then copy and paste the workspace ID from the console. For more details, see steps 1-4 in [Setting Up AWS Chatbot with Slack](https://docs.aws.amazon.com/chatbot/latest/adminguide/setting-up.html#Setup_intro) in the *AWS Chatbot User Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Chatbot::SlackChannelConfiguration`."
      },
      "fqn": "@aws-cdk/aws-chatbot.CfnSlackChannelConfiguration",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Chatbot::SlackChannelConfiguration`."
        },
        "locationInModule": {
          "filename": "lib/chatbot.generated.ts",
          "line": 271
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-chatbot.CfnSlackChannelConfigurationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/chatbot.generated.ts",
        "line": 169
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/chatbot.generated.ts",
            "line": 295
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/chatbot.generated.ts",
            "line": 313
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnSlackChannelConfiguration",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/chatbot.generated.ts",
            "line": 173
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/chatbot.generated.ts",
            "line": 198
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/chatbot.generated.ts",
            "line": 300
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-configurationname"
            },
            "stability": "external",
            "summary": "The name of the configuration."
          },
          "locationInModule": {
            "filename": "lib/chatbot.generated.ts",
            "line": 205
          },
          "name": "configurationName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-iamrolearn"
            },
            "remarks": "This is a user-defined role that AWS Chatbot will assume. This is not the service-linked role. For more information, see [IAM Policies for AWS Chatbot](https://docs.aws.amazon.com/chatbot/latest/adminguide/chatbot-iam-policies.html) .",
            "stability": "external",
            "summary": "The ARN of the IAM role that defines the permissions for AWS Chatbot ."
          },
          "locationInModule": {
            "filename": "lib/chatbot.generated.ts",
            "line": 214
          },
          "name": "iamRoleArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-slackchannelid"
            },
            "remarks": "To get the ID, open Slack, right click on the channel name in the left pane, then choose Copy Link. The channel ID is the 9-character string at the end of the URL. For example, `ABCBBLZZZ` .",
            "stability": "external",
            "summary": "The ID of the Slack channel."
          },
          "locationInModule": {
            "filename": "lib/chatbot.generated.ts",
            "line": 223
          },
          "name": "slackChannelId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-slackworkspaceid"
            },
            "remarks": "To get the workspace ID, you must perform the initial authorization flow with Slack in the AWS Chatbot console. Then you can copy and paste the workspace ID from the console. For more details, see steps 1-4 in [Setting Up AWS Chatbot with Slack](https://docs.aws.amazon.com/chatbot/latest/adminguide/setting-up.html#Setup_intro) in the *AWS Chatbot User Guide* .",
            "stability": "external",
            "summary": "The ID of the Slack workspace authorized with AWS Chatbot ."
          },
          "locationInModule": {
            "filename": "lib/chatbot.generated.ts",
            "line": 232
          },
          "name": "slackWorkspaceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-guardrailpolicies"
            },
            "remarks": "The AWS managed 'AdministratorAccess' policy is applied as a default if this is not set.",
            "stability": "external",
            "summary": "The list of IAM policy ARNs that are applied as channel guardrails."
          },
          "locationInModule": {
            "filename": "lib/chatbot.generated.ts",
            "line": 239
          },
          "name": "guardrailPolicies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-logginglevel"
            },
            "remarks": "Logging levels include `ERROR` , `INFO` , or `NONE` .",
            "stability": "external",
            "summary": "Specifies the logging level for this configuration. This property affects the log entries pushed to Amazon CloudWatch Logs."
          },
          "locationInModule": {
            "filename": "lib/chatbot.generated.ts",
            "line": 248
          },
          "name": "loggingLevel",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-snstopicarns"
            },
            "stability": "external",
            "summary": "The ARNs of the SNS topics that deliver notifications to AWS Chatbot ."
          },
          "locationInModule": {
            "filename": "lib/chatbot.generated.ts",
            "line": 255
          },
          "name": "snsTopicArns",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-userrolerequired"
            },
            "stability": "external",
            "summary": "Enables use of a user role requirement in your chat configuration."
          },
          "locationInModule": {
            "filename": "lib/chatbot.generated.ts",
            "line": 262
          },
          "name": "userRoleRequired",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/chatbot.generated:CfnSlackChannelConfiguration"
    },
    "@aws-cdk/aws-chatbot.CfnSlackChannelConfigurationProps": {
      "assembly": "@aws-cdk/aws-chatbot",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnSlackChannelConfiguration`."
      },
      "fqn": "@aws-cdk/aws-chatbot.CfnSlackChannelConfigurationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/chatbot.generated.ts",
        "line": 20
      },
      "name": "CfnSlackChannelConfigurationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-configurationname"
            },
            "stability": "external",
            "summary": "The name of the configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/chatbot.generated.ts",
            "line": 27
          },
          "name": "configurationName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-iamrolearn"
            },
            "remarks": "This is a user-defined role that AWS Chatbot will assume. This is not the service-linked role. For more information, see [IAM Policies for AWS Chatbot](https://docs.aws.amazon.com/chatbot/latest/adminguide/chatbot-iam-policies.html) .",
            "stability": "external",
            "summary": "The ARN of the IAM role that defines the permissions for AWS Chatbot ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/chatbot.generated.ts",
            "line": 36
          },
          "name": "iamRoleArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-slackchannelid"
            },
            "remarks": "To get the ID, open Slack, right click on the channel name in the left pane, then choose Copy Link. The channel ID is the 9-character string at the end of the URL. For example, `ABCBBLZZZ` .",
            "stability": "external",
            "summary": "The ID of the Slack channel."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/chatbot.generated.ts",
            "line": 45
          },
          "name": "slackChannelId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-slackworkspaceid"
            },
            "remarks": "To get the workspace ID, you must perform the initial authorization flow with Slack in the AWS Chatbot console. Then you can copy and paste the workspace ID from the console. For more details, see steps 1-4 in [Setting Up AWS Chatbot with Slack](https://docs.aws.amazon.com/chatbot/latest/adminguide/setting-up.html#Setup_intro) in the *AWS Chatbot User Guide* .",
            "stability": "external",
            "summary": "The ID of the Slack workspace authorized with AWS Chatbot ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/chatbot.generated.ts",
            "line": 54
          },
          "name": "slackWorkspaceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-guardrailpolicies"
            },
            "remarks": "The AWS managed 'AdministratorAccess' policy is applied as a default if this is not set.",
            "stability": "external",
            "summary": "The list of IAM policy ARNs that are applied as channel guardrails."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/chatbot.generated.ts",
            "line": 61
          },
          "name": "guardrailPolicies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-logginglevel"
            },
            "remarks": "Logging levels include `ERROR` , `INFO` , or `NONE` .",
            "stability": "external",
            "summary": "Specifies the logging level for this configuration. This property affects the log entries pushed to Amazon CloudWatch Logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/chatbot.generated.ts",
            "line": 70
          },
          "name": "loggingLevel",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-snstopicarns"
            },
            "stability": "external",
            "summary": "The ARNs of the SNS topics that deliver notifications to AWS Chatbot ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/chatbot.generated.ts",
            "line": 77
          },
          "name": "snsTopicArns",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-userrolerequired"
            },
            "stability": "external",
            "summary": "Enables use of a user role requirement in your chat configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/chatbot.generated.ts",
            "line": 84
          },
          "name": "userRoleRequired",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/chatbot.generated:CfnSlackChannelConfigurationProps"
    },
    "@aws-cdk/aws-chatbot.ISlackChannelConfiguration": {
      "assembly": "@aws-cdk/aws-chatbot",
      "docs": {
        "stability": "stable",
        "summary": "Represents a Slack channel configuration."
      },
      "fqn": "@aws-cdk/aws-chatbot.ISlackChannelConfiguration",
      "interfaces": [
        "@aws-cdk/core.IResource",
        "@aws-cdk/aws-iam.IGrantable",
        "@aws-cdk/aws-codestarnotifications.INotificationRuleTarget"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/slack-channel-configuration.ts",
        "line": 109
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Adds a statement to the IAM role."
          },
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 135
          },
          "name": "addToRolePolicy",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Return the given named metric for this SlackChannelConfiguration."
          },
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 140
          },
          "name": "metric",
          "parameters": [
            {
              "name": "metricName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        }
      ],
      "name": "ISlackChannelConfiguration",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The ARN of the Slack channel configuration In the form of arn:aws:chatbot:{region}:{account}:chat-configuration/slack-channel/{slackChannelName}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 116
          },
          "name": "slackChannelConfigurationArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The name of Slack channel configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 122
          },
          "name": "slackChannelConfigurationName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "default": "- A role will be created.",
            "stability": "stable",
            "summary": "The permission role of Slack channel configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 130
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ],
      "symbolId": "lib/slack-channel-configuration:ISlackChannelConfiguration"
    },
    "@aws-cdk/aws-chatbot.LoggingLevel": {
      "assembly": "@aws-cdk/aws-chatbot",
      "docs": {
        "stability": "stable",
        "summary": "Logging levels include ERROR, INFO, or NONE."
      },
      "fqn": "@aws-cdk/aws-chatbot.LoggingLevel",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/slack-channel-configuration.ts",
        "line": 89
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "ERROR."
          },
          "name": "ERROR"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "INFO."
          },
          "name": "INFO"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "NONE."
          },
          "name": "NONE"
        }
      ],
      "name": "LoggingLevel",
      "symbolId": "lib/slack-channel-configuration:LoggingLevel"
    },
    "@aws-cdk/aws-chatbot.SlackChannelConfiguration": {
      "assembly": "@aws-cdk/aws-chatbot",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "A new Slack channel configuration."
      },
      "fqn": "@aws-cdk/aws-chatbot.SlackChannelConfiguration",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/slack-channel-configuration.ts",
          "line": 276
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-chatbot.SlackChannelConfigurationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-chatbot.ISlackChannelConfiguration"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/slack-channel-configuration.ts",
        "line": 195
      },
      "methods": [
        {
          "docs": {
            "returns": "a reference to the existing Slack channel configuration",
            "stability": "stable",
            "summary": "Import an existing Slack channel configuration provided an ARN."
          },
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 205
          },
          "name": "fromSlackChannelConfigurationArn",
          "parameters": [
            {
              "docs": {
                "summary": "The parent creating construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct's name."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "configuration ARN (i.e. arn:aws:chatbot::1234567890:chat-configuration/slack-channel/my-slack)."
              },
              "name": "slackChannelConfigurationArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-chatbot.ISlackChannelConfiguration"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the given named metric for All SlackChannelConfigurations."
          },
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 251
          },
          "name": "metricAll",
          "parameters": [
            {
              "name": "metricName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a SNS topic that deliver notifications to AWS Chatbot."
          },
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 318
          },
          "name": "addNotificationTopic",
          "parameters": [
            {
              "name": "notificationTopic",
              "type": {
                "fqn": "@aws-cdk/aws-sns.ITopic"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds extra permission to iam-role of Slack channel configuration."
          },
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 159
          },
          "name": "addToRolePolicy",
          "overrides": "@aws-cdk/aws-chatbot.ISlackChannelConfiguration",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns a target configuration for notification rule."
          },
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 184
          },
          "name": "bindAsNotificationRuleTarget",
          "overrides": "@aws-cdk/aws-codestarnotifications.INotificationRuleTarget",
          "parameters": [
            {
              "name": "_scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codestarnotifications.NotificationRuleTargetConfig"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the given named metric for this SlackChannelConfiguration."
          },
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 170
          },
          "name": "metric",
          "overrides": "@aws-cdk/aws-chatbot.ISlackChannelConfiguration",
          "parameters": [
            {
              "name": "metricName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        }
      ],
      "name": "SlackChannelConfiguration",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The principal to grant permissions to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 268
          },
          "name": "grantPrincipal",
          "overrides": "@aws-cdk/aws-iam.IGrantable",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IPrincipal"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The ARN of the Slack channel configuration In the form of arn:aws:chatbot:{region}:{account}:chat-configuration/slack-channel/{slackChannelName}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 262
          },
          "name": "slackChannelConfigurationArn",
          "overrides": "@aws-cdk/aws-chatbot.ISlackChannelConfiguration",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of Slack channel configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 264
          },
          "name": "slackChannelConfigurationName",
          "overrides": "@aws-cdk/aws-chatbot.ISlackChannelConfiguration",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The permission role of Slack channel configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 266
          },
          "name": "role",
          "optional": true,
          "overrides": "@aws-cdk/aws-chatbot.ISlackChannelConfiguration",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ],
      "symbolId": "lib/slack-channel-configuration:SlackChannelConfiguration"
    },
    "@aws-cdk/aws-chatbot.SlackChannelConfigurationProps": {
      "assembly": "@aws-cdk/aws-chatbot",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a new Slack channel configuration."
      },
      "fqn": "@aws-cdk/aws-chatbot.SlackChannelConfigurationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/slack-channel-configuration.ts",
        "line": 13
      },
      "name": "SlackChannelConfigurationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of Slack channel configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 18
          },
          "name": "slackChannelConfigurationName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "To get the ID, open Slack, right click on the channel name in the left pane, then choose Copy Link.\nThe channel ID is the 9-character string at the end of the URL. For example, ABCBBLZZZ.",
            "stability": "stable",
            "summary": "The ID of the Slack channel."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 43
          },
          "name": "slackChannelId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "To get the workspace ID, you must perform the initial authorization flow with Slack in the AWS Chatbot console.\nThen you can copy and paste the workspace ID from the console.\nFor more details, see steps 1-4 in Setting Up AWS Chatbot with Slack in the AWS Chatbot User Guide.",
            "see": "https://docs.aws.amazon.com/chatbot/latest/adminguide/setting-up.html#Setup_intro",
            "stability": "stable",
            "summary": "The ID of the Slack workspace authorized with AWS Chatbot."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 35
          },
          "name": "slackWorkspaceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "LoggingLevel.NONE",
            "remarks": "This property affects the log entries pushed to Amazon CloudWatch Logs.",
            "stability": "stable",
            "summary": "Specifies the logging level for this configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 58
          },
          "name": "loggingLevel",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-chatbot.LoggingLevel"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "logs.RetentionDays.INFINITE",
            "remarks": "When updating\nthis property, unsetting it doesn't remove the log retention policy. To\nremove the retention policy, set the value to `INFINITE`.",
            "stability": "stable",
            "summary": "The number of days log events are kept in CloudWatch Logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 67
          },
          "name": "logRetention",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-logs.RetentionDays"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Default AWS SDK retry options.",
            "remarks": "These options control the retry policy when interacting with CloudWatch APIs.",
            "stability": "stable",
            "summary": "When log retention is specified, a custom resource attempts to create the CloudWatch log group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 83
          },
          "name": "logRetentionRetryOptions",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-logs.LogRetentionRetryOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A new role is created.",
            "stability": "stable",
            "summary": "The IAM role for the Lambda function associated with the custom resource that sets the retention policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 75
          },
          "name": "logRetentionRole",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "None",
            "stability": "stable",
            "summary": "The SNS topics that deliver notifications to AWS Chatbot."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 50
          },
          "name": "notificationTopics",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-sns.ITopic"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A role will be created.",
            "stability": "stable",
            "summary": "The permission role of Slack channel configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 25
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ],
      "symbolId": "lib/slack-channel-configuration:SlackChannelConfigurationProps"
    }
  },
  "version": "0.0.0",
  "fingerprint": "VEyiqPpOKbGDNF3QJrOK1O1yweaqNPCp3/HXPLgb81w="
}