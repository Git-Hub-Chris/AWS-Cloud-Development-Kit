{
  "Resources": {
    "Vpc8378EB38": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/Vpc"
          }
        ]
      }
    },
    "VpcPublicSubnet1Subnet5C2D37C4": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/18",
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "AvailabilityZone": "test-region-1a",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/Vpc/PublicSubnet1"
          },
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          }
        ]
      }
    },
    "VpcPublicSubnet1RouteTable6C95E38E": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/Vpc/PublicSubnet1"
          }
        ]
      }
    },
    "VpcPublicSubnet1RouteTableAssociation97140677": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
        }
      }
    },
    "VpcPublicSubnet1DefaultRoute3DA9E72A": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C"
        }
      },
      "DependsOn": [
        "VpcVPCGWBF912B6E"
      ]
    },
    "VpcPublicSubnet1EIPD7E02669": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      }
    },
    "VpcPublicSubnet1NATGateway4D7517AA": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet1EIPD7E02669",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/Vpc/PublicSubnet1"
          }
        ]
      }
    },
    "VpcPublicSubnet2Subnet691E08A3": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.64.0/18",
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "AvailabilityZone": "test-region-1b",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/Vpc/PublicSubnet2"
          },
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          }
        ]
      }
    },
    "VpcPublicSubnet2RouteTable94F7E489": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/Vpc/PublicSubnet2"
          }
        ]
      }
    },
    "VpcPublicSubnet2RouteTableAssociationDD5762D8": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489"
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2Subnet691E08A3"
        }
      }
    },
    "VpcPublicSubnet2DefaultRoute97F91067": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C"
        }
      },
      "DependsOn": [
        "VpcVPCGWBF912B6E"
      ]
    },
    "VpcPrivateSubnet1Subnet536B997A": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.128.0/18",
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "AvailabilityZone": "test-region-1a",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/Vpc/PrivateSubnet1"
          },
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          }
        ]
      }
    },
    "VpcPrivateSubnet1RouteTableB2C5B500": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/Vpc/PrivateSubnet1"
          }
        ]
      }
    },
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet1Subnet536B997A"
        }
      }
    },
    "VpcPrivateSubnet1DefaultRouteBE02A9ED": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA"
        }
      }
    },
    "VpcPrivateSubnet2Subnet3788AAA1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.192.0/18",
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "AvailabilityZone": "test-region-1b",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/Vpc/PrivateSubnet2"
          },
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          }
        ]
      }
    },
    "VpcPrivateSubnet2RouteTableA678073B": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/Vpc/PrivateSubnet2"
          }
        ]
      }
    },
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B"
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
        }
      }
    },
    "VpcPrivateSubnet2DefaultRoute060D2087": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA"
        }
      }
    },
    "VpcIGWD7BA715C": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/Vpc"
          }
        ]
      }
    },
    "VpcVPCGWBF912B6E": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "InternetGatewayId": {
          "Ref": "VpcIGWD7BA715C"
        }
      }
    },
    "FargateCluster7CCD5F93": {
      "Type": "AWS::ECS::Cluster"
    },
    "FargateClusterDefaultCapacityInstanceSecurityGroup29A47FB3": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "aws-ecs-integ/FargateCluster/DefaultCapacity/InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/FargateCluster/DefaultCapacity"
          }
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38"
        }
      }
    },
    "FargateClusterDefaultCapacityInstanceRoleC9F0E7D6": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "ec2.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/FargateCluster/DefaultCapacity"
          }
        ]
      }
    },
    "FargateClusterDefaultCapacityInstanceRoleDefaultPolicy41056D6D": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecs:CreateCluster",
                "ecs:DeregisterContainerInstance",
                "ecs:DiscoverPollEndpoint",
                "ecs:Poll",
                "ecs:RegisterContainerInstance",
                "ecs:StartTelemetrySession",
                "ecs:Submit*",
                "ecr:GetAuthorizationToken",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "FargateClusterDefaultCapacityInstanceRoleDefaultPolicy41056D6D",
        "Roles": [
          {
            "Ref": "FargateClusterDefaultCapacityInstanceRoleC9F0E7D6"
          }
        ]
      }
    },
    "FargateClusterDefaultCapacityInstanceProfile2461A349": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "FargateClusterDefaultCapacityInstanceRoleC9F0E7D6"
          }
        ]
      }
    },
    "FargateClusterDefaultCapacityLaunchConfigC6F71AE5": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceecsoptimizedamiamazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "InstanceType": "t3.large",
        "IamInstanceProfile": {
          "Ref": "FargateClusterDefaultCapacityInstanceProfile2461A349"
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "FargateClusterDefaultCapacityInstanceSecurityGroup29A47FB3",
              "GroupId"
            ]
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\necho ECS_CLUSTER=",
                {
                  "Ref": "FargateCluster7CCD5F93"
                },
                " >> /etc/ecs/ecs.config\nsudo iptables --insert FORWARD 1 --in-interface docker+ --destination 169.254.169.254/32 --jump DROP\nsudo service iptables save\necho ECS_AWSVPC_BLOCK_IMDS=true >> /etc/ecs/ecs.config"
              ]
            ]
          }
        }
      },
      "DependsOn": [
        "FargateClusterDefaultCapacityInstanceRoleDefaultPolicy41056D6D",
        "FargateClusterDefaultCapacityInstanceRoleC9F0E7D6"
      ]
    },
    "FargateClusterDefaultCapacityASG0ECE69C6": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "MaxSize": "2",
        "MinSize": "2",
        "DesiredCapacity": "2",
        "LaunchConfigurationName": {
          "Ref": "FargateClusterDefaultCapacityLaunchConfigC6F71AE5"
        },
        "Tags": [
          {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "aws-ecs-integ/FargateCluster/DefaultCapacity"
          }
        ],
        "VPCZoneIdentifier": [
          {
            "Ref": "VpcPrivateSubnet1Subnet536B997A"
          },
          {
            "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
          }
        ]
      },
      "UpdatePolicy": {
        "AutoScalingReplacingUpdate": {
          "WillReplace": true
        },
        "AutoScalingScheduledAction": {
          "IgnoreUnmodifiedGroupSizeProperties": true
        }
      }
    },
    "FargateClusterDefaultCapacityDrainECSHookFunctionServiceRoleD93485EF": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/FargateCluster/DefaultCapacity"
          }
        ]
      }
    },
    "FargateClusterDefaultCapacityDrainECSHookFunctionServiceRoleDefaultPolicy39863CF1": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ec2:DescribeInstances",
                "ec2:DescribeInstanceAttribute",
                "ec2:DescribeInstanceStatus",
                "ec2:DescribeHosts"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "autoscaling:CompleteLifecycleAction",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":autoscaling:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":autoScalingGroup:*:autoScalingGroupName/",
                    {
                      "Ref": "FargateClusterDefaultCapacityASG0ECE69C6"
                    }
                  ]
                ]
              }
            },
            {
              "Action": [
                "ecs:DescribeContainerInstances",
                "ecs:DescribeTasks"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "ecs:ListContainerInstances",
                "ecs:SubmitContainerStateChange",
                "ecs:SubmitTaskStateChange"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "FargateCluster7CCD5F93",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "ecs:UpdateContainerInstancesState",
                "ecs:ListTasks"
              ],
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "FargateCluster7CCD5F93",
                      "Arn"
                    ]
                  }
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "FargateClusterDefaultCapacityDrainECSHookFunctionServiceRoleDefaultPolicy39863CF1",
        "Roles": [
          {
            "Ref": "FargateClusterDefaultCapacityDrainECSHookFunctionServiceRoleD93485EF"
          }
        ]
      }
    },
    "FargateClusterDefaultCapacityDrainECSHookFunctionCED4EAD9": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "import boto3, json, os, time\n\necs = boto3.client('ecs')\nautoscaling = boto3.client('autoscaling')\n\n\ndef lambda_handler(event, context):\n  print(json.dumps(event))\n  cluster = os.environ['CLUSTER']\n  snsTopicArn = event['Records'][0]['Sns']['TopicArn']\n  lifecycle_event = json.loads(event['Records'][0]['Sns']['Message'])\n  instance_id = lifecycle_event.get('EC2InstanceId')\n  if not instance_id:\n    print('Got event without EC2InstanceId: %s', json.dumps(event))\n    return\n\n  instance_arn = container_instance_arn(cluster, instance_id)\n  print('Instance %s has container instance ARN %s' % (lifecycle_event['EC2InstanceId'], instance_arn))\n\n  if not instance_arn:\n    return\n\n  while has_tasks(cluster, instance_arn):\n    time.sleep(10)\n\n  try:\n    print('Terminating instance %s' % instance_id)\n    autoscaling.complete_lifecycle_action(\n        LifecycleActionResult='CONTINUE',\n        **pick(lifecycle_event, 'LifecycleHookName', 'LifecycleActionToken', 'AutoScalingGroupName'))\n  except Exception as e:\n    # Lifecycle action may have already completed.\n    print(str(e))\n\n\ndef container_instance_arn(cluster, instance_id):\n  \"\"\"Turn an instance ID into a container instance ARN.\"\"\"\n  arns = ecs.list_container_instances(cluster=cluster, filter='ec2InstanceId==' + instance_id)['containerInstanceArns']\n  if not arns:\n    return None\n  return arns[0]\n\n\ndef has_tasks(cluster, instance_arn):\n  \"\"\"Return True if the instance is running tasks for the given cluster.\"\"\"\n  instances = ecs.describe_container_instances(cluster=cluster, containerInstances=[instance_arn])['containerInstances']\n  if not instances:\n    return False\n  instance = instances[0]\n\n  if instance['status'] == 'ACTIVE':\n    # Start draining, then try again later\n    set_container_instance_to_draining(cluster, instance_arn)\n    return True\n\n  tasks = instance['runningTasksCount'] + instance['pendingTasksCount']\n  print('Instance %s has %s tasks' % (instance_arn, tasks))\n\n  return tasks > 0\n\n\ndef set_container_instance_to_draining(cluster, instance_arn):\n  ecs.update_container_instances_state(\n      cluster=cluster,\n      containerInstances=[instance_arn], status='DRAINING')\n\n\ndef pick(dct, *keys):\n  \"\"\"Pick a subset of a dict.\"\"\"\n  return {k: v for k, v in dct.items() if k in keys}\n"
        },
        "Handler": "index.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "FargateClusterDefaultCapacityDrainECSHookFunctionServiceRoleD93485EF",
            "Arn"
          ]
        },
        "Runtime": "python3.6",
        "Environment": {
          "Variables": {
            "CLUSTER": {
              "Ref": "FargateCluster7CCD5F93"
            }
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/FargateCluster/DefaultCapacity"
          }
        ],
        "Timeout": 310
      },
      "DependsOn": [
        "FargateClusterDefaultCapacityDrainECSHookFunctionServiceRoleDefaultPolicy39863CF1",
        "FargateClusterDefaultCapacityDrainECSHookFunctionServiceRoleD93485EF"
      ]
    },
    "FargateClusterDefaultCapacityDrainECSHookFunctionAllowInvokeawsecsintegFargateClusterDefaultCapacityLifecycleHookDrainHookTopic1578B199E6F0F108": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "FargateClusterDefaultCapacityDrainECSHookFunctionCED4EAD9",
            "Arn"
          ]
        },
        "Principal": "sns.amazonaws.com",
        "SourceArn": {
          "Ref": "FargateClusterDefaultCapacityLifecycleHookDrainHookTopic0DDF5B28"
        }
      }
    },
    "FargateClusterDefaultCapacityDrainECSHookFunctionTopic0C5D53E4": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "Protocol": "lambda",
        "TopicArn": {
          "Ref": "FargateClusterDefaultCapacityLifecycleHookDrainHookTopic0DDF5B28"
        },
        "Endpoint": {
          "Fn::GetAtt": [
            "FargateClusterDefaultCapacityDrainECSHookFunctionCED4EAD9",
            "Arn"
          ]
        }
      }
    },
    "FargateClusterDefaultCapacityLifecycleHookDrainHookRole289680DE": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "autoscaling.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/FargateCluster/DefaultCapacity"
          }
        ]
      }
    },
    "FargateClusterDefaultCapacityLifecycleHookDrainHookRoleDefaultPolicyE8B6A62C": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Resource": {
                "Ref": "FargateClusterDefaultCapacityLifecycleHookDrainHookTopic0DDF5B28"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "FargateClusterDefaultCapacityLifecycleHookDrainHookRoleDefaultPolicyE8B6A62C",
        "Roles": [
          {
            "Ref": "FargateClusterDefaultCapacityLifecycleHookDrainHookRole289680DE"
          }
        ]
      }
    },
    "FargateClusterDefaultCapacityLifecycleHookDrainHookTopic0DDF5B28": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/FargateCluster/DefaultCapacity"
          }
        ]
      }
    },
    "FargateClusterDefaultCapacityLifecycleHookDrainHook646944A8": {
      "Type": "AWS::AutoScaling::LifecycleHook",
      "Properties": {
        "AutoScalingGroupName": {
          "Ref": "FargateClusterDefaultCapacityASG0ECE69C6"
        },
        "LifecycleTransition": "autoscaling:EC2_INSTANCE_TERMINATING",
        "DefaultResult": "CONTINUE",
        "HeartbeatTimeout": 300,
        "NotificationTargetARN": {
          "Ref": "FargateClusterDefaultCapacityLifecycleHookDrainHookTopic0DDF5B28"
        },
        "RoleARN": {
          "Fn::GetAtt": [
            "FargateClusterDefaultCapacityLifecycleHookDrainHookRole289680DE",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "FargateClusterDefaultCapacityLifecycleHookDrainHookRoleDefaultPolicyE8B6A62C",
        "FargateClusterDefaultCapacityLifecycleHookDrainHookRole289680DE"
      ]
    },
    "TaskDefTaskRole1EDB4A67": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "TaskDef54694570": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [
          {
            "Essential": true,
            "Image": "amazon/amazon-ecs-sample",
            "Memory": 512,
            "Name": "web",
            "PortMappings": [
              {
                "ContainerPort": 80,
                "HostPort": 0,
                "Protocol": "tcp"
              }
            ]
          }
        ],
        "Family": "awsecsintegTaskDef6FDFB69A",
        "NetworkMode": "bridge",
        "RequiresCompatibilities": [
          "EC2"
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "TaskDefTaskRole1EDB4A67",
            "Arn"
          ]
        }
      }
    },
    "ServiceD69D759B": {
      "Type": "AWS::ECS::Service",
      "Properties": {
        "TaskDefinition": {
          "Ref": "TaskDef54694570"
        },
        "Cluster": {
          "Ref": "FargateCluster7CCD5F93"
        },
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "LaunchType": "EC2",
        "SchedulingStrategy": "REPLICA"
      }
    },
    "ServiceOnAnyInfoEventC11D8F8A": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "EventPattern": {
          "source": [
            "aws.ecs"
          ],
          "detail-type": [
            "ECS Service Action"
          ],
          "resources": [
            {
              "Ref": "ServiceD69D759B"
            }
          ],
          "detail": {
            "eventType": [
              "INFO"
            ],
            "clusterArn": [
              {
                "Fn::GetAtt": [
                  "FargateCluster7CCD5F93",
                  "Arn"
                ]
              }
            ]
          }
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Ref": "TopicBFC7AF6E"
            },
            "Id": "Target0"
          }
        ]
      }
    },
    "ServiceOnAnyWarnEvent822990E7": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "EventPattern": {
          "source": [
            "aws.ecs"
          ],
          "detail-type": [
            "ECS Service Action"
          ],
          "resources": [
            {
              "Ref": "ServiceD69D759B"
            }
          ],
          "detail": {
            "eventType": [
              "WARN"
            ],
            "clusterArn": [
              {
                "Fn::GetAtt": [
                  "FargateCluster7CCD5F93",
                  "Arn"
                ]
              }
            ]
          }
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Ref": "TopicBFC7AF6E"
            },
            "Id": "Target0"
          }
        ]
      }
    },
    "ServiceOnAnyErrorEvent55B44655": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "EventPattern": {
          "source": [
            "aws.ecs"
          ],
          "detail-type": [
            "ECS Service Action"
          ],
          "resources": [
            {
              "Ref": "ServiceD69D759B"
            }
          ],
          "detail": {
            "eventType": [
              "ERROR"
            ],
            "clusterArn": [
              {
                "Fn::GetAtt": [
                  "FargateCluster7CCD5F93",
                  "Arn"
                ]
              }
            ]
          }
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Ref": "TopicBFC7AF6E"
            },
            "Id": "Target0"
          }
        ]
      }
    },
    "ServiceOnServiceSteadyStateBBD7A594": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "EventPattern": {
          "source": [
            "aws.ecs"
          ],
          "detail-type": [
            "ECS Service Action"
          ],
          "resources": [
            {
              "Ref": "ServiceD69D759B"
            }
          ],
          "detail": {
            "eventType": [
              "INFO"
            ],
            "eventName": [
              "SERVICE_STEADY_STATE"
            ],
            "clusterArn": [
              {
                "Fn::GetAtt": [
                  "FargateCluster7CCD5F93",
                  "Arn"
                ]
              }
            ]
          }
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Ref": "TopicBFC7AF6E"
            },
            "Id": "Target0"
          }
        ]
      }
    },
    "ServiceOnTaskSetSteadyState14FE136E": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "EventPattern": {
          "source": [
            "aws.ecs"
          ],
          "detail-type": [
            "ECS Service Action"
          ],
          "resources": [
            {
              "Ref": "ServiceD69D759B"
            }
          ],
          "detail": {
            "eventType": [
              "INFO"
            ],
            "eventName": [
              "TASKSET_STEADY_STATE"
            ],
            "clusterArn": [
              {
                "Fn::GetAtt": [
                  "FargateCluster7CCD5F93",
                  "Arn"
                ]
              }
            ]
          }
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Ref": "TopicBFC7AF6E"
            },
            "Id": "Target0"
          }
        ]
      }
    },
    "ServiceOnServiceDesiredCountUpdatedBA686115": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "EventPattern": {
          "source": [
            "aws.ecs"
          ],
          "detail-type": [
            "ECS Service Action"
          ],
          "resources": [
            {
              "Ref": "ServiceD69D759B"
            }
          ],
          "detail": {
            "eventType": [
              "INFO"
            ],
            "eventName": [
              "SERVICE_DESIRED_COUNT_UPDATED"
            ],
            "clusterArn": [
              {
                "Fn::GetAtt": [
                  "FargateCluster7CCD5F93",
                  "Arn"
                ]
              }
            ]
          }
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Ref": "TopicBFC7AF6E"
            },
            "Id": "Target0"
          }
        ]
      }
    },
    "ServiceOnServiceTaskStartImpairedC0BC8BA7": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "EventPattern": {
          "source": [
            "aws.ecs"
          ],
          "detail-type": [
            "ECS Service Action"
          ],
          "resources": [
            {
              "Ref": "ServiceD69D759B"
            }
          ],
          "detail": {
            "eventType": [
              "WARN"
            ],
            "eventName": [
              "SERVICE_TASK_START_IMPAIRED"
            ],
            "clusterArn": [
              {
                "Fn::GetAtt": [
                  "FargateCluster7CCD5F93",
                  "Arn"
                ]
              }
            ]
          }
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Ref": "TopicBFC7AF6E"
            },
            "Id": "Target0"
          }
        ]
      }
    },
    "ServiceOnServiceDiscoveryInstanceUnhealthyF14F3F2B": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "EventPattern": {
          "source": [
            "aws.ecs"
          ],
          "detail-type": [
            "ECS Service Action"
          ],
          "resources": [
            {
              "Ref": "ServiceD69D759B"
            }
          ],
          "detail": {
            "eventType": [
              "WARN"
            ],
            "eventName": [
              "SERVICE_DISCOVERY_INSTANCE_UNHEALTHY"
            ],
            "clusterArn": [
              {
                "Fn::GetAtt": [
                  "FargateCluster7CCD5F93",
                  "Arn"
                ]
              }
            ]
          }
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Ref": "TopicBFC7AF6E"
            },
            "Id": "Target0"
          }
        ]
      }
    },
    "ServiceOnServiceDaemonPlacementConstraintViolated85E34D43": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "EventPattern": {
          "source": [
            "aws.ecs"
          ],
          "detail-type": [
            "ECS Service Action"
          ],
          "resources": [
            {
              "Ref": "ServiceD69D759B"
            }
          ],
          "detail": {
            "eventType": [
              "ERROR"
            ],
            "eventName": [
              "SERVICE_DAEMON_PLACEMENT_CONSTRAINT_VIOLATED"
            ],
            "clusterArn": [
              {
                "Fn::GetAtt": [
                  "FargateCluster7CCD5F93",
                  "Arn"
                ]
              }
            ]
          }
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Ref": "TopicBFC7AF6E"
            },
            "Id": "Target0"
          }
        ]
      }
    },
    "ServiceOnEcsOperationThrottled076C6F32": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "EventPattern": {
          "source": [
            "aws.ecs"
          ],
          "detail-type": [
            "ECS Service Action"
          ],
          "resources": [
            {
              "Ref": "ServiceD69D759B"
            }
          ],
          "detail": {
            "eventType": [
              "ERROR"
            ],
            "eventName": [
              "ECS_OPERATION_THROTTLED"
            ],
            "clusterArn": [
              {
                "Fn::GetAtt": [
                  "FargateCluster7CCD5F93",
                  "Arn"
                ]
              }
            ]
          }
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Ref": "TopicBFC7AF6E"
            },
            "Id": "Target0"
          }
        ]
      }
    },
    "ServiceOnServiceDiscoveryOperationThrottled79FC68A4": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "EventPattern": {
          "source": [
            "aws.ecs"
          ],
          "detail-type": [
            "ECS Service Action"
          ],
          "resources": [
            {
              "Ref": "ServiceD69D759B"
            }
          ],
          "detail": {
            "eventType": [
              "ERROR"
            ],
            "eventName": [
              "SERVICE_DISCOVERY_OPERATION_THROTTLED"
            ],
            "clusterArn": [
              {
                "Fn::GetAtt": [
                  "FargateCluster7CCD5F93",
                  "Arn"
                ]
              }
            ]
          }
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Ref": "TopicBFC7AF6E"
            },
            "Id": "Target0"
          }
        ]
      }
    },
    "ServiceOnServiceTaskPlacementFailuredC45D3852": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "EventPattern": {
          "source": [
            "aws.ecs"
          ],
          "detail-type": [
            "ECS Service Action"
          ],
          "resources": [
            {
              "Ref": "ServiceD69D759B"
            }
          ],
          "detail": {
            "eventType": [
              "ERROR"
            ],
            "eventName": [
              "SERVICE_TASK_PLACEMENT_FAILURE"
            ],
            "clusterArn": [
              {
                "Fn::GetAtt": [
                  "FargateCluster7CCD5F93",
                  "Arn"
                ]
              }
            ]
          }
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Ref": "TopicBFC7AF6E"
            },
            "Id": "Target0"
          }
        ]
      }
    },
    "ServiceOnServiceTaskConfigurationFailure5AC36E66": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "EventPattern": {
          "source": [
            "aws.ecs"
          ],
          "detail-type": [
            "ECS Service Action"
          ],
          "resources": [
            {
              "Ref": "ServiceD69D759B"
            }
          ],
          "detail": {
            "eventType": [
              "ERROR"
            ],
            "eventName": [
              "SERVICE_TASK_CONFIGURATION_FAILURE"
            ],
            "clusterArn": [
              {
                "Fn::GetAtt": [
                  "FargateCluster7CCD5F93",
                  "Arn"
                ]
              }
            ]
          }
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Ref": "TopicBFC7AF6E"
            },
            "Id": "Target0"
          }
        ]
      }
    },
    "ServiceOnEvent887614EC": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "EventPattern": {
          "source": [
            "aws.ecs"
          ],
          "detail-type": [
            "ECS Service Action"
          ],
          "resources": [
            {
              "Ref": "ServiceD69D759B"
            }
          ],
          "detail": {
            "clusterArn": [
              {
                "Fn::GetAtt": [
                  "FargateCluster7CCD5F93",
                  "Arn"
                ]
              }
            ]
          }
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Ref": "TopicBFC7AF6E"
            },
            "Id": "Target0"
          }
        ]
      }
    },
    "TopicBFC7AF6E": {
      "Type": "AWS::SNS::Topic"
    },
    "TopicPolicyA1747468": {
      "Type": "AWS::SNS::TopicPolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com"
              },
              "Resource": {
                "Ref": "TopicBFC7AF6E"
              },
              "Sid": "0"
            }
          ],
          "Version": "2012-10-17"
        },
        "Topics": [
          {
            "Ref": "TopicBFC7AF6E"
          }
        ]
      }
    }
  },
  "Parameters": {
    "SsmParameterValueawsserviceecsoptimizedamiamazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
      "Default": "/aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id"
    }
  }
}