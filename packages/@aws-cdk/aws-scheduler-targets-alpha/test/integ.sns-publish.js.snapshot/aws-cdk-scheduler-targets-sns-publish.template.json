{
 "Resources": {
  "MyLambdaServiceRole4539ECB6": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "MyLambdaServiceRoleDefaultPolicy5BBC6F68": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "ssm:PutParameter",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":ssm:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":parameter/",
          {
           "Ref": "MyParameter18BA547D"
          }
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "MyLambdaServiceRoleDefaultPolicy5BBC6F68",
    "Roles": [
     {
      "Ref": "MyLambdaServiceRole4539ECB6"
     }
    ]
   }
  },
  "MyLambdaCCE802FB": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "\nexports.handler = async function(event) {\n  const { SSMClient, PutParameterCommand } = require('@aws-sdk/client-ssm');\n\n  const client = new SSMClient();\n\n  const input = {\n    Name: 'MyParameter',\n    Value: 'üåà',\n    Overwrite: true,\n  };\n  const command = new PutParameterCommand(input);\n  await client.send(command);\n}\n"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "MyLambdaServiceRole4539ECB6",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 30
   },
   "DependsOn": [
    "MyLambdaServiceRoleDefaultPolicy5BBC6F68",
    "MyLambdaServiceRole4539ECB6"
   ]
  },
  "MyLambdaAllowInvokeawscdkschedulertargetssnspublishTopic52E7BC4108B1284E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MyLambdaCCE802FB",
      "Arn"
     ]
    },
    "Principal": "sns.amazonaws.com",
    "SourceArn": {
     "Ref": "TopicBFC7AF6E"
    }
   }
  },
  "MyLambdaTopic6C6C36B2": {
   "Type": "AWS::SNS::Subscription",
   "Properties": {
    "Endpoint": {
     "Fn::GetAtt": [
      "MyLambdaCCE802FB",
      "Arn"
     ]
    },
    "Protocol": "lambda",
    "TopicArn": {
     "Ref": "TopicBFC7AF6E"
    }
   }
  },
  "MyParameter18BA547D": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Name": "MyParameter",
    "Type": "String",
    "Value": "üåßÔ∏è"
   }
  },
  "TopicBFC7AF6E": {
   "Type": "AWS::SNS::Topic"
  },
  "Schedule83A77FD1": {
   "Type": "AWS::Scheduler::Schedule",
   "Properties": {
    "FlexibleTimeWindow": {
     "Mode": "OFF"
    },
    "ScheduleExpression": "rate(1 minute)",
    "ScheduleExpressionTimezone": "Etc/UTC",
    "State": "ENABLED",
    "Target": {
     "Arn": {
      "Ref": "TopicBFC7AF6E"
     },
     "RetryPolicy": {
      "MaximumEventAgeInSeconds": 86400,
      "MaximumRetryAttempts": 185
     },
     "RoleArn": {
      "Fn::GetAtt": [
       "SchedulerRoleForTarget1441a743A31888",
       "Arn"
      ]
     }
    }
   }
  },
  "SchedulerRoleForTarget1441a743A31888": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Condition": {
        "StringEquals": {
         "aws:SourceAccount": {
          "Ref": "AWS::AccountId"
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Service": "scheduler.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "SchedulerRoleForTarget1441a7DefaultPolicy885B6BFD": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "sns:Publish",
       "Effect": "Allow",
       "Resource": {
        "Ref": "TopicBFC7AF6E"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "SchedulerRoleForTarget1441a7DefaultPolicy885B6BFD",
    "Roles": [
     {
      "Ref": "SchedulerRoleForTarget1441a743A31888"
     }
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}