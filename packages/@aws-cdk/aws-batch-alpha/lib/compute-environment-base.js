"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ComputeEnvironmentBase = void 0;
const core_1 = require("aws-cdk-lib/core");
/**
 * Abstract base class for ComputeEnvironments
 *
 * @internal
 */
class ComputeEnvironmentBase extends core_1.Resource {
    constructor(scope, id, props) {
        super(scope, id, {
            physicalName: props?.computeEnvironmentName,
        });
        this.serviceRole = props?.serviceRole;
        this.enabled = props?.enabled ?? true;
    }
}
exports.ComputeEnvironmentBase = ComputeEnvironmentBase;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcHV0ZS1lbnZpcm9ubWVudC1iYXNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiY29tcHV0ZS1lbnZpcm9ubWVudC1iYXNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUNBLDJDQUF1RDtBQWtGdkQ7Ozs7R0FJRztBQUNILE1BQXNCLHNCQUF1QixTQUFRLGVBQVE7SUFNM0QsWUFBWSxLQUFnQixFQUFFLEVBQVUsRUFBRSxLQUErQjtRQUN2RSxLQUFLLENBQUMsS0FBSyxFQUFFLEVBQUUsRUFBRTtZQUNmLFlBQVksRUFBRSxLQUFLLEVBQUUsc0JBQXNCO1NBQzVDLENBQUMsQ0FBQztRQUVILElBQUksQ0FBQyxXQUFXLEdBQUcsS0FBSyxFQUFFLFdBQVcsQ0FBQztRQUN0QyxJQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssRUFBRSxPQUFPLElBQUksSUFBSSxDQUFDO0tBQ3ZDO0NBQ0Y7QUFkRCx3REFjQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGlhbSBmcm9tICdhd3MtY2RrLWxpYi9hd3MtaWFtJztcbmltcG9ydCB7IElSZXNvdXJjZSwgUmVzb3VyY2UgfSBmcm9tICdhd3MtY2RrLWxpYi9jb3JlJztcbmltcG9ydCB7IENvbnN0cnVjdCB9IGZyb20gJ2NvbnN0cnVjdHMnO1xuXG4vKipcbiAqIFJlcHJlc2VudHMgYSBDb21wdXRlRW52aXJvbm1lbnRcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBJQ29tcHV0ZUVudmlyb25tZW50IGV4dGVuZHMgSVJlc291cmNlIHtcbiAgLyoqXG4gICAqIFRoZSBuYW1lIG9mIHRoZSBDb21wdXRlRW52aXJvbm1lbnRcbiAgICpcbiAgICogQGF0dHJpYnV0ZVxuICAgKi9cbiAgcmVhZG9ubHkgY29tcHV0ZUVudmlyb25tZW50TmFtZTogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBUaGUgQVJOIG9mIHRoaXMgY29tcHV0ZSBlbnZpcm9ubWVudC5cbiAgICpcbiAgICogQGF0dHJpYnV0ZVxuICAgKi9cbiAgcmVhZG9ubHkgY29tcHV0ZUVudmlyb25tZW50QXJuOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSByb2xlIEJhdGNoIHVzZXMgdG8gcGVyZm9ybSBhY3Rpb25zIG9uIHlvdXIgYmVoYWxmXG4gICAqIGluIHlvdXIgYWNjb3VudCwgc3VjaCBhcyBwcm92aXNpb24gaW5zdGFuY2VzIHRvIHJ1biB5b3VyIGpvYnNcbiAgICpcbiAgICogQGRlZmF1bHQgLSBhIHNlcnZpY2VSb2xlIHdpbGwgYmUgY3JlYXRlZCBmb3IgbWFuYWdlZCBDRXMsIG5vbmUgZm9yIHVubWFuYWdlZCBDRXNcbiAgICovXG4gIHJlYWRvbmx5IHNlcnZpY2VSb2xlPzogaWFtLklSb2xlO1xuXG4gIC8qKlxuICAgKiBXaGV0aGVyIG9yIG5vdCB0aGlzIENvbXB1dGVFbnZpcm9ubWVudCBjYW4gYWNjZXB0IGpvYnMgZnJvbSBhIFF1ZXVlLlxuICAgKiBFbmFibGVkIENvbXB1dGVFbnZpcm9ubWVudHMgY2FuIGFjY2VwdCBqb2JzIGZyb20gYSBRdWV1ZSBhbmRcbiAgICogY2FuIHNjYWxlIGluc3RhbmNlcyB1cCBvciBkb3duLlxuICAgKiBEaXNhYmxlZCBDb21wdXRlRW52aXJvbm1lbnRzIGNhbm5vdCBhY2NlcHQgam9icyBmcm9tIGEgUXVldWUgb3JcbiAgICogc2NhbGUgaW5zdGFuY2VzIHVwIG9yIGRvd24uXG4gICAqXG4gICAqIElmIHlvdSBjaGFuZ2UgYSBDb21wdXRlRW52aXJvbm1lbnQgZnJvbSBlbmFibGVkIHRvIGRpc2FibGVkIHdoaWxlIGl0IGlzIGV4ZWN1dGluZyBqb2JzLFxuICAgKiBKb2JzIGluIHRoZSBgU1RBUlRFRGAgb3IgYFJVTk5JTkdgIHN0YXRlcyB3aWxsIG5vdFxuICAgKiBiZSBpbnRlcnJ1cHRlZC4gQXMgam9icyBjb21wbGV0ZSwgdGhlIENvbXB1dGVFbnZpcm9ubWVudCB3aWxsIHNjYWxlIGluc3RhbmNlcyBkb3duIHRvIGBtaW52Q3B1c2AuXG4gICAqXG4gICAqIFRvIGVuc3VyZSB5b3UgYXJlbid0IGJpbGxlZCBmb3IgdW51c2VkIGNhcGFjaXR5LCBzZXQgYG1pbnZDcHVzYCB0byBgMGAuXG4gICAqL1xuICByZWFkb25seSBlbmFibGVkOiBib29sZWFuO1xufVxuXG4vKipcbiAqIFByb3BzIGNvbW1vbiB0byBhbGwgQ29tcHV0ZUVudmlyb25tZW50c1xuICovXG5leHBvcnQgaW50ZXJmYWNlIENvbXB1dGVFbnZpcm9ubWVudFByb3BzIHtcbiAgLyoqXG4gICAqIFRoZSBuYW1lIG9mIHRoZSBDb21wdXRlRW52aXJvbm1lbnRcbiAgICpcbiAgICogQGRlZmF1bHQgLSBnZW5lcmF0ZWQgYnkgQ2xvdWRGb3JtYXRpb25cbiAgICovXG4gIHJlYWRvbmx5IGNvbXB1dGVFbnZpcm9ubWVudE5hbWU/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSByb2xlIEJhdGNoIHVzZXMgdG8gcGVyZm9ybSBhY3Rpb25zIG9uIHlvdXIgYmVoYWxmXG4gICAqIGluIHlvdXIgYWNjb3VudCwgc3VjaCBhcyBwcm92aXNpb24gaW5zdGFuY2VzIHRvIHJ1biB5b3VyIGpvYnNcbiAgICpcbiAgICogQGRlZmF1bHQgLSBhIHNlcnZpY2VSb2xlIHdpbGwgYmUgY3JlYXRlZCBmb3IgbWFuYWdlZCBDRXMsIG5vbmUgZm9yIHVubWFuYWdlZCBDRXNcbiAgICovXG4gIHJlYWRvbmx5IHNlcnZpY2VSb2xlPzogaWFtLklSb2xlO1xuXG4gIC8qKlxuICAgKiBXaGV0aGVyIG9yIG5vdCB0aGlzIENvbXB1dGVFbnZpcm9ubWVudCBjYW4gYWNjZXB0IGpvYnMgZnJvbSBhIFF1ZXVlLlxuICAgKiBFbmFibGVkIENvbXB1dGVFbnZpcm9ubWVudHMgY2FuIGFjY2VwdCBqb2JzIGZyb20gYSBRdWV1ZSBhbmRcbiAgICogY2FuIHNjYWxlIGluc3RhbmNlcyB1cCBvciBkb3duLlxuICAgKiBEaXNhYmxlZCBDb21wdXRlRW52aXJvbm1lbnRzIGNhbm5vdCBhY2NlcHQgam9icyBmcm9tIGEgUXVldWUgb3JcbiAgICogc2NhbGUgaW5zdGFuY2VzIHVwIG9yIGRvd24uXG4gICAqXG4gICAqIElmIHlvdSBjaGFuZ2UgYSBDb21wdXRlRW52aXJvbm1lbnQgZnJvbSBlbmFibGVkIHRvIGRpc2FibGVkIHdoaWxlIGl0IGlzIGV4ZWN1dGluZyBqb2JzLFxuICAgKiBKb2JzIGluIHRoZSBgU1RBUlRFRGAgb3IgYFJVTk5JTkdgIHN0YXRlcyB3aWxsIG5vdFxuICAgKiBiZSBpbnRlcnJ1cHRlZC4gQXMgam9icyBjb21wbGV0ZSwgdGhlIENvbXB1dGVFbnZpcm9ubWVudCB3aWxsIHNjYWxlIGluc3RhbmNlcyBkb3duIHRvIGBtaW52Q3B1c2AuXG4gICAqXG4gICAqIFRvIGVuc3VyZSB5b3UgYXJlbid0IGJpbGxlZCBmb3IgdW51c2VkIGNhcGFjaXR5LCBzZXQgYG1pbnZDcHVzYCB0byBgMGAuXG4gICAqXG4gICAqIEBkZWZhdWx0IHRydWVcbiAgICovXG4gIHJlYWRvbmx5IGVuYWJsZWQ/OiBib29sZWFuO1xufVxuXG4vKipcbiAqIEFic3RyYWN0IGJhc2UgY2xhc3MgZm9yIENvbXB1dGVFbnZpcm9ubWVudHNcbiAqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGFic3RyYWN0IGNsYXNzIENvbXB1dGVFbnZpcm9ubWVudEJhc2UgZXh0ZW5kcyBSZXNvdXJjZSBpbXBsZW1lbnRzIElDb21wdXRlRW52aXJvbm1lbnQge1xuICBwdWJsaWMgYWJzdHJhY3QgcmVhZG9ubHkgY29tcHV0ZUVudmlyb25tZW50TmFtZTogc3RyaW5nO1xuICBwdWJsaWMgcmVhZG9ubHkgc2VydmljZVJvbGU/OiBpYW0uSVJvbGUgfCB1bmRlZmluZWQ7XG4gIHB1YmxpYyByZWFkb25seSBlbmFibGVkOiBib29sZWFuO1xuICBwdWJsaWMgYWJzdHJhY3QgcmVhZG9ubHkgY29tcHV0ZUVudmlyb25tZW50QXJuOiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3Ioc2NvcGU6IENvbnN0cnVjdCwgaWQ6IHN0cmluZywgcHJvcHM/OiBDb21wdXRlRW52aXJvbm1lbnRQcm9wcykge1xuICAgIHN1cGVyKHNjb3BlLCBpZCwge1xuICAgICAgcGh5c2ljYWxOYW1lOiBwcm9wcz8uY29tcHV0ZUVudmlyb25tZW50TmFtZSxcbiAgICB9KTtcblxuICAgIHRoaXMuc2VydmljZVJvbGUgPSBwcm9wcz8uc2VydmljZVJvbGU7XG4gICAgdGhpcy5lbmFibGVkID0gcHJvcHM/LmVuYWJsZWQgPz8gdHJ1ZTtcbiAgfVxufVxuIl19