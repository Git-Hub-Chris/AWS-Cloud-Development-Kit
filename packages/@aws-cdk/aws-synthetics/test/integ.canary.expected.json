{
  "Resources": {
    "mycanaryServiceBucketF66DFA57": {
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "mycanaryServiceRoleEE2F0C82": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "s3:ListAllMyBuckets",
                    "s3:PutObject",
                    "s3:GetBucketLocation"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": "cloudwatch:PutMetricData",
                  "Condition": {
                    "StringEquals": {
                      "cloudwatch:namespace": "CloudWatchSynthetics"
                    }
                  },
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:logs:::*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "canaryPolicy"
          }
        ]
      }
    },
    "mycanaryDCC21B3D": {
      "Type": "AWS::Synthetics::Canary",
      "Properties": {
        "ArtifactS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "mycanaryServiceBucketF66DFA57"
              }
            ]
          ]
        },
        "Code": {
          "Handler": "index.handler",
          "Script": "var synthetics = require('Synthetics');\nconst log = require('SyntheticsLogger');\n\nconst pageLoadBlueprint = async function () {\n\n    // INSERT URL here\n    const URL = \"https://amazon.com\";\n\n    let page = await synthetics.getPage();\n    const response = await page.goto(URL, {waitUntil: 'domcontentloaded', timeout: 30000});\n    //Wait for page to render.\n    //Increase or decrease wait time based on endpoint being monitored.\n    await page.waitFor(15000);\n    await synthetics.takeScreenshot('loaded', 'loaded');\n    let pageTitle = await page.title();\n    log.info('Page title: ' + pageTitle);\n    if (response.status() !== 200) {\n        throw \"Failed to load page!\";\n    }\n};\n\nexports.handler = async () => {\n    return await pageLoadBlueprint();\n};\n"
        },
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "mycanaryServiceRoleEE2F0C82",
            "Arn"
          ]
        },
        "Name": "myfirstcanary",
        "RuntimeVersion": "syn-1.0",
        "Schedule": {
          "DurationInSeconds": "0",
          "Expression": "rate(5 minutes)"
        },
        "StartCanaryAfterCreation": true,
        "RunConfig": {
          "MemoryInMB": 960,
          "TimeoutInSeconds": 300
        }
      },
      "DependsOn": [
        "mycanaryServiceRoleEE2F0C82"
      ]
    }
  }
}