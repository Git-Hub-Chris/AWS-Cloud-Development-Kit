Mappings:
  RegionMap:
    region-1:
      HVM64: name1
      HVMG2: name2
Conditions:
  AlwaysTrueCond:
    !Not
    - !Equals
      - Ref: AWS::Region
      - completely-made-up-region
  AndCond:
    !And
    - Condition: AlwaysTrueCond
    - !Or
      - Condition: AlwaysTrueCond
      - Condition: AlwaysTrueCond
Resources:
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock:
        !If
        - AlwaysTrueCond
        - !Cidr
          - 192.168.1.1/24
          - 2
          - 5
        - !Cidr
          - 10.0.0.0/24
          - '6'
          - '5'
  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        !If
        - AndCond
        - !FindInMap
          - RegionMap
          - region-1
          - HVM64
        - Unreachable
  Subnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        !If
        - AlwaysTrueCond
        - !Split
          - ","
          - !ImportValue ImportedVpcId
        - Unreachable
      CidrBlock: 10.0.0.0/24
      AvailabilityZone:
        !Select
        - '0'
        - !GetAZs ''
  Subnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        !Select
        - 0
        - !Cidr
          - 10.0.0.0/24
          - 5
          - 2
      CidrBlock: 10.0.0.0/24
      AvailabilityZone:
        !Select
        - '0'
        - !GetAZs eu-west-2
  TransformBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        !If
        - AndCond
        - !Transform {
            "Name": AWS::Include,
            "Parameters": {
              Location: location,
              AnotherParameter:
                !Base64 AnotherValue
            }
          }