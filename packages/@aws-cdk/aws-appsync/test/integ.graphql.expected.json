{
  "Resources": {
    "PoolsmsRoleC3352CE6": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "sts:ExternalId": "awsappsyncintegPool5D14B05B"
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "cognito-idp.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "sns:Publish",
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "sns-publish"
          }
        ]
      }
    },
    "PoolD3F588B8": {
      "Type": "AWS::Cognito::UserPool",
      "Properties": {
        "AccountRecoverySetting": {
          "RecoveryMechanisms": [
            {
              "Name": "verified_phone_number",
              "Priority": 1
            },
            {
              "Name": "verified_email",
              "Priority": 2
            }
          ]
        },
        "AdminCreateUserConfig": {
          "AllowAdminCreateUserOnly": true
        },
        "EmailVerificationMessage": "The verification code to your new account is {####}",
        "EmailVerificationSubject": "Verify your new account",
        "SmsConfiguration": {
          "ExternalId": "awsappsyncintegPool5D14B05B",
          "SnsCallerArn": {
            "Fn::GetAtt": [
              "PoolsmsRoleC3352CE6",
              "Arn"
            ]
          }
        },
        "SmsVerificationMessage": "The verification code to your new account is {####}",
        "UserPoolName": "myPool",
        "VerificationMessageTemplate": {
          "DefaultEmailOption": "CONFIRM_WITH_CODE",
          "EmailMessage": "The verification code to your new account is {####}",
          "EmailSubject": "Verify your new account",
          "SmsMessage": "The verification code to your new account is {####}"
        }
      }
    },
    "ApiF70053CD": {
      "Type": "AWS::AppSync::GraphQLApi",
      "Properties": {
        "AuthenticationType": "AMAZON_COGNITO_USER_POOLS",
        "Name": "demoapi",
        "AdditionalAuthenticationProviders": [
          {
            "AuthenticationType": "API_KEY"
          }
        ],
        "UserPoolConfig": {
          "AwsRegion": {
            "Ref": "AWS::Region"
          },
          "DefaultAction": "ALLOW",
          "UserPoolId": {
            "Ref": "PoolD3F588B8"
          }
        }
      }
    },
    "ApiDefaultAPIKeyApiKey74F5313B": {
      "Type": "AWS::AppSync::ApiKey",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId"
          ]
        },
        "Description": "Default API Key created by CDK"
      }
    },
    "ApiSchema510EECD7": {
      "Type": "AWS::AppSync::GraphQLSchema",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId"
          ]
        },
        "Definition": "type ServiceVersion @aws_api_key {\n  version: String!\n}\n\ntype Customer @aws_api_key {\n  id: String!\n  name: String!\n}\n\ninput SaveCustomerInput {\n  name: String!\n}\n\ntype Order @aws_api_key {\n  customer: String!\n  order: String!\n}\n\ntype Payment @aws_api_key {\n  id: String!\n  amount: String!\n}\n\ninput PaymentInput {\n  amount: String!\n}\n\ntype Query @aws_api_key {\n  getServiceVersion: ServiceVersion\n  getCustomers: [Customer]\n  getCustomer(id: String): Customer\n  getCustomerOrdersEq(customer: String): Order\n  getCustomerOrdersLt(customer: String): Order\n  getCustomerOrdersLe(customer: String): Order\n  getCustomerOrdersGt(customer: String): Order\n  getCustomerOrdersGe(customer: String): Order\n  getCustomerOrdersFilter(customer: String, order: String): Order\n  getCustomerOrdersBetween(customer: String, order1: String, order2: String): Order\n  getPayment(id: String): Payment\n}\n\ninput FirstOrderInput {\n  product: String!\n  quantity: Int!\n}\n\ntype Mutation @aws_api_key {\n  addCustomer(customer: SaveCustomerInput!): Customer\n  saveCustomer(id: String!, customer: SaveCustomerInput!): Customer\n  removeCustomer(id: String!): Customer\n  saveCustomerWithFirstOrder(customer: SaveCustomerInput!, order: FirstOrderInput!, referral: String): Order\n  savePayment(payment: PaymentInput!): Payment\n  doPostOnAws: String!\n}\n"
      }
    },
    "ApiNoneCDKDefault17ACBBC2": {
      "Type": "AWS::AppSync::DataSource",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId"
          ]
        },
        "Name": "NoneCDKDefault",
        "Type": "NONE"
      }
    },
    "ApiNoneCDKDefaultQuerygetServiceVersionResolverD7F3590D": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId"
          ]
        },
        "FieldName": "getServiceVersion",
        "TypeName": "Query",
        "DataSourceName": "NoneCDKDefault",
        "Kind": "UNIT",
        "RequestMappingTemplate": "{\"version\":\"2017-02-28\"}",
        "ResponseMappingTemplate": "{\"version\":\"v1\"}"
      },
      "DependsOn": [
        "ApiNoneCDKDefault17ACBBC2",
        "ApiSchema510EECD7"
      ]
    },
    "ApicustomerServiceRole346E89CA": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "ApicustomerServiceRoleDefaultPolicy4BC79BA3": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CustomerTable260DCC08",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "ApicustomerServiceRoleDefaultPolicy4BC79BA3",
        "Roles": [
          {
            "Ref": "ApicustomerServiceRole346E89CA"
          }
        ]
      }
    },
    "ApicustomerA4A81100": {
      "Type": "AWS::AppSync::DataSource",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId"
          ]
        },
        "Name": "customer",
        "Type": "AMAZON_DYNAMODB",
        "DynamoDBConfig": {
          "AwsRegion": {
            "Ref": "AWS::Region"
          },
          "TableName": {
            "Ref": "CustomerTable260DCC08"
          }
        },
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "ApicustomerServiceRole346E89CA",
            "Arn"
          ]
        }
      }
    },
    "ApicustomerQuerygetCustomersResolverE0EEF328": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId"
          ]
        },
        "FieldName": "getCustomers",
        "TypeName": "Query",
        "DataSourceName": "customer",
        "Kind": "UNIT",
        "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Scan\"}",
        "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
      },
      "DependsOn": [
        "ApicustomerA4A81100",
        "ApiSchema510EECD7"
      ]
    },
    "ApicustomerQuerygetCustomerResolverE52762E2": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId"
          ]
        },
        "FieldName": "getCustomer",
        "TypeName": "Query",
        "DataSourceName": "customer",
        "Kind": "UNIT",
        "RequestMappingTemplate": "{\"version\": \"2017-02-28\", \"operation\": \"GetItem\", \"key\": {\"id\": $util.dynamodb.toDynamoDBJson($ctx.args.id)}}",
        "ResponseMappingTemplate": "$util.toJson($ctx.result)"
      },
      "DependsOn": [
        "ApicustomerA4A81100",
        "ApiSchema510EECD7"
      ]
    },
    "ApicustomerMutationaddCustomerResolver5D475955": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId"
          ]
        },
        "FieldName": "addCustomer",
        "TypeName": "Mutation",
        "DataSourceName": "customer",
        "Kind": "UNIT",
        "RequestMappingTemplate": "\n      #set($input = $ctx.args.customer)\n      \n      {\n        \"version\": \"2017-02-28\",\n        \"operation\": \"PutItem\",\n        \"key\" : {\n      \"id\" : $util.dynamodb.toDynamoDBJson($util.autoId())\n    },\n        \"attributeValues\": $util.dynamodb.toMapValuesJson($input)\n      }",
        "ResponseMappingTemplate": "$util.toJson($ctx.result)"
      },
      "DependsOn": [
        "ApicustomerA4A81100",
        "ApiSchema510EECD7"
      ]
    },
    "ApicustomerMutationsaveCustomerResolverB88520D1": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId"
          ]
        },
        "FieldName": "saveCustomer",
        "TypeName": "Mutation",
        "DataSourceName": "customer",
        "Kind": "UNIT",
        "RequestMappingTemplate": "\n      #set($input = $ctx.args.customer)\n      \n      {\n        \"version\": \"2017-02-28\",\n        \"operation\": \"PutItem\",\n        \"key\" : {\n      \"id\" : $util.dynamodb.toDynamoDBJson($ctx.args.id)\n    },\n        \"attributeValues\": $util.dynamodb.toMapValuesJson($input)\n      }",
        "ResponseMappingTemplate": "$util.toJson($ctx.result)"
      },
      "DependsOn": [
        "ApicustomerA4A81100",
        "ApiSchema510EECD7"
      ]
    },
    "ApicustomerMutationsaveCustomerWithFirstOrderResolverD9DFFE0F": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId"
          ]
        },
        "FieldName": "saveCustomerWithFirstOrder",
        "TypeName": "Mutation",
        "DataSourceName": "customer",
        "Kind": "UNIT",
        "RequestMappingTemplate": "\n      #set($input = $ctx.args.order)\n      $util.qr($input.put(\"referral\", referral))\n      {\n        \"version\": \"2017-02-28\",\n        \"operation\": \"PutItem\",\n        \"key\" : {\n      \"order\" : $util.dynamodb.toDynamoDBJson($util.autoId()),\"customer\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer.id)\n    },\n        \"attributeValues\": $util.dynamodb.toMapValuesJson($input)\n      }",
        "ResponseMappingTemplate": "$util.toJson($ctx.result)"
      },
      "DependsOn": [
        "ApicustomerA4A81100",
        "ApiSchema510EECD7"
      ]
    },
    "ApicustomerMutationremoveCustomerResolverC1CF2E35": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId"
          ]
        },
        "FieldName": "removeCustomer",
        "TypeName": "Mutation",
        "DataSourceName": "customer",
        "Kind": "UNIT",
        "RequestMappingTemplate": "{\"version\": \"2017-02-28\", \"operation\": \"DeleteItem\", \"key\": {\"id\": $util.dynamodb.toDynamoDBJson($ctx.args.id)}}",
        "ResponseMappingTemplate": "$util.toJson($ctx.result)"
      },
      "DependsOn": [
        "ApicustomerA4A81100",
        "ApiSchema510EECD7"
      ]
    },
    "ApiorderServiceRoleAD898930": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "ApiorderServiceRoleDefaultPolicyC918AE08": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "OrderTable416EB896",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "ApiorderServiceRoleDefaultPolicyC918AE08",
        "Roles": [
          {
            "Ref": "ApiorderServiceRoleAD898930"
          }
        ]
      }
    },
    "Apiorder88C17B87": {
      "Type": "AWS::AppSync::DataSource",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId"
          ]
        },
        "Name": "order",
        "Type": "AMAZON_DYNAMODB",
        "DynamoDBConfig": {
          "AwsRegion": {
            "Ref": "AWS::Region"
          },
          "TableName": {
            "Ref": "OrderTable416EB896"
          }
        },
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "ApiorderServiceRoleAD898930",
            "Arn"
          ]
        }
      }
    },
    "ApiorderQuerygetCustomerOrdersEqResolver84523DEA": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId"
          ]
        },
        "FieldName": "getCustomerOrdersEq",
        "TypeName": "Query",
        "DataSourceName": "order",
        "Kind": "UNIT",
        "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Query\", \"query\" : {\n            \"expression\" : \"#customer = :customer\",\n            \"expressionNames\" : {\n                \"#customer\" : \"customer\"\n            },\n            \"expressionValues\" : {\n                \":customer\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer)\n            }\n        }}",
        "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
      },
      "DependsOn": [
        "Apiorder88C17B87",
        "ApiSchema510EECD7"
      ]
    },
    "ApiorderQuerygetCustomerOrdersLtResolver9D083A9F": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId"
          ]
        },
        "FieldName": "getCustomerOrdersLt",
        "TypeName": "Query",
        "DataSourceName": "order",
        "Kind": "UNIT",
        "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Query\", \"query\" : {\n            \"expression\" : \"#customer < :customer\",\n            \"expressionNames\" : {\n                \"#customer\" : \"customer\"\n            },\n            \"expressionValues\" : {\n                \":customer\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer)\n            }\n        }}",
        "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
      },
      "DependsOn": [
        "Apiorder88C17B87",
        "ApiSchema510EECD7"
      ]
    },
    "ApiorderQuerygetCustomerOrdersLeResolver1ACB2AFA": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId"
          ]
        },
        "FieldName": "getCustomerOrdersLe",
        "TypeName": "Query",
        "DataSourceName": "order",
        "Kind": "UNIT",
        "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Query\", \"query\" : {\n            \"expression\" : \"#customer <= :customer\",\n            \"expressionNames\" : {\n                \"#customer\" : \"customer\"\n            },\n            \"expressionValues\" : {\n                \":customer\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer)\n            }\n        }}",
        "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
      },
      "DependsOn": [
        "Apiorder88C17B87",
        "ApiSchema510EECD7"
      ]
    },
    "ApiorderQuerygetCustomerOrdersGtResolverD5F872BC": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId"
          ]
        },
        "FieldName": "getCustomerOrdersGt",
        "TypeName": "Query",
        "DataSourceName": "order",
        "Kind": "UNIT",
        "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Query\", \"query\" : {\n            \"expression\" : \"#customer > :customer\",\n            \"expressionNames\" : {\n                \"#customer\" : \"customer\"\n            },\n            \"expressionValues\" : {\n                \":customer\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer)\n            }\n        }}",
        "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
      },
      "DependsOn": [
        "Apiorder88C17B87",
        "ApiSchema510EECD7"
      ]
    },
    "ApiorderQuerygetCustomerOrdersGeResolver9FECFB88": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId"
          ]
        },
        "FieldName": "getCustomerOrdersGe",
        "TypeName": "Query",
        "DataSourceName": "order",
        "Kind": "UNIT",
        "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Query\", \"query\" : {\n            \"expression\" : \"#customer >= :customer\",\n            \"expressionNames\" : {\n                \"#customer\" : \"customer\"\n            },\n            \"expressionValues\" : {\n                \":customer\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer)\n            }\n        }}",
        "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
      },
      "DependsOn": [
        "Apiorder88C17B87",
        "ApiSchema510EECD7"
      ]
    },
    "ApiorderQuerygetCustomerOrdersFilterResolverDFFAA0FF": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId"
          ]
        },
        "FieldName": "getCustomerOrdersFilter",
        "TypeName": "Query",
        "DataSourceName": "order",
        "Kind": "UNIT",
        "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Query\", \"query\" : {\n            \"expression\" : \"#customer = :customer AND begins_with(#order, :order)\",\n            \"expressionNames\" : {\n                \"#customer\" : \"customer\", \"#order\" : \"order\"\n            },\n            \"expressionValues\" : {\n                \":customer\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer), \":order\" : $util.dynamodb.toDynamoDBJson($ctx.args.order)\n            }\n        }}",
        "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
      },
      "DependsOn": [
        "Apiorder88C17B87",
        "ApiSchema510EECD7"
      ]
    },
    "ApiorderQuerygetCustomerOrdersBetweenResolverE6CB3776": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId"
          ]
        },
        "FieldName": "getCustomerOrdersBetween",
        "TypeName": "Query",
        "DataSourceName": "order",
        "Kind": "UNIT",
        "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Query\", \"query\" : {\n            \"expression\" : \"#customer = :customer AND #order BETWEEN :order1 AND :order2\",\n            \"expressionNames\" : {\n                \"#customer\" : \"customer\", \"#order\" : \"order\"\n            },\n            \"expressionValues\" : {\n                \":customer\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer), \":order1\" : $util.dynamodb.toDynamoDBJson($ctx.args.order1), \":order2\" : $util.dynamodb.toDynamoDBJson($ctx.args.order2)\n            }\n        }}",
        "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
      },
      "DependsOn": [
        "Apiorder88C17B87",
        "ApiSchema510EECD7"
      ]
    },
    "ApipaymentServiceRoleBCB06044": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "ApipaymentServiceRoleDefaultPolicy93F9E362": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":dynamodb:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":table/PaymentTable"
                    ]
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "ApipaymentServiceRoleDefaultPolicy93F9E362",
        "Roles": [
          {
            "Ref": "ApipaymentServiceRoleBCB06044"
          }
        ]
      }
    },
    "ApipaymentA20A845D": {
      "Type": "AWS::AppSync::DataSource",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId"
          ]
        },
        "Name": "payment",
        "Type": "AMAZON_DYNAMODB",
        "DynamoDBConfig": {
          "AwsRegion": {
            "Ref": "AWS::Region"
          },
          "TableName": "PaymentTable"
        },
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "ApipaymentServiceRoleBCB06044",
            "Arn"
          ]
        }
      }
    },
    "ApipaymentQuerygetPaymentResolver561B2354": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId"
          ]
        },
        "FieldName": "getPayment",
        "TypeName": "Query",
        "DataSourceName": "payment",
        "Kind": "UNIT",
        "RequestMappingTemplate": "{\"version\": \"2017-02-28\", \"operation\": \"GetItem\", \"key\": {\"id\": $util.dynamodb.toDynamoDBJson($ctx.args.id)}}",
        "ResponseMappingTemplate": "$util.toJson($ctx.result)"
      },
      "DependsOn": [
        "ApipaymentA20A845D",
        "ApiSchema510EECD7"
      ]
    },
    "ApipaymentMutationsavePaymentResolver7C21AF6E": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId"
          ]
        },
        "FieldName": "savePayment",
        "TypeName": "Mutation",
        "DataSourceName": "payment",
        "Kind": "UNIT",
        "RequestMappingTemplate": "\n      #set($input = $ctx.args.payment)\n      \n      {\n        \"version\": \"2017-02-28\",\n        \"operation\": \"PutItem\",\n        \"key\" : {\n      \"id\" : $util.dynamodb.toDynamoDBJson($util.autoId())\n    },\n        \"attributeValues\": $util.dynamodb.toMapValuesJson($input)\n      }",
        "ResponseMappingTemplate": "$util.toJson($ctx.result)"
      },
      "DependsOn": [
        "ApipaymentA20A845D",
        "ApiSchema510EECD7"
      ]
    },
    "ApiHttpCDKDefaultServiceRole0E0C2E53": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "ApiHttpCDKDefault2B4C6D63": {
      "Type": "AWS::AppSync::DataSource",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId"
          ]
        },
        "Name": "HttpCDKDefault",
        "Type": "HTTP",
        "HttpConfig": {
          "Endpoint": "https://aws.amazon.com/"
        },
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "ApiHttpCDKDefaultServiceRole0E0C2E53",
            "Arn"
          ]
        }
      }
    },
    "ApiHttpCDKDefaultMutationdoPostOnAwsResolver208308C9": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId"
          ]
        },
        "FieldName": "doPostOnAws",
        "TypeName": "Mutation",
        "DataSourceName": "HttpCDKDefault",
        "Kind": "UNIT",
        "RequestMappingTemplate": "{\n    \"version\": \"2018-05-29\",\n    \"method\": \"POST\",\n    # if full path is https://api.xxxxxxxxx.com/posts then resourcePath would be /posts\n    \"resourcePath\": \"/path/123\",\n    \"params\":{\n        \"body\": $util.toJson($ctx.args),\n        \"headers\":{\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": \"$ctx.request.headers.Authorization\"\n        }\n    }\n  }",
        "ResponseMappingTemplate": "\n    ## Raise a GraphQL field error in case of a datasource invocation error\n    #if($ctx.error)\n      $util.error($ctx.error.message, $ctx.error.type)\n    #end\n    ## if the response status code is not 200, then return an error. Else return the body **\n    #if($ctx.result.statusCode == 200)\n        ## If response is 200, return the body.\n        $ctx.result.body\n    #else\n        ## If response is not 200, append the response to error block.\n        $utils.appendError($ctx.result.body, \"$ctx.result.statusCode\")\n    #end\n  "
      },
      "DependsOn": [
        "ApiHttpCDKDefault2B4C6D63",
        "ApiSchema510EECD7"
      ]
    },
    "CustomerTable260DCC08": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "OrderTable416EB896": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "customer",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "order",
            "KeyType": "RANGE"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "customer",
            "AttributeType": "S"
          },
          {
            "AttributeName": "order",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "PaymentTableE140D25E": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    }
  }
}