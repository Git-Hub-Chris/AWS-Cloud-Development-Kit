{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-autoscaling": "0.0.0",
    "@aws-cdk/aws-cloudformation": "0.0.0",
    "@aws-cdk/aws-ec2": "0.0.0",
    "@aws-cdk/aws-iam": "0.0.0",
    "@aws-cdk/aws-lambda": "0.0.0",
    "@aws-cdk/aws-ssm": "0.0.0",
    "@aws-cdk/core": "0.0.0",
    "constructs": "^10.0.0"
  },
  "dependencyClosure": {
    "@aws-cdk/assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.Assets",
          "packageId": "Amazon.CDK.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.assets"
        },
        "js": {
          "npm": "@aws-cdk/assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.assets",
          "module": "aws_cdk.assets"
        }
      }
    },
    "@aws-cdk/aws-acmpca": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ACMPCA",
          "packageId": "Amazon.CDK.AWS.ACMPCA"
        },
        "java": {
          "maven": {
            "artifactId": "acmpca",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.acmpca"
        },
        "js": {
          "npm": "@aws-cdk/aws-acmpca"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-acmpca",
          "module": "aws_cdk.aws_acmpca"
        }
      }
    },
    "@aws-cdk/aws-applicationautoscaling": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling",
          "packageId": "Amazon.CDK.AWS.ApplicationAutoScaling"
        },
        "java": {
          "maven": {
            "artifactId": "applicationautoscaling",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.applicationautoscaling"
        },
        "js": {
          "npm": "@aws-cdk/aws-applicationautoscaling"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-applicationautoscaling",
          "module": "aws_cdk.aws_applicationautoscaling"
        }
      }
    },
    "@aws-cdk/aws-autoscaling": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.AutoScaling",
          "packageId": "Amazon.CDK.AWS.AutoScaling"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.autoscaling"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-autoscaling",
          "module": "aws_cdk.aws_autoscaling"
        }
      }
    },
    "@aws-cdk/aws-autoscaling-common": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.AutoScaling.Common",
          "packageId": "Amazon.CDK.AWS.AutoScaling.Common"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling-common",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.autoscaling.common"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling-common"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-autoscaling-common",
          "module": "aws_cdk.aws_autoscaling_common"
        }
      }
    },
    "@aws-cdk/aws-certificatemanager": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CertificateManager",
          "packageId": "Amazon.CDK.AWS.CertificateManager"
        },
        "java": {
          "maven": {
            "artifactId": "certificatemanager",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.certificatemanager"
        },
        "js": {
          "npm": "@aws-cdk/aws-certificatemanager"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-certificatemanager",
          "module": "aws_cdk.aws_certificatemanager"
        }
      }
    },
    "@aws-cdk/aws-cloudformation": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudFormation",
          "packageId": "Amazon.CDK.AWS.CloudFormation"
        },
        "java": {
          "maven": {
            "artifactId": "cloudformation",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudformation"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudformation"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-cloudformation",
          "module": "aws_cdk.aws_cloudformation"
        }
      }
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch"
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      }
    },
    "@aws-cdk/aws-codeguruprofiler": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeGuruProfiler",
          "packageId": "Amazon.CDK.AWS.CodeGuruProfiler"
        },
        "java": {
          "maven": {
            "artifactId": "codeguruprofiler",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codeguruprofiler"
        },
        "js": {
          "npm": "@aws-cdk/aws-codeguruprofiler"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-codeguruprofiler",
          "module": "aws_cdk.aws_codeguruprofiler"
        }
      }
    },
    "@aws-cdk/aws-codestarnotifications": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeStarNotifications",
          "packageId": "Amazon.CDK.AWS.CodeStarNotifications"
        },
        "java": {
          "maven": {
            "artifactId": "codestarnotifications",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codestarnotifications"
        },
        "js": {
          "npm": "@aws-cdk/aws-codestarnotifications"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-codestarnotifications",
          "module": "aws_cdk.aws_codestarnotifications"
        }
      }
    },
    "@aws-cdk/aws-ec2": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EC2",
          "packageId": "Amazon.CDK.AWS.EC2"
        },
        "java": {
          "maven": {
            "artifactId": "ec2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ec2"
        },
        "js": {
          "npm": "@aws-cdk/aws-ec2"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-ec2",
          "module": "aws_cdk.aws_ec2"
        }
      }
    },
    "@aws-cdk/aws-ecr": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ECR",
          "packageId": "Amazon.CDK.AWS.ECR"
        },
        "java": {
          "maven": {
            "artifactId": "ecr",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-ecr",
          "module": "aws_cdk.aws_ecr"
        }
      }
    },
    "@aws-cdk/aws-ecr-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Ecr.Assets",
          "packageId": "Amazon.CDK.ECR.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "ecr-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-ecr-assets",
          "module": "aws_cdk.aws_ecr_assets"
        }
      }
    },
    "@aws-cdk/aws-efs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EFS",
          "packageId": "Amazon.CDK.AWS.EFS"
        },
        "java": {
          "maven": {
            "artifactId": "efs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.efs"
        },
        "js": {
          "npm": "@aws-cdk/aws-efs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-efs",
          "module": "aws_cdk.aws_efs"
        }
      }
    },
    "@aws-cdk/aws-elasticloadbalancing": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ElasticLoadBalancing",
          "packageId": "Amazon.CDK.AWS.ElasticLoadBalancing"
        },
        "java": {
          "maven": {
            "artifactId": "elasticloadbalancing",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.elasticloadbalancing"
        },
        "js": {
          "npm": "@aws-cdk/aws-elasticloadbalancing"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-elasticloadbalancing",
          "module": "aws_cdk.aws_elasticloadbalancing"
        }
      }
    },
    "@aws-cdk/aws-elasticloadbalancingv2": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2",
          "packageId": "Amazon.CDK.AWS.ElasticLoadBalancingV2"
        },
        "java": {
          "maven": {
            "artifactId": "elasticloadbalancingv2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.elasticloadbalancingv2"
        },
        "js": {
          "npm": "@aws-cdk/aws-elasticloadbalancingv2"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-elasticloadbalancingv2",
          "module": "aws_cdk.aws_elasticloadbalancingv2"
        }
      }
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events"
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      }
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM"
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/aws-kms": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS"
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      }
    },
    "@aws-cdk/aws-lambda": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Lambda",
          "packageId": "Amazon.CDK.AWS.Lambda"
        },
        "java": {
          "maven": {
            "artifactId": "lambda",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.lambda"
        },
        "js": {
          "npm": "@aws-cdk/aws-lambda"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-lambda",
          "module": "aws_cdk.aws_lambda"
        }
      }
    },
    "@aws-cdk/aws-logs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Logs",
          "packageId": "Amazon.CDK.AWS.Logs"
        },
        "java": {
          "maven": {
            "artifactId": "logs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-logs",
          "module": "aws_cdk.aws_logs"
        }
      }
    },
    "@aws-cdk/aws-route53": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Route53",
          "packageId": "Amazon.CDK.AWS.Route53"
        },
        "java": {
          "maven": {
            "artifactId": "route53",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.route53"
        },
        "js": {
          "npm": "@aws-cdk/aws-route53"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-route53",
          "module": "aws_cdk.aws_route53"
        }
      }
    },
    "@aws-cdk/aws-s3": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3",
          "packageId": "Amazon.CDK.AWS.S3"
        },
        "java": {
          "maven": {
            "artifactId": "s3",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-s3",
          "module": "aws_cdk.aws_s3"
        }
      }
    },
    "@aws-cdk/aws-s3-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3.Assets",
          "packageId": "Amazon.CDK.AWS.S3.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "s3-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-s3-assets",
          "module": "aws_cdk.aws_s3_assets"
        }
      }
    },
    "@aws-cdk/aws-signer": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Signer",
          "packageId": "Amazon.CDK.AWS.Signer"
        },
        "java": {
          "maven": {
            "artifactId": "signer",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.signer"
        },
        "js": {
          "npm": "@aws-cdk/aws-signer"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-signer",
          "module": "aws_cdk.aws_signer"
        }
      }
    },
    "@aws-cdk/aws-sns": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SNS",
          "packageId": "Amazon.CDK.AWS.SNS"
        },
        "java": {
          "maven": {
            "artifactId": "sns",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sns"
        },
        "js": {
          "npm": "@aws-cdk/aws-sns"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-sns",
          "module": "aws_cdk.aws_sns"
        }
      }
    },
    "@aws-cdk/aws-sqs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SQS",
          "packageId": "Amazon.CDK.AWS.SQS"
        },
        "java": {
          "maven": {
            "artifactId": "sqs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sqs"
        },
        "js": {
          "npm": "@aws-cdk/aws-sqs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-sqs",
          "module": "aws_cdk.aws_sqs"
        }
      }
    },
    "@aws-cdk/aws-ssm": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SSM",
          "packageId": "Amazon.CDK.AWS.SSM"
        },
        "java": {
          "maven": {
            "artifactId": "ssm",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ssm"
        },
        "js": {
          "npm": "@aws-cdk/aws-ssm"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-ssm",
          "module": "aws_cdk.aws_ssm"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/custom-resources": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CustomResources",
          "packageId": "Amazon.CDK.AWS.CustomResources"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-customresources",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.customresources"
        },
        "js": {
          "npm": "@aws-cdk/custom-resources"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.custom-resources",
          "module": "aws_cdk.custom_resources"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "The CDK Construct Library for AWS::EKS (Legacy)",
  "docs": {
    "deprecated": "Use the @aws-cdk/aws-eks module instead",
    "stability": "deprecated"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.60.1 (build 2799dc8)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "eks"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "compiledWithDeprecationWarnings": true,
      "pacmak": {
        "hasDefaultInterfaces": true
      },
      "rosetta": {
        "strict": true
      }
    }
  },
  "name": "@aws-cdk/aws-eks-legacy",
  "readme": {
    "markdown": "# Amazon EKS Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n> This API may emit warnings. Backward compatibility is not guaranteed.\n\n---\n\n<!--END STABILITY BANNER-->\n\n\n**This module is available for backwards compatibility purposes only ([details](https://github.com/aws/aws-cdk/pull/5540)). It will\nno longer be released with the CDK starting March 1st, 2020. See [issue\n\n## 5544](https://github.com/aws/aws-cdk/issues/5544) for upgrade instructions.**\n\n---\n\nThis construct library allows you to define [Amazon Elastic Container Service\nfor Kubernetes (EKS)](https://aws.amazon.com/eks/) clusters programmatically.\nThis library also supports programmatically defining Kubernetes resource\nmanifests within EKS clusters.\n\nThis example defines an Amazon EKS cluster with the following configuration:\n\n- 2x **m5.large** instances (this instance type suits most common use-cases, and is good value for money)\n- Dedicated VPC with default configuration (see [ec2.Vpc](https://docs.aws.amazon.com/cdk/api/latest/docs/aws-ec2-readme.html#vpc))\n- A Kubernetes pod with a container based on the [paulbouwer/hello-kubernetes](https://github.com/paulbouwer/hello-kubernetes) image.\n\n```ts\nconst cluster = new eks.Cluster(this, 'hello-eks');\n\ncluster.addResource('mypod', {\n  apiVersion: 'v1',\n  kind: 'Pod',\n  metadata: { name: 'mypod' },\n  spec: {\n    containers: [\n      {\n        name: 'hello',\n        image: 'paulbouwer/hello-kubernetes:1.5',\n        ports: [ { containerPort: 8080 } ],\n      },\n    ],\n  },\n});\n```\n\nHere is a [complete sample](https://github.com/aws/aws-cdk/blob/main/packages/@aws-cdk/aws-eks-legacy/test/integ.eks-kubectl.lit.ts).\n\n### Capacity\n\nBy default, `eks.Cluster` is created with x2 `m5.large` instances.\n\n```ts\nnew eks.Cluster(this, 'cluster-two-m5-large');\n```\n\nThe quantity and instance type for the default capacity can be specified through\nthe `defaultCapacity` and `defaultCapacityInstance` props:\n\n```ts\nnew eks.Cluster(this, 'cluster', {\n  defaultCapacity: 10,\n  defaultCapacityInstance: new ec2.InstanceType('m2.xlarge'),\n});\n```\n\nTo disable the default capacity, simply set `defaultCapacity` to `0`:\n\n```ts\nnew eks.Cluster(this, 'cluster-with-no-capacity', { defaultCapacity: 0 });\n```\n\nThe `cluster.defaultCapacity` property will reference the `AutoScalingGroup`\nresource for the default capacity. It will be `undefined` if `defaultCapacity`\nis set to `0`:\n\n```ts\nconst cluster = new eks.Cluster(this, 'my-cluster');\ncluster.defaultCapacity!.scaleOnCpuUtilization('up', {\n  targetUtilizationPercent: 80,\n});\n```\n\nYou can add customized capacity through `cluster.addCapacity()` or\n`cluster.addAutoScalingGroup()`:\n\n```ts\ndeclare const cluster: eks.Cluster;\ncluster.addCapacity('frontend-nodes', {\n  instanceType: new ec2.InstanceType('t2.medium'),\n  desiredCapacity: 3,\n  vpcSubnets: { subnetType: ec2.SubnetType.PUBLIC },\n});\n```\n\n### Spot Capacity\n\nIf `spotPrice` is specified, the capacity will be purchased from spot instances:\n\n```ts\ndeclare const cluster: eks.Cluster;\ncluster.addCapacity('spot', {\n  spotPrice: '0.1094',\n  instanceType: new ec2.InstanceType('t3.large'),\n  maxCapacity: 10,\n});\n```\n\nSpot instance nodes will be labeled with `lifecycle=Ec2Spot` and tainted with `PreferNoSchedule`.\n\nThe [Spot Termination Handler](https://github.com/awslabs/ec2-spot-labs/tree/master/ec2-spot-eks-solution/spot-termination-handler)\nDaemonSet will be installed on these nodes. The termination handler leverages\n[EC2 Spot Instance Termination Notices](https://aws.amazon.com/blogs/aws/new-ec2-spot-instance-termination-notices/)\nto gracefully stop all pods running on spot nodes that are about to be\nterminated.\n\n### Bootstrapping\n\nWhen adding capacity, you can specify options for\n[/etc/eks/boostrap.sh](https://github.com/awslabs/amazon-eks-ami/blob/master/files/bootstrap.sh)\nwhich is responsible for associating the node to the EKS cluster. For example,\nyou can use `kubeletExtraArgs` to add custom node labels or taints.\n\n```ts\n// up to ten spot instances\ndeclare const cluster: eks.Cluster;\ncluster.addCapacity('spot', {\n  instanceType: new ec2.InstanceType('t3.large'),\n  desiredCapacity: 2,\n  bootstrapOptions: {\n    kubeletExtraArgs: '--node-labels foo=bar,goo=far',\n    awsApiRetryAttempts: 5,\n  },\n});\n```\n\nTo disable bootstrapping altogether (i.e. to fully customize user-data), set `bootstrapEnabled` to `false` when you add\nthe capacity.\n\n### Masters Role\n\nThe Amazon EKS construct library allows you to specify an IAM role that will be\ngranted `system:masters` privileges on your cluster.\n\nWithout specifying a `mastersRole`, you will not be able to interact manually\nwith the cluster.\n\nThe following example defines an IAM role that can be assumed by all users\nin the account and shows how to use the `mastersRole` property to map this\nrole to the Kubernetes `system:masters` group:\n\n```ts\n// first define the role\nconst clusterAdmin = new iam.Role(this, 'AdminRole', {\n  assumedBy: new iam.AccountRootPrincipal(),\n});\n\n// now define the cluster and map role to \"masters\" RBAC group\nnew eks.Cluster(this, 'Cluster', {\n  mastersRole: clusterAdmin,\n});\n```\n\nWhen you `cdk deploy` this CDK app, you will notice that an output will be printed\nwith the `update-kubeconfig` command.\n\nSomething like this:\n\n```plaintext\nOutputs:\neks-integ-defaults.ClusterConfigCommand43AAE40F = aws eks update-kubeconfig --name cluster-ba7c166b-c4f3-421c-bf8a-6812e4036a33 --role-arn arn:aws:iam::112233445566:role/eks-integ-defaults-Role1ABCC5F0-1EFK2W5ZJD98Y\n```\n\nCopy & paste the \"`aws eks update-kubeconfig ...`\" command to your shell in\norder to connect to your EKS cluster with the \"masters\" role.\n\nNow, given [AWS CLI](https://aws.amazon.com/cli/) is configured to use AWS\ncredentials for a user that is trusted by the masters role, you should be able\nto interact with your cluster through `kubectl` (the above example will trust\nall users in the account).\n\nFor example:\n\n```console\n$ aws eks update-kubeconfig --name cluster-ba7c166b-c4f3-421c-bf8a-6812e4036a33 --role-arn arn:aws:iam::112233445566:role/eks-integ-defaults-Role1ABCC5F0-1EFK2W5ZJD98Y\nAdded new context arn:aws:eks:eu-west-2:112233445566:cluster/cluster-ba7c166b-c4f3-421c-bf8a-6812e4036a33 to /Users/boom/.kube/config\n\n$ kubectl get nodes # list all nodes\nNAME                                         STATUS   ROLES    AGE   VERSION\nip-10-0-147-66.eu-west-2.compute.internal    Ready    <none>   21m   v1.13.7-eks-c57ff8\nip-10-0-169-151.eu-west-2.compute.internal   Ready    <none>   21m   v1.13.7-eks-c57ff8\n\n$ kubectl get all -n kube-system\nNAME                           READY   STATUS    RESTARTS   AGE\npod/aws-node-fpmwv             1/1     Running   0          21m\npod/aws-node-m9htf             1/1     Running   0          21m\npod/coredns-5cb4fb54c7-q222j   1/1     Running   0          23m\npod/coredns-5cb4fb54c7-v9nxx   1/1     Running   0          23m\npod/kube-proxy-d4jrh           1/1     Running   0          21m\npod/kube-proxy-q7hh7           1/1     Running   0          21m\n\nNAME               TYPE        CLUSTER-IP    EXTERNAL-IP   PORT(S)         AGE\nservice/kube-dns   ClusterIP   172.20.0.10   <none>        53/UDP,53/TCP   23m\n\nNAME                        DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR   AGE\ndaemonset.apps/aws-node     2         2         2       2            2           <none>          23m\ndaemonset.apps/kube-proxy   2         2         2       2            2           <none>          23m\n\nNAME                      READY   UP-TO-DATE   AVAILABLE   AGE\ndeployment.apps/coredns   2/2     2            2           23m\n\nNAME                                 DESIRED   CURRENT   READY   AGE\nreplicaset.apps/coredns-5cb4fb54c7   2         2         2       23m\n```\n\nFor your convenience, an AWS CloudFormation output will automatically be\nincluded in your template and will be printed when running `cdk deploy`.\n\n**NOTE**: if the cluster is configured with `kubectlEnabled: false`, it\nwill be created with the role/user that created the AWS CloudFormation\nstack. See [Kubectl Support](#kubectl-support) for details.\n\n### Kubernetes Resources\n\nThe `KubernetesResource` construct or `cluster.addResource` method can be used\nto apply Kubernetes resource manifests to this cluster.\n\nThe following examples will deploy the [paulbouwer/hello-kubernetes](https://github.com/paulbouwer/hello-kubernetes)\nservice on the cluster:\n\n```ts\nconst appLabel = { app: \"hello-kubernetes\" };\n\nconst deployment = {\n  apiVersion: \"apps/v1\",\n  kind: \"Deployment\",\n  metadata: { name: \"hello-kubernetes\" },\n  spec: {\n    replicas: 3,\n    selector: { matchLabels: appLabel },\n    template: {\n      metadata: { labels: appLabel },\n      spec: {\n        containers: [\n          {\n            name: \"hello-kubernetes\",\n            image: \"paulbouwer/hello-kubernetes:1.5\",\n            ports: [ { containerPort: 8080 } ],\n          },\n        ],\n      },\n    },\n  },\n};\n\nconst service = {\n  apiVersion: \"v1\",\n  kind: \"Service\",\n  metadata: { name: \"hello-kubernetes\" },\n  spec: {\n    type: \"LoadBalancer\",\n    ports: [ { port: 80, targetPort: 8080 } ],\n    selector: appLabel,\n  },\n};\n\ndeclare const cluster: eks.Cluster;\n// option 1: use a construct\nnew eks.KubernetesResource(this, 'hello-kub', {\n  cluster,\n  manifest: [ deployment, service ],\n});\n\n// or, option2: use `addResource`\ncluster.addResource('hello-kub', service, deployment);\n```\n\nSince Kubernetes resources are implemented as CloudFormation resources in the\nCDK. This means that if the resource is deleted from your code (or the stack is\ndeleted), the next `cdk deploy` will issue a `kubectl delete` command and the\nKubernetes resources will be deleted.\n\n### AWS IAM Mapping\n\nAs described in the [Amazon EKS User Guide](https://docs.aws.amazon.com/en_us/eks/latest/userguide/add-user-role.html),\nyou can map AWS IAM users and roles to [Kubernetes Role-based access control (RBAC)](https://kubernetes.io/docs/reference/access-authn-authz/rbac).\n\nThe Amazon EKS construct manages the **aws-auth ConfigMap** Kubernetes resource\non your behalf and exposes an API through the `cluster.awsAuth` for mapping\nusers, roles and accounts.\n\nFurthermore, when auto-scaling capacity is added to the cluster (through\n`cluster.addCapacity` or `cluster.addAutoScalingGroup`), the IAM instance role\nof the auto-scaling group will be automatically mapped to RBAC so nodes can\nconnect to the cluster. No manual mapping is required any longer.\n\n> NOTE: `cluster.awsAuth` will throw an error if your cluster is created with `kubectlEnabled: false`.\n\nFor example, let's say you want to grant an IAM user administrative privileges\non your cluster:\n\n```ts\ndeclare const cluster: eks.Cluster;\nconst adminUser = new iam.User(this, 'Admin');\ncluster.awsAuth.addUserMapping(adminUser, { groups: [ 'system:masters' ]});\n```\n\nA convenience method for mapping a role to the `system:masters` group is also available:\n\n```ts\ndeclare const cluster: eks.Cluster;\ndeclare const role: iam.Role;\ncluster.awsAuth.addMastersRole(role);\n```\n\n### Node ssh Access\n\nIf you want to be able to SSH into your worker nodes, you must already\nhave an SSH key in the region you're connecting to and pass it, and you must\nbe able to connect to the hosts (meaning they must have a public IP and you\nshould be allowed to connect to them on port 22):\n\n```ts lit=test/example.ssh-into-nodes.lit.ts\n    const asg = cluster.addCapacity('Nodes', {\n      instanceType: new ec2.InstanceType('t2.medium'),\n      vpcSubnets: { subnetType: ec2.SubnetType.PUBLIC },\n      keyName: 'my-key-name',\n    });\n\n    // Replace with desired IP\n    asg.connections.allowFrom(ec2.Peer.ipv4('1.2.3.4/32'), ec2.Port.tcp(22));\n```\n\nIf you want to SSH into nodes in a private subnet, you should set up a\nbastion host in a public subnet. That setup is recommended, but is\nunfortunately beyond the scope of this documentation.\n\n### kubectl Support\n\nWhen you create an Amazon EKS cluster, the IAM entity user or role, such as a\n[federated user](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers.html)\nthat creates the cluster, is automatically granted `system:masters` permissions\nin the cluster's RBAC configuration.\n\nIn order to allow programmatically defining **Kubernetes resources** in your AWS\nCDK app and provisioning them through AWS CloudFormation, we will need to assume\nthis \"masters\" role every time we want to issue `kubectl` operations against your\ncluster.\n\nAt the moment, the [AWS::EKS::Cluster](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html)\nAWS CloudFormation resource does not support this behavior, so in order to\nsupport \"programmatic kubectl\", such as applying manifests\nand mapping IAM roles from within your CDK application, the Amazon EKS\nconstruct library uses a custom resource for provisioning the cluster.\nThis custom resource is executed with an IAM role that we can then use\nto issue `kubectl` commands.\n\nThe default behavior of this library is to use this custom resource in order\nto retain programmatic control over the cluster. In other words: to allow\nyou to define Kubernetes resources in your CDK code instead of having to\nmanage your Kubernetes applications through a separate system.\n\nOne of the implications of this design is that, by default, the user who\nprovisioned the AWS CloudFormation stack (executed `cdk deploy`) will\nnot have administrative privileges on the EKS cluster.\n\n1. Additional resources will be synthesized into your template (the AWS Lambda\n   function, the role and policy).\n2. As described in [Interacting with Your Cluster](#interacting-with-your-cluster),\n   if you wish to be able to manually interact with your cluster, you will need\n   to map an IAM role or user to the `system:masters` group. This can be either\n   done by specifying a `mastersRole` when the cluster is defined, calling\n   `cluster.awsAuth.addMastersRole` or explicitly mapping an IAM role or IAM user to the\n   relevant Kubernetes RBAC groups using `cluster.addRoleMapping` and/or\n   `cluster.addUserMapping`.\n\nIf you wish to disable the programmatic kubectl behavior and use the standard\nAWS::EKS::Cluster resource, you can specify `kubectlEnabled: false` when you define\nthe cluster:\n\n```ts\nnew eks.Cluster(this, 'cluster', {\n  kubectlEnabled: false,\n});\n```\n\n**Take care**: a change in this property will cause the cluster to be destroyed\nand a new cluster to be created.\n\nWhen kubectl is disabled, you should be aware of the following:\n\n1. When you log-in to your cluster, you don't need to specify `--role-arn` as\n   long as you are using the same user that created the cluster.\n2. As described in the Amazon EKS User Guide, you will need to manually\n   edit the [aws-auth ConfigMap](https://docs.aws.amazon.com/eks/latest/userguide/add-user-role.html)\n   when you add capacity in order to map the IAM instance role to RBAC to allow nodes to join the cluster.\n3. Any `eks.Cluster` APIs that depend on programmatic kubectl support will fail\n   with an error: `cluster.addResource`, `cluster.addChart`, `cluster.awsAuth`, `props.mastersRole`.\n\n### Helm Charts\n\nThe `HelmChart` construct or `cluster.addChart` method can be used\nto add Kubernetes resources to this cluster using Helm.\n\nThe following example will install the [NGINX Ingress Controller](https://kubernetes.github.io/ingress-nginx/)\nto you cluster using Helm.\n\n```ts\ndeclare const cluster: eks.Cluster;\n// option 1: use a construct\nnew eks.HelmChart(this, 'NginxIngress', {\n  cluster,\n  chart: 'nginx-ingress',\n  repository: 'https://helm.nginx.com/stable',\n  namespace: 'kube-system',\n});\n\n// or, option2: use `addChart`\ncluster.addChart('NginxIngress', {\n  chart: 'nginx-ingress',\n  repository: 'https://helm.nginx.com/stable',\n  namespace: 'kube-system',\n});\n```\n\nHelm charts will be installed and updated using `helm upgrade --install`.\nThis means that if the chart is added to CDK with the same release name, it will try to update\nthe chart in the cluster. The chart will exists as CloudFormation resource.\n\nHelm charts are implemented as CloudFormation resources in CDK.\nThis means that if the chart is deleted from your code (or the stack is\ndeleted), the next `cdk deploy` will issue a `helm uninstall` command and the\nHelm chart will be deleted.\n\nWhen there is no `release` defined, the chart will be installed with a unique name allocated\nbased on the construct path.\n\n### Roadmap\n\n- [ ] AutoScaling (combine EC2 and Kubernetes scaling)\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-eks-legacy",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.EKS.Legacy",
      "packageId": "Amazon.CDK.AWS.EKS.Legacy"
    },
    "java": {
      "maven": {
        "artifactId": "eks-legacy",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.eks.legacy"
    },
    "js": {
      "npm": "@aws-cdk/aws-eks-legacy"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 2"
      ],
      "distName": "aws-cdk.aws-eks-legacy",
      "module": "aws_cdk.aws_eks_legacy"
    }
  },
  "types": {
    "@aws-cdk/aws-eks-legacy.AutoScalingGroupOptions": {
      "assembly": "@aws-cdk/aws-eks-legacy",
      "datatype": true,
      "docs": {
        "stability": "deprecated",
        "summary": "Options for adding an AutoScalingGroup as capacity."
      },
      "fqn": "@aws-cdk/aws-eks-legacy.AutoScalingGroupOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 744
      },
      "name": "AutoScalingGroupOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "If you wish to provide a custom user data script, set this to `false` and\nmanually invoke `autoscalingGroup.addUserData()`.",
            "stability": "deprecated",
            "summary": "Configures the EC2 user-data script for instances in this autoscaling group to bootstrap the node (invoke `/etc/eks/bootstrap.sh`) and associate it with the EKS cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 765
          },
          "name": "bootstrapEnabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "deprecated",
            "summary": "Allows options for node bootstrapping through EC2 user data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 770
          },
          "name": "bootstrapOptions",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-eks-legacy.BootstrapOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true if the cluster has kubectl enabled (which is the default).",
            "remarks": "This cannot be explicitly set to `true` if the cluster has kubectl disabled.",
            "stability": "deprecated",
            "summary": "Will automatically update the aws-auth ConfigMap to map the IAM instance role to RBAC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 753
          },
          "name": "mapRole",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/cluster:AutoScalingGroupOptions"
    },
    "@aws-cdk/aws-eks-legacy.AwsAuth": {
      "assembly": "@aws-cdk/aws-eks-legacy",
      "base": "constructs.Construct",
      "docs": {
        "see": "https://docs.aws.amazon.com/en_us/eks/latest/userguide/add-user-role.html",
        "stability": "deprecated",
        "summary": "Manages mapping between IAM users and roles to Kubernetes RBAC configuration."
      },
      "fqn": "@aws-cdk/aws-eks-legacy.AwsAuth",
      "initializer": {
        "docs": {
          "stability": "deprecated"
        },
        "locationInModule": {
          "filename": "lib/aws-auth.ts",
          "line": 28
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-eks-legacy.AwsAuthProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/aws-auth.ts",
        "line": 22
      },
      "methods": [
        {
          "docs": {
            "stability": "deprecated",
            "summary": "Additional AWS account to add to the aws-auth configmap."
          },
          "locationInModule": {
            "filename": "lib/aws-auth.ts",
            "line": 91
          },
          "name": "addAccount",
          "parameters": [
            {
              "docs": {
                "summary": "account number."
              },
              "name": "accountId",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "deprecated",
            "summary": "Adds the specified IAM role to the `system:masters` RBAC group, which means that anyone that can assume it will be able to administer this Kubernetes system."
          },
          "locationInModule": {
            "filename": "lib/aws-auth.ts",
            "line": 60
          },
          "name": "addMastersRole",
          "parameters": [
            {
              "docs": {
                "summary": "The IAM role to add."
              },
              "name": "role",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IRole"
              }
            },
            {
              "docs": {
                "summary": "Optional user (defaults to the role ARN)."
              },
              "name": "username",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "deprecated",
            "summary": "Adds a mapping between an IAM role to a Kubernetes user and groups."
          },
          "locationInModule": {
            "filename": "lib/aws-auth.ts",
            "line": 73
          },
          "name": "addRoleMapping",
          "parameters": [
            {
              "docs": {
                "summary": "The IAM role to map."
              },
              "name": "role",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IRole"
              }
            },
            {
              "docs": {
                "summary": "Mapping to k8s user name and groups."
              },
              "name": "mapping",
              "type": {
                "fqn": "@aws-cdk/aws-eks-legacy.Mapping"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "deprecated",
            "summary": "Adds a mapping between an IAM user to a Kubernetes user and groups."
          },
          "locationInModule": {
            "filename": "lib/aws-auth.ts",
            "line": 83
          },
          "name": "addUserMapping",
          "parameters": [
            {
              "docs": {
                "summary": "The IAM user to map."
              },
              "name": "user",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IUser"
              }
            },
            {
              "docs": {
                "summary": "Mapping to k8s user name and groups."
              },
              "name": "mapping",
              "type": {
                "fqn": "@aws-cdk/aws-eks-legacy.Mapping"
              }
            }
          ]
        }
      ],
      "name": "AwsAuth",
      "symbolId": "lib/aws-auth:AwsAuth"
    },
    "@aws-cdk/aws-eks-legacy.AwsAuthProps": {
      "assembly": "@aws-cdk/aws-eks-legacy",
      "datatype": true,
      "docs": {
        "stability": "deprecated"
      },
      "fqn": "@aws-cdk/aws-eks-legacy.AwsAuthProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/aws-auth.ts",
        "line": 8
      },
      "name": "AwsAuthProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "[disable-awslint:ref-via-interface]",
            "stability": "deprecated",
            "summary": "The EKS cluster to apply this configuration to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aws-auth.ts",
            "line": 14
          },
          "name": "cluster",
          "type": {
            "fqn": "@aws-cdk/aws-eks-legacy.Cluster"
          }
        }
      ],
      "symbolId": "lib/aws-auth:AwsAuthProps"
    },
    "@aws-cdk/aws-eks-legacy.BootstrapOptions": {
      "assembly": "@aws-cdk/aws-eks-legacy",
      "datatype": true,
      "docs": {
        "stability": "deprecated"
      },
      "fqn": "@aws-cdk/aws-eks-legacy.BootstrapOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 693
      },
      "name": "BootstrapOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- none",
            "see": "https://github.com/awslabs/amazon-eks-ami/blob/master/files/bootstrap.sh",
            "stability": "deprecated",
            "summary": "Additional command line arguments to pass to the `/etc/eks/bootstrap.sh` command."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 738
          },
          "name": "additionalArgs",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "3",
            "stability": "deprecated",
            "summary": "Number of retry attempts for AWS API call (DescribeCluster)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 713
          },
          "name": "awsApiRetryAttempts",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none",
            "stability": "deprecated",
            "summary": "The contents of the `/etc/docker/daemon.json` file. Useful if you want a custom config differing from the default one in the EKS AMI."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 721
          },
          "name": "dockerConfigJson",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "deprecated",
            "summary": "Restores the docker default bridge network."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 706
          },
          "name": "enableDockerBridge",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none",
            "remarks": "For example, `--node-labels foo=bar,goo=far`",
            "stability": "deprecated",
            "summary": "Extra arguments to add to the kubelet. Useful for adding labels or taints."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 729
          },
          "name": "kubeletExtraArgs",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "deprecated",
            "summary": "Sets `--max-pods` for the kubelet based on the capacity of the EC2 instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 699
          },
          "name": "useMaxPods",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/cluster:BootstrapOptions"
    },
    "@aws-cdk/aws-eks-legacy.CapacityOptions": {
      "assembly": "@aws-cdk/aws-eks-legacy",
      "datatype": true,
      "docs": {
        "stability": "deprecated",
        "summary": "Options for adding worker nodes."
      },
      "fqn": "@aws-cdk/aws-eks-legacy.CapacityOptions",
      "interfaces": [
        "@aws-cdk/aws-autoscaling.CommonAutoScalingGroupProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 657
      },
      "name": "CapacityOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "deprecated",
            "summary": "Instance type of the instances to start."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 661
          },
          "name": "instanceType",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InstanceType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "If you wish to provide a custom user data script, set this to `false` and\nmanually invoke `autoscalingGroup.addUserData()`.",
            "stability": "deprecated",
            "summary": "Configures the EC2 user-data script for instances in this autoscaling group to bootstrap the node (invoke `/etc/eks/bootstrap.sh`) and associate it with the EKS cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 683
          },
          "name": "bootstrapEnabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none",
            "stability": "deprecated",
            "summary": "EKS node bootstrapping options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 690
          },
          "name": "bootstrapOptions",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-eks-legacy.BootstrapOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true if the cluster has kubectl enabled (which is the default).",
            "remarks": "This cannot be explicitly set to `true` if the cluster has kubectl disabled.",
            "stability": "deprecated",
            "summary": "Will automatically update the aws-auth ConfigMap to map the IAM instance role to RBAC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 671
          },
          "name": "mapRole",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/cluster:CapacityOptions"
    },
    "@aws-cdk/aws-eks-legacy.CfnAddon": {
      "assembly": "@aws-cdk/aws-eks-legacy",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EKS::Addon",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html"
        },
        "remarks": "Creates an Amazon EKS add-on.\n\nAmazon EKS add-ons help to automate the provisioning and lifecycle management of common operational software for Amazon EKS clusters. Amazon EKS add-ons require clusters running version 1.18 or later because Amazon EKS add-ons rely on the Server-side Apply Kubernetes feature, which is only available in Kubernetes 1.18 and later. For more information, see [Amazon EKS add-ons](https://docs.aws.amazon.com/eks/latest/userguide/eks-add-ons.html) in the *Amazon EKS User Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EKS::Addon`."
      },
      "fqn": "@aws-cdk/aws-eks-legacy.CfnAddon",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EKS::Addon`."
        },
        "locationInModule": {
          "filename": "lib/eks.generated.ts",
          "line": 223
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-eks-legacy.CfnAddonProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/eks.generated.ts",
        "line": 141
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 243
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 259
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnAddon",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 145
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external",
            "summary": "The ARN of the add-on, such as `arn:aws:eks:us-west-2:111122223333:addon/1-19/vpc-cni/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 170
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 248
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-tags"
            },
            "remarks": "Each tag consists of a key and an optional value, both of which you define. Add-on tags do not propagate to any other resources associated with the cluster.",
            "stability": "external",
            "summary": "The metadata that you apply to the add-on to assist with categorization and organization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 214
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonname"
            },
            "stability": "external",
            "summary": "The name of the add-on."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 177
          },
          "name": "addonName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-clustername"
            },
            "stability": "external",
            "summary": "The name of the cluster."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 184
          },
          "name": "clusterName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonversion"
            },
            "stability": "external",
            "summary": "The version of the add-on."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 191
          },
          "name": "addonVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-resolveconflicts"
            },
            "stability": "external",
            "summary": "How to resolve parameter value conflicts when migrating an existing add-on to an Amazon EKS add-on."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 198
          },
          "name": "resolveConflicts",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-serviceaccountrolearn"
            },
            "remarks": "The role must be assigned the IAM permissions required by the add-on. If you don't specify an existing IAM role, then the add-on uses the permissions assigned to the node IAM role. For more information, see [Amazon EKS node IAM role](https://docs.aws.amazon.com/eks/latest/userguide/create-node-role.html) in the *Amazon EKS User Guide* .\n\n> To specify an existing IAM role, you must have an IAM OpenID Connect (OIDC) provider created for your cluster. For more information, see [Enabling IAM roles for service accounts on your cluster](https://docs.aws.amazon.com/eks/latest/userguide/enable-iam-roles-for-service-accounts.html) in the *Amazon EKS User Guide* .",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of an existing IAM role to bind to the add-on's service account."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 207
          },
          "name": "serviceAccountRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/eks.generated:CfnAddon"
    },
    "@aws-cdk/aws-eks-legacy.CfnAddonProps": {
      "assembly": "@aws-cdk/aws-eks-legacy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnAddon`."
      },
      "fqn": "@aws-cdk/aws-eks-legacy.CfnAddonProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/eks.generated.ts",
        "line": 20
      },
      "name": "CfnAddonProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonname"
            },
            "stability": "external",
            "summary": "The name of the add-on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 27
          },
          "name": "addonName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-clustername"
            },
            "stability": "external",
            "summary": "The name of the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 34
          },
          "name": "clusterName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonversion"
            },
            "stability": "external",
            "summary": "The version of the add-on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 41
          },
          "name": "addonVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-resolveconflicts"
            },
            "stability": "external",
            "summary": "How to resolve parameter value conflicts when migrating an existing add-on to an Amazon EKS add-on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 48
          },
          "name": "resolveConflicts",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-serviceaccountrolearn"
            },
            "remarks": "The role must be assigned the IAM permissions required by the add-on. If you don't specify an existing IAM role, then the add-on uses the permissions assigned to the node IAM role. For more information, see [Amazon EKS node IAM role](https://docs.aws.amazon.com/eks/latest/userguide/create-node-role.html) in the *Amazon EKS User Guide* .\n\n> To specify an existing IAM role, you must have an IAM OpenID Connect (OIDC) provider created for your cluster. For more information, see [Enabling IAM roles for service accounts on your cluster](https://docs.aws.amazon.com/eks/latest/userguide/enable-iam-roles-for-service-accounts.html) in the *Amazon EKS User Guide* .",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of an existing IAM role to bind to the add-on's service account."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 57
          },
          "name": "serviceAccountRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-tags"
            },
            "remarks": "Each tag consists of a key and an optional value, both of which you define. Add-on tags do not propagate to any other resources associated with the cluster.",
            "stability": "external",
            "summary": "The metadata that you apply to the add-on to assist with categorization and organization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 64
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/eks.generated:CfnAddonProps"
    },
    "@aws-cdk/aws-eks-legacy.CfnCluster": {
      "assembly": "@aws-cdk/aws-eks-legacy",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EKS::Cluster",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html"
        },
        "remarks": "Creates an Amazon EKS control plane.\n\nThe Amazon EKS control plane consists of control plane instances that run the Kubernetes software, such as `etcd` and the API server. The control plane runs in an account managed by AWS , and the Kubernetes API is exposed by the Amazon EKS API server endpoint. Each Amazon EKS cluster control plane is single tenant and unique. It runs on its own set of Amazon EC2 instances.\n\nThe cluster control plane is provisioned across multiple Availability Zones and fronted by an Elastic Load Balancing Network Load Balancer. Amazon EKS also provisions elastic network interfaces in your VPC subnets to provide connectivity from the control plane instances to the nodes (for example, to support `kubectl exec` , `logs` , and `proxy` data flows).\n\nAmazon EKS nodes run in your AWS account and connect to your cluster's control plane over the Kubernetes API server endpoint and a certificate file that is created for your cluster.\n\nIn most cases, it takes several minutes to create a cluster. After you create an Amazon EKS cluster, you must configure your Kubernetes tooling to communicate with the API server and launch nodes into your cluster. For more information, see [Managing Cluster Authentication](https://docs.aws.amazon.com/eks/latest/userguide/managing-auth.html) and [Launching Amazon EKS nodes](https://docs.aws.amazon.com/eks/latest/userguide/launch-workers.html) in the *Amazon EKS User Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EKS::Cluster`."
      },
      "fqn": "@aws-cdk/aws-eks-legacy.CfnCluster",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EKS::Cluster`."
        },
        "locationInModule": {
          "filename": "lib/eks.generated.ts",
          "line": 557
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-eks-legacy.CfnClusterProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/eks.generated.ts",
        "line": 421
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 585
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 603
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnCluster",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 425
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external",
            "summary": "The ARN of the cluster, such as `arn:aws:eks:us-west-2:666666666666:cluster/prod` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 450
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CertificateAuthorityData"
            },
            "stability": "external",
            "summary": "The `certificate-authority-data` for your cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 456
          },
          "name": "attrCertificateAuthorityData",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ClusterSecurityGroupId"
            },
            "remarks": "Managed node groups use this security group for control plane to data plane communication.\n\nThis parameter is only returned by Amazon EKS clusters that support managed node groups. For more information, see [Managed node groups](https://docs.aws.amazon.com/eks/latest/userguide/managed-node-groups.html) in the *Amazon EKS User Guide* .",
            "stability": "external",
            "summary": "The cluster security group that was created by Amazon EKS for the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 464
          },
          "name": "attrClusterSecurityGroupId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "EncryptionConfigKeyArn"
            },
            "stability": "external",
            "summary": "Amazon Resource Name (ARN) or alias of the customer master key (CMK)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 470
          },
          "name": "attrEncryptionConfigKeyArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Endpoint"
            },
            "stability": "external",
            "summary": "The endpoint for your Kubernetes API server, such as `https://5E1D0CEXAMPLEA591B746AFC5AB30262.yl4.us-west-2.eks.amazonaws.com` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 476
          },
          "name": "attrEndpoint",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "KubernetesNetworkConfig.ServiceIpv6Cidr"
            },
            "stability": "external",
            "summary": "The CIDR block that Kubernetes Service IP addresses are assigned from if you created a 1.21 or later cluster with version 1.10.1 or later of the Amazon VPC CNI add-on and specified `ipv6` for *ipFamily* when you created the cluster. Kubernetes assigns Service addresses from the unique local address range ( `fc00::/7` ) because you can't specify a custom IPv6 CIDR block when you create the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 482
          },
          "name": "attrKubernetesNetworkConfigServiceIpv6Cidr",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "OpenIdConnectIssuerUrl"
            },
            "stability": "external",
            "summary": "The issuer URL for the OIDC identity provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 488
          },
          "name": "attrOpenIdConnectIssuerUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 590
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-tags"
            },
            "remarks": "Each tag consists of a key and an optional value, both of which you define. Cluster tags don't propagate to any other resources associated with the cluster.\n\n> You must have the `eks:TagResource` and `eks:UntagResource` permissions in your IAM user or IAM role used to manage the CloudFormation stack. If you don't have these permissions, there might be unexpected behavior with stack-level tags propagating to the resource during resource creation and update.",
            "stability": "external",
            "summary": "The metadata that you apply to the cluster to assist with categorization and organization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 541
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-resourcesvpcconfig"
            },
            "remarks": "Amazon EKS VPC resources have specific requirements to work properly with Kubernetes. For more information, see [Cluster VPC Considerations](https://docs.aws.amazon.com/eks/latest/userguide/network_reqs.html) and [Cluster Security Group Considerations](https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html) in the *Amazon EKS User Guide* . You must specify at least two subnets. You can specify up to five security groups, but we recommend that you use a dedicated security group for your cluster control plane.\n\n> Updates require replacement of the `SecurityGroupIds` and `SubnetIds` sub-properties.",
            "stability": "external",
            "summary": "The VPC configuration that's used by the cluster control plane."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 497
          },
          "name": "resourcesVpcConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-eks-legacy.CfnCluster.ResourcesVpcConfigProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-rolearn"
            },
            "remarks": "For more information, see [Amazon EKS Service IAM Role](https://docs.aws.amazon.com/eks/latest/userguide/service_IAM_role.html) in the **Amazon EKS User Guide** .",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the IAM role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 504
          },
          "name": "roleArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-encryptionconfig"
            },
            "stability": "external",
            "summary": "The encryption configuration for the cluster."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 511
          },
          "name": "encryptionConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-eks-legacy.CfnCluster.EncryptionConfigProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-kubernetesnetworkconfig"
            },
            "stability": "external",
            "summary": "The Kubernetes network configuration for the cluster."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 518
          },
          "name": "kubernetesNetworkConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-eks-legacy.CfnCluster.KubernetesNetworkConfigProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-logging"
            },
            "stability": "external",
            "summary": "The logging configuration for your cluster."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 525
          },
          "name": "logging",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-eks-legacy.CfnCluster.LoggingProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-name"
            },
            "stability": "external",
            "summary": "The unique name to give to your cluster."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 532
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-version"
            },
            "remarks": "If you don't specify a value here, the latest version available in Amazon EKS is used.",
            "stability": "external",
            "summary": "The desired Kubernetes version for your cluster."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 548
          },
          "name": "version",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/eks.generated:CfnCluster"
    },
    "@aws-cdk/aws-eks-legacy.CfnCluster.ClusterLoggingProperty": {
      "assembly": "@aws-cdk/aws-eks-legacy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-clusterlogging.html"
        },
        "remarks": "> When updating a resource, you must include this `ClusterLogging` property if the previous CloudFormation template of the resource had it.",
        "stability": "external",
        "summary": "The cluster control plane logging configuration for your cluster."
      },
      "fqn": "@aws-cdk/aws-eks-legacy.CfnCluster.ClusterLoggingProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/eks.generated.ts",
        "line": 619
      },
      "name": "ClusterLoggingProperty",
      "namespace": "CfnCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-clusterlogging.html#cfn-eks-cluster-clusterlogging-enabledtypes"
            },
            "remarks": "> When updating a resource, you must include this `EnabledTypes` property if the previous CloudFormation template of the resource had it.",
            "stability": "external",
            "summary": "The enabled control plane logs for your cluster. All log types are disabled if the array is empty."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 627
          },
          "name": "enabledTypes",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-eks-legacy.CfnCluster.LoggingTypeConfigProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/eks.generated:CfnCluster.ClusterLoggingProperty"
    },
    "@aws-cdk/aws-eks-legacy.CfnCluster.EncryptionConfigProperty": {
      "assembly": "@aws-cdk/aws-eks-legacy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-encryptionconfig.html"
        },
        "stability": "external",
        "summary": "The encryption configuration for the cluster."
      },
      "fqn": "@aws-cdk/aws-eks-legacy.CfnCluster.EncryptionConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/eks.generated.ts",
        "line": 688
      },
      "name": "EncryptionConfigProperty",
      "namespace": "CfnCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-encryptionconfig.html#cfn-eks-cluster-encryptionconfig-provider"
            },
            "stability": "external",
            "summary": "The encryption provider for the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 694
          },
          "name": "provider",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-eks-legacy.CfnCluster.ProviderProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-encryptionconfig.html#cfn-eks-cluster-encryptionconfig-resources"
            },
            "remarks": "The only supported value is \"secrets\".",
            "stability": "external",
            "summary": "Specifies the resources to be encrypted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 700
          },
          "name": "resources",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/eks.generated:CfnCluster.EncryptionConfigProperty"
    },
    "@aws-cdk/aws-eks-legacy.CfnCluster.KubernetesNetworkConfigProperty": {
      "assembly": "@aws-cdk/aws-eks-legacy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-kubernetesnetworkconfig.html"
        },
        "stability": "external",
        "summary": "The Kubernetes network configuration for the cluster."
      },
      "fqn": "@aws-cdk/aws-eks-legacy.CfnCluster.KubernetesNetworkConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/eks.generated.ts",
        "line": 764
      },
      "name": "KubernetesNetworkConfigProperty",
      "namespace": "CfnCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-kubernetesnetworkconfig.html#cfn-eks-cluster-kubernetesnetworkconfig-ipfamily"
            },
            "remarks": "If you don't specify a value, `ipv4` is used by default. You can only specify an IP family when you create a cluster and can't change this value once the cluster is created. If you specify `ipv6` , the VPC and subnets that you specify for cluster creation must have both IPv4 and IPv6 CIDR blocks assigned to them. You can't specify `ipv6` for clusters in China Regions.\n\nYou can only specify `ipv6` for 1.21 and later clusters that use version 1.10.1 or later of the Amazon VPC CNI add-on. If you specify `ipv6` , then ensure that your VPC meets the requirements listed in the considerations listed in [Assigning IPv6 addresses to pods and services](https://docs.aws.amazon.com/eks/latest/userguide/cni-ipv6.html) in the Amazon EKS User Guide. Kubernetes assigns services IPv6 addresses from the unique local address range (fc00::/7). You can't specify a custom IPv6 CIDR block. Pod addresses are assigned from the subnet's IPv6 CIDR.",
            "stability": "external",
            "summary": "Specify which IP family is used to assign Kubernetes pod and service IP addresses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 772
          },
          "name": "ipFamily",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-kubernetesnetworkconfig.html#cfn-eks-cluster-kubernetesnetworkconfig-serviceipv4cidr"
            },
            "remarks": "The CIDR block to assign Kubernetes service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. We recommend that you specify a block that does not overlap with resources in other networks that are peered or connected to your VPC. The block must meet the following requirements:\n\n- Within one of the following private IP address blocks: 10.0.0.0/8, 172.16.0.0/12, or 192.168.0.0/16.\n- Doesn't overlap with any CIDR block assigned to the VPC that you selected for VPC.\n- Between /24 and /12.\n\n> You can only specify a custom CIDR block when you create a cluster and can't change this value once the cluster is created.",
            "stability": "external",
            "summary": "Don't specify a value if you select `ipv6` for *ipFamily* ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 784
          },
          "name": "serviceIpv4Cidr",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-kubernetesnetworkconfig.html#cfn-eks-cluster-kubernetesnetworkconfig-serviceipv6cidr"
            },
            "stability": "external",
            "summary": "The CIDR block that Kubernetes pod and service IP addresses are assigned from if you created a 1.21 or later cluster with version 1.10.1 or later of the Amazon VPC CNI add-on and specified `ipv6` for *ipFamily* when you created the cluster. Kubernetes assigns service addresses from the unique local address range ( `fc00::/7` ) because you can't specify a custom IPv6 CIDR block when you create the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 790
          },
          "name": "serviceIpv6Cidr",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/eks.generated:CfnCluster.KubernetesNetworkConfigProperty"
    },
    "@aws-cdk/aws-eks-legacy.CfnCluster.LoggingProperty": {
      "assembly": "@aws-cdk/aws-eks-legacy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-logging.html"
        },
        "remarks": "By default, cluster control plane logs aren't exported to CloudWatch Logs. For more information, see [Amazon EKS Cluster control plane logs](https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html) in the **Amazon EKS User Guide** .\n\n> When updating a resource, you must include this `Logging` property if the previous CloudFormation template of the resource had it. > CloudWatch Logs ingestion, archive storage, and data scanning rates apply to exported control plane logs. For more information, see [CloudWatch Pricing](https://docs.aws.amazon.com/cloudwatch/pricing/) .",
        "stability": "external",
        "summary": "Enable or disable exporting the Kubernetes control plane logs for your cluster to CloudWatch Logs."
      },
      "fqn": "@aws-cdk/aws-eks-legacy.CfnCluster.LoggingProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/eks.generated.ts",
        "line": 859
      },
      "name": "LoggingProperty",
      "namespace": "CfnCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-logging.html#cfn-eks-cluster-logging-clusterlogging"
            },
            "stability": "external",
            "summary": "The cluster control plane logging configuration for your cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 865
          },
          "name": "clusterLogging",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-eks-legacy.CfnCluster.ClusterLoggingProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/eks.generated:CfnCluster.LoggingProperty"
    },
    "@aws-cdk/aws-eks-legacy.CfnCluster.LoggingTypeConfigProperty": {
      "assembly": "@aws-cdk/aws-eks-legacy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-loggingtypeconfig.html"
        },
        "remarks": "For a list of the valid logging types, see the [`types` property of `LogSetup`](https://docs.aws.amazon.com/eks/latest/APIReference/API_LogSetup.html#AmazonEKS-Type-LogSetup-types) in the *Amazon EKS API Reference* .",
        "stability": "external",
        "summary": "The enabled logging type."
      },
      "fqn": "@aws-cdk/aws-eks-legacy.CfnCluster.LoggingTypeConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/eks.generated.ts",
        "line": 926
      },
      "name": "LoggingTypeConfigProperty",
      "namespace": "CfnCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-loggingtypeconfig.html#cfn-eks-cluster-loggingtypeconfig-type"
            },
            "stability": "external",
            "summary": "The name of the log type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 932
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/eks.generated:CfnCluster.LoggingTypeConfigProperty"
    },
    "@aws-cdk/aws-eks-legacy.CfnCluster.ProviderProperty": {
      "assembly": "@aws-cdk/aws-eks-legacy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-provider.html"
        },
        "stability": "external",
        "summary": "Identifies the AWS Key Management Service ( AWS KMS ) key used to encrypt the secrets."
      },
      "fqn": "@aws-cdk/aws-eks-legacy.CfnCluster.ProviderProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/eks.generated.ts",
        "line": 993
      },
      "name": "ProviderProperty",
      "namespace": "CfnCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-provider.html#cfn-eks-cluster-provider-keyarn"
            },
            "remarks": "The KMS key must be symmetric, created in the same region as the cluster, and if the KMS key was created in a different account, the user must have access to the KMS key. For more information, see [Allowing Users in Other Accounts to Use a KMS key](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-modifying-external-accounts.html) in the *AWS Key Management Service Developer Guide* .",
            "stability": "external",
            "summary": "Amazon Resource Name (ARN) or alias of the KMS key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 999
          },
          "name": "keyArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/eks.generated:CfnCluster.ProviderProperty"
    },
    "@aws-cdk/aws-eks-legacy.CfnCluster.ResourcesVpcConfigProperty": {
      "assembly": "@aws-cdk/aws-eks-legacy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html"
        },
        "remarks": "> When updating a resource, you must include these properties if the previous CloudFormation template of the resource had them:\n>\n> - `EndpointPublicAccess`\n> - `EndpointPrivateAccess`\n> - `PublicAccessCidrs`",
        "stability": "external",
        "summary": "An object representing the VPC configuration to use for an Amazon EKS cluster."
      },
      "fqn": "@aws-cdk/aws-eks-legacy.CfnCluster.ResourcesVpcConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/eks.generated.ts",
        "line": 1066
      },
      "name": "ResourcesVpcConfigProperty",
      "namespace": "CfnCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html#cfn-eks-cluster-resourcesvpcconfig-subnetids"
            },
            "remarks": "Amazon EKS creates cross-account elastic network interfaces in these subnets to allow communication between your nodes and the Kubernetes control plane.",
            "stability": "external",
            "summary": "Specify subnets for your Amazon EKS nodes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1101
          },
          "name": "subnetIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html#cfn-eks-cluster-resourcesvpcconfig-endpointprivateaccess"
            },
            "remarks": "If you enable private access, Kubernetes API requests from within your cluster's VPC use the private VPC endpoint. The default value for this parameter is `false` , which disables private access for your Kubernetes API server. If you disable private access and you have nodes or AWS Fargate pods in the cluster, then ensure that `publicAccessCidrs` includes the necessary CIDR blocks for communication with the nodes or Fargate pods. For more information, see [Amazon EKS cluster endpoint access control](https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html) in the **Amazon EKS User Guide** .",
            "stability": "external",
            "summary": "Set this value to `true` to enable private access for your cluster's Kubernetes API server endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1072
          },
          "name": "endpointPrivateAccess",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html#cfn-eks-cluster-resourcesvpcconfig-endpointpublicaccess"
            },
            "remarks": "If you disable public access, your cluster's Kubernetes API server can only receive requests from within the cluster VPC. The default value for this parameter is `true` , which enables public access for your Kubernetes API server. For more information, see [Amazon EKS cluster endpoint access control](https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html) in the **Amazon EKS User Guide** .",
            "stability": "external",
            "summary": "Set this value to `false` to disable public access to your cluster's Kubernetes API server endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1078
          },
          "name": "endpointPublicAccess",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html#cfn-eks-cluster-resourcesvpcconfig-publicaccesscidrs"
            },
            "remarks": "Communication to the endpoint from addresses outside of the CIDR blocks that you specify is denied. The default value is `0.0.0.0/0` . If you've disabled private endpoint access and you have nodes or AWS Fargate pods in the cluster, then ensure that you specify the necessary CIDR blocks. For more information, see [Amazon EKS cluster endpoint access control](https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html) in the **Amazon EKS User Guide** .",
            "stability": "external",
            "summary": "The CIDR blocks that are allowed access to your cluster's public Kubernetes API server endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1084
          },
          "name": "publicAccessCidrs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-resourcesvpcconfig.html#cfn-eks-cluster-resourcesvpcconfig-securitygroupids"
            },
            "remarks": "If you don't specify any security groups, then familiarize yourself with the difference between Amazon EKS defaults for clusters deployed with Kubernetes:\n\n- 1.14 Amazon EKS platform version `eks.2` and earlier\n- 1.14 Amazon EKS platform version `eks.3` and later\n\nFor more information, see [Amazon EKS security group considerations](https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html) in the **Amazon EKS User Guide** .",
            "stability": "external",
            "summary": "Specify one or more security groups for the cross-account elastic network interfaces that Amazon EKS creates to use that allow communication between your nodes and the Kubernetes control plane."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1095
          },
          "name": "securityGroupIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/eks.generated:CfnCluster.ResourcesVpcConfigProperty"
    },
    "@aws-cdk/aws-eks-legacy.CfnClusterProps": {
      "assembly": "@aws-cdk/aws-eks-legacy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnCluster`."
      },
      "fqn": "@aws-cdk/aws-eks-legacy.CfnClusterProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/eks.generated.ts",
        "line": 272
      },
      "name": "CfnClusterProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-resourcesvpcconfig"
            },
            "remarks": "Amazon EKS VPC resources have specific requirements to work properly with Kubernetes. For more information, see [Cluster VPC Considerations](https://docs.aws.amazon.com/eks/latest/userguide/network_reqs.html) and [Cluster Security Group Considerations](https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html) in the *Amazon EKS User Guide* . You must specify at least two subnets. You can specify up to five security groups, but we recommend that you use a dedicated security group for your cluster control plane.\n\n> Updates require replacement of the `SecurityGroupIds` and `SubnetIds` sub-properties.",
            "stability": "external",
            "summary": "The VPC configuration that's used by the cluster control plane."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 281
          },
          "name": "resourcesVpcConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-eks-legacy.CfnCluster.ResourcesVpcConfigProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-rolearn"
            },
            "remarks": "For more information, see [Amazon EKS Service IAM Role](https://docs.aws.amazon.com/eks/latest/userguide/service_IAM_role.html) in the **Amazon EKS User Guide** .",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the IAM role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 288
          },
          "name": "roleArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-encryptionconfig"
            },
            "stability": "external",
            "summary": "The encryption configuration for the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 295
          },
          "name": "encryptionConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-eks-legacy.CfnCluster.EncryptionConfigProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-kubernetesnetworkconfig"
            },
            "stability": "external",
            "summary": "The Kubernetes network configuration for the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 302
          },
          "name": "kubernetesNetworkConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-eks-legacy.CfnCluster.KubernetesNetworkConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-logging"
            },
            "stability": "external",
            "summary": "The logging configuration for your cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 309
          },
          "name": "logging",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-eks-legacy.CfnCluster.LoggingProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-name"
            },
            "stability": "external",
            "summary": "The unique name to give to your cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 316
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-tags"
            },
            "remarks": "Each tag consists of a key and an optional value, both of which you define. Cluster tags don't propagate to any other resources associated with the cluster.\n\n> You must have the `eks:TagResource` and `eks:UntagResource` permissions in your IAM user or IAM role used to manage the CloudFormation stack. If you don't have these permissions, there might be unexpected behavior with stack-level tags propagating to the resource during resource creation and update.",
            "stability": "external",
            "summary": "The metadata that you apply to the cluster to assist with categorization and organization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 325
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-version"
            },
            "remarks": "If you don't specify a value here, the latest version available in Amazon EKS is used.",
            "stability": "external",
            "summary": "The desired Kubernetes version for your cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 332
          },
          "name": "version",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/eks.generated:CfnClusterProps"
    },
    "@aws-cdk/aws-eks-legacy.CfnFargateProfile": {
      "assembly": "@aws-cdk/aws-eks-legacy",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EKS::FargateProfile",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html"
        },
        "remarks": "Creates an AWS Fargate profile for your Amazon EKS cluster. You must have at least one Fargate profile in a cluster to be able to run pods on Fargate.\n\nThe Fargate profile allows an administrator to declare which pods run on Fargate and specify which pods run on which Fargate profile. This declaration is done through the profile’s selectors. Each profile can have up to five selectors that contain a namespace and labels. A namespace is required for every selector. The label field consists of multiple optional key-value pairs. Pods that match the selectors are scheduled on Fargate. If a to-be-scheduled pod matches any of the selectors in the Fargate profile, then that pod is run on Fargate.\n\nWhen you create a Fargate profile, you must specify a pod execution role to use with the pods that are scheduled with the profile. This role is added to the cluster's Kubernetes [Role Based Access Control](https://docs.aws.amazon.com/https://kubernetes.io/docs/admin/authorization/rbac/) (RBAC) for authorization so that the `kubelet` that is running on the Fargate infrastructure can register with your Amazon EKS cluster so that it can appear in your cluster as a node. The pod execution role also provides IAM permissions to the Fargate infrastructure to allow read access to Amazon ECR image repositories. For more information, see [Pod Execution Role](https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html) in the *Amazon EKS User Guide* .\n\nFargate profiles are immutable. However, you can create a new updated profile to replace an existing profile and then delete the original after the updated profile has finished creating.\n\nIf any Fargate profiles in a cluster are in the `DELETING` status, you must wait for that Fargate profile to finish deleting before you can create any other profiles in that cluster.\n\nFor more information, see [AWS Fargate Profile](https://docs.aws.amazon.com/eks/latest/userguide/fargate-profile.html) in the *Amazon EKS User Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EKS::FargateProfile`."
      },
      "fqn": "@aws-cdk/aws-eks-legacy.CfnFargateProfile",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EKS::FargateProfile`."
        },
        "locationInModule": {
          "filename": "lib/eks.generated.ts",
          "line": 1382
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-eks-legacy.CfnFargateProfileProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/eks.generated.ts",
        "line": 1302
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1403
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1419
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnFargateProfile",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1306
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external",
            "summary": "The ARN of the cluster, such as `arn:aws:eks:us-west-2:666666666666:fargateprofile/myCluster/myFargateProfile/1cb1a11a-1dc1-1d11-cf11-1111f11fa111` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1331
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1408
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-tags"
            },
            "remarks": "Each tag consists of a key and an optional value. You define both. Fargate profile tags do not propagate to any other resources associated with the Fargate profile, such as the pods that are scheduled with it.",
            "stability": "external",
            "summary": "The metadata to apply to the Fargate profile to assist with categorization and organization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1373
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-clustername"
            },
            "stability": "external",
            "summary": "The name of the Amazon EKS cluster to apply the Fargate profile to."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1338
          },
          "name": "clusterName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-podexecutionrolearn"
            },
            "remarks": "The pod execution role allows Fargate infrastructure to register with your cluster as a node, and it provides read access to Amazon ECR image repositories. For more information, see [Pod Execution Role](https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html) in the *Amazon EKS User Guide* .",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the pod execution role to use for pods that match the selectors in the Fargate profile."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1345
          },
          "name": "podExecutionRoleArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-selectors"
            },
            "remarks": "Each selector must have an associated namespace. Optionally, you can also specify labels for a namespace. You may specify up to five selectors in a Fargate profile.",
            "stability": "external",
            "summary": "The selectors to match for pods to use this Fargate profile."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1352
          },
          "name": "selectors",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-eks-legacy.CfnFargateProfile.SelectorProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-fargateprofilename"
            },
            "stability": "external",
            "summary": "The name of the Fargate profile."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1359
          },
          "name": "fargateProfileName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-subnets"
            },
            "remarks": "At this time, pods running on Fargate are not assigned public IP addresses, so only private subnets (with no direct route to an Internet Gateway) are accepted for this parameter.",
            "stability": "external",
            "summary": "The IDs of subnets to launch your pods into."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1366
          },
          "name": "subnets",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/eks.generated:CfnFargateProfile"
    },
    "@aws-cdk/aws-eks-legacy.CfnFargateProfile.LabelProperty": {
      "assembly": "@aws-cdk/aws-eks-legacy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-label.html"
        },
        "stability": "external",
        "summary": "A key-value pair."
      },
      "fqn": "@aws-cdk/aws-eks-legacy.CfnFargateProfile.LabelProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/eks.generated.ts",
        "line": 1433
      },
      "name": "LabelProperty",
      "namespace": "CfnFargateProfile",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-label.html#cfn-eks-fargateprofile-label-key"
            },
            "stability": "external",
            "summary": "Enter a key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1439
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-label.html#cfn-eks-fargateprofile-label-value"
            },
            "stability": "external",
            "summary": "Enter a value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1445
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/eks.generated:CfnFargateProfile.LabelProperty"
    },
    "@aws-cdk/aws-eks-legacy.CfnFargateProfile.SelectorProperty": {
      "assembly": "@aws-cdk/aws-eks-legacy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-selector.html"
        },
        "stability": "external",
        "summary": "An object representing an AWS Fargate profile selector."
      },
      "fqn": "@aws-cdk/aws-eks-legacy.CfnFargateProfile.SelectorProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/eks.generated.ts",
        "line": 1511
      },
      "name": "SelectorProperty",
      "namespace": "CfnFargateProfile",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-selector.html#cfn-eks-fargateprofile-selector-namespace"
            },
            "stability": "external",
            "summary": "The Kubernetes namespace that the selector should match."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1523
          },
          "name": "namespace",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-fargateprofile-selector.html#cfn-eks-fargateprofile-selector-labels"
            },
            "remarks": "A pod must contain all of the labels that are specified in the selector for it to be considered a match.",
            "stability": "external",
            "summary": "The Kubernetes labels that the selector should match."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1517
          },
          "name": "labels",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-eks-legacy.CfnFargateProfile.LabelProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/eks.generated:CfnFargateProfile.SelectorProperty"
    },
    "@aws-cdk/aws-eks-legacy.CfnFargateProfileProps": {
      "assembly": "@aws-cdk/aws-eks-legacy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnFargateProfile`."
      },
      "fqn": "@aws-cdk/aws-eks-legacy.CfnFargateProfileProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/eks.generated.ts",
        "line": 1174
      },
      "name": "CfnFargateProfileProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-clustername"
            },
            "stability": "external",
            "summary": "The name of the Amazon EKS cluster to apply the Fargate profile to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1181
          },
          "name": "clusterName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-podexecutionrolearn"
            },
            "remarks": "The pod execution role allows Fargate infrastructure to register with your cluster as a node, and it provides read access to Amazon ECR image repositories. For more information, see [Pod Execution Role](https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html) in the *Amazon EKS User Guide* .",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the pod execution role to use for pods that match the selectors in the Fargate profile."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1188
          },
          "name": "podExecutionRoleArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-selectors"
            },
            "remarks": "Each selector must have an associated namespace. Optionally, you can also specify labels for a namespace. You may specify up to five selectors in a Fargate profile.",
            "stability": "external",
            "summary": "The selectors to match for pods to use this Fargate profile."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1195
          },
          "name": "selectors",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-eks-legacy.CfnFargateProfile.SelectorProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-fargateprofilename"
            },
            "stability": "external",
            "summary": "The name of the Fargate profile."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1202
          },
          "name": "fargateProfileName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-subnets"
            },
            "remarks": "At this time, pods running on Fargate are not assigned public IP addresses, so only private subnets (with no direct route to an Internet Gateway) are accepted for this parameter.",
            "stability": "external",
            "summary": "The IDs of subnets to launch your pods into."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1209
          },
          "name": "subnets",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-tags"
            },
            "remarks": "Each tag consists of a key and an optional value. You define both. Fargate profile tags do not propagate to any other resources associated with the Fargate profile, such as the pods that are scheduled with it.",
            "stability": "external",
            "summary": "The metadata to apply to the Fargate profile to assist with categorization and organization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1216
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/eks.generated:CfnFargateProfileProps"
    },
    "@aws-cdk/aws-eks-legacy.CfnIdentityProviderConfig": {
      "assembly": "@aws-cdk/aws-eks-legacy",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EKS::IdentityProviderConfig",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-identityproviderconfig.html"
        },
        "remarks": "Associate an identity provider configuration to a cluster.\n\nIf you want to authenticate identities using an identity provider, you can create an identity provider configuration and associate it to your cluster. After configuring authentication to your cluster you can create Kubernetes `roles` and `clusterroles` to assign permissions to the roles, and then bind the roles to the identities using Kubernetes `rolebindings` and `clusterrolebindings` . For more information see [Using RBAC Authorization](https://docs.aws.amazon.com/https://kubernetes.io/docs/reference/access-authn-authz/rbac/) in the Kubernetes documentation.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EKS::IdentityProviderConfig`."
      },
      "fqn": "@aws-cdk/aws-eks-legacy.CfnIdentityProviderConfig",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EKS::IdentityProviderConfig`."
        },
        "locationInModule": {
          "filename": "lib/eks.generated.ts",
          "line": 1769
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-eks-legacy.CfnIdentityProviderConfigProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/eks.generated.ts",
        "line": 1696
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1788
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1803
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnIdentityProviderConfig",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1700
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "IdentityProviderConfigArn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) associated with the identity provider config."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1725
          },
          "name": "attrIdentityProviderConfigArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1793
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-identityproviderconfig.html#cfn-eks-identityproviderconfig-tags"
            },
            "remarks": "Each tag consists of a key and an optional value. You define both.",
            "stability": "external",
            "summary": "The metadata to apply to the provider configuration to assist with categorization and organization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1760
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-identityproviderconfig.html#cfn-eks-identityproviderconfig-clustername"
            },
            "stability": "external",
            "summary": "The cluster that the configuration is associated to."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1732
          },
          "name": "clusterName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-identityproviderconfig.html#cfn-eks-identityproviderconfig-type"
            },
            "remarks": "The only type available is `oidc` .",
            "stability": "external",
            "summary": "The type of the identity provider configuration."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1739
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-identityproviderconfig.html#cfn-eks-identityproviderconfig-identityproviderconfigname"
            },
            "stability": "external",
            "summary": "The name of the configuration."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1746
          },
          "name": "identityProviderConfigName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-identityproviderconfig.html#cfn-eks-identityproviderconfig-oidc"
            },
            "stability": "external",
            "summary": "An object that represents an OpenID Connect (OIDC) identity provider configuration."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1753
          },
          "name": "oidc",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-eks-legacy.CfnIdentityProviderConfig.OidcIdentityProviderConfigProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/eks.generated:CfnIdentityProviderConfig"
    },
    "@aws-cdk/aws-eks-legacy.CfnIdentityProviderConfig.OidcIdentityProviderConfigProperty": {
      "assembly": "@aws-cdk/aws-eks-legacy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-identityproviderconfig-oidcidentityproviderconfig.html"
        },
        "stability": "external",
        "summary": "An object that represents the configuration for an OpenID Connect (OIDC) identity provider."
      },
      "fqn": "@aws-cdk/aws-eks-legacy.CfnIdentityProviderConfig.OidcIdentityProviderConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/eks.generated.ts",
        "line": 1817
      },
      "name": "OidcIdentityProviderConfigProperty",
      "namespace": "CfnIdentityProviderConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-identityproviderconfig-oidcidentityproviderconfig.html#cfn-eks-identityproviderconfig-oidcidentityproviderconfig-clientid"
            },
            "remarks": "The ID of the client application that makes authentication requests to the OIDC identity provider.",
            "stability": "external",
            "summary": "This is also known as *audience* ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1823
          },
          "name": "clientId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-identityproviderconfig-oidcidentityproviderconfig.html#cfn-eks-identityproviderconfig-oidcidentityproviderconfig-issuerurl"
            },
            "stability": "external",
            "summary": "The URL of the OIDC identity provider that allows the API server to discover public signing keys for verifying tokens."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1841
          },
          "name": "issuerUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-identityproviderconfig-oidcidentityproviderconfig.html#cfn-eks-identityproviderconfig-oidcidentityproviderconfig-groupsclaim"
            },
            "stability": "external",
            "summary": "The JSON web token (JWT) claim that the provider uses to return your groups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1829
          },
          "name": "groupsClaim",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-identityproviderconfig-oidcidentityproviderconfig.html#cfn-eks-identityproviderconfig-oidcidentityproviderconfig-groupsprefix"
            },
            "remarks": "For example, the value `oidc:` creates group names like `oidc:engineering` and `oidc:infra` . The prefix can't contain `system:`",
            "stability": "external",
            "summary": "The prefix that is prepended to group claims to prevent clashes with existing names (such as `system:` groups)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1835
          },
          "name": "groupsPrefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-identityproviderconfig-oidcidentityproviderconfig.html#cfn-eks-identityproviderconfig-oidcidentityproviderconfig-requiredclaims"
            },
            "remarks": "If set, each claim is verified to be present in the token with a matching value.",
            "stability": "external",
            "summary": "The key-value pairs that describe required claims in the identity token."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1847
          },
          "name": "requiredClaims",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-eks-legacy.CfnIdentityProviderConfig.RequiredClaimProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-identityproviderconfig-oidcidentityproviderconfig.html#cfn-eks-identityproviderconfig-oidcidentityproviderconfig-usernameclaim"
            },
            "stability": "external",
            "summary": "The JSON Web token (JWT) claim that is used as the username."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1853
          },
          "name": "usernameClaim",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-identityproviderconfig-oidcidentityproviderconfig.html#cfn-eks-identityproviderconfig-oidcidentityproviderconfig-usernameprefix"
            },
            "remarks": "The prefix can't contain `system:`",
            "stability": "external",
            "summary": "The prefix that is prepended to username claims to prevent clashes with existing names."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1859
          },
          "name": "usernamePrefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/eks.generated:CfnIdentityProviderConfig.OidcIdentityProviderConfigProperty"
    },
    "@aws-cdk/aws-eks-legacy.CfnIdentityProviderConfig.RequiredClaimProperty": {
      "assembly": "@aws-cdk/aws-eks-legacy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-identityproviderconfig-requiredclaim.html"
        },
        "remarks": "If set, each claim is verified to be present in the token with a matching value.",
        "stability": "external",
        "summary": "A key-value pair that describes a required claim in the identity token."
      },
      "fqn": "@aws-cdk/aws-eks-legacy.CfnIdentityProviderConfig.RequiredClaimProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/eks.generated.ts",
        "line": 1940
      },
      "name": "RequiredClaimProperty",
      "namespace": "CfnIdentityProviderConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-identityproviderconfig-requiredclaim.html#cfn-eks-identityproviderconfig-requiredclaim-key"
            },
            "stability": "external",
            "summary": "The key to match from the token."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1946
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-identityproviderconfig-requiredclaim.html#cfn-eks-identityproviderconfig-requiredclaim-value"
            },
            "stability": "external",
            "summary": "The value for the key from the token."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1952
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/eks.generated:CfnIdentityProviderConfig.RequiredClaimProperty"
    },
    "@aws-cdk/aws-eks-legacy.CfnIdentityProviderConfigProps": {
      "assembly": "@aws-cdk/aws-eks-legacy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-identityproviderconfig.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnIdentityProviderConfig`."
      },
      "fqn": "@aws-cdk/aws-eks-legacy.CfnIdentityProviderConfigProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/eks.generated.ts",
        "line": 1587
      },
      "name": "CfnIdentityProviderConfigProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-identityproviderconfig.html#cfn-eks-identityproviderconfig-clustername"
            },
            "stability": "external",
            "summary": "The cluster that the configuration is associated to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1594
          },
          "name": "clusterName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-identityproviderconfig.html#cfn-eks-identityproviderconfig-type"
            },
            "remarks": "The only type available is `oidc` .",
            "stability": "external",
            "summary": "The type of the identity provider configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1601
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-identityproviderconfig.html#cfn-eks-identityproviderconfig-identityproviderconfigname"
            },
            "stability": "external",
            "summary": "The name of the configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1608
          },
          "name": "identityProviderConfigName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-identityproviderconfig.html#cfn-eks-identityproviderconfig-oidc"
            },
            "stability": "external",
            "summary": "An object that represents an OpenID Connect (OIDC) identity provider configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1615
          },
          "name": "oidc",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-eks-legacy.CfnIdentityProviderConfig.OidcIdentityProviderConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-identityproviderconfig.html#cfn-eks-identityproviderconfig-tags"
            },
            "remarks": "Each tag consists of a key and an optional value. You define both.",
            "stability": "external",
            "summary": "The metadata to apply to the provider configuration to assist with categorization and organization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 1622
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/eks.generated:CfnIdentityProviderConfigProps"
    },
    "@aws-cdk/aws-eks-legacy.CfnNodegroup": {
      "assembly": "@aws-cdk/aws-eks-legacy",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::EKS::Nodegroup",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html"
        },
        "remarks": "Creates a managed node group for an Amazon EKS cluster. You can only create a node group for your cluster that is equal to the current Kubernetes version for the cluster. All node groups are created with the latest AMI release version for the respective minor Kubernetes version of the cluster, unless you deploy a custom AMI using a launch template. For more information about using launch templates, see [Launch template support](https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html) .\n\nAn Amazon EKS managed node group is an Amazon EC2 Auto Scaling group and associated Amazon EC2 instances that are managed by AWS for an Amazon EKS cluster. Each node group uses a version of the Amazon EKS optimized Amazon Linux 2 AMI. For more information, see [Managed Node Groups](https://docs.aws.amazon.com/eks/latest/userguide/managed-node-groups.html) in the *Amazon EKS User Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::EKS::Nodegroup`."
      },
      "fqn": "@aws-cdk/aws-eks-legacy.CfnNodegroup",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::EKS::Nodegroup`."
        },
        "locationInModule": {
          "filename": "lib/eks.generated.ts",
          "line": 2443
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-eks-legacy.CfnNodegroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/eks.generated.ts",
        "line": 2259
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2479
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2507
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnNodegroup",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2263
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) associated with the managed node group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2288
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ClusterName"
            },
            "stability": "external",
            "summary": "The name of the cluster that the managed node group resides in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2294
          },
          "name": "attrClusterName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2300
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "NodegroupName"
            },
            "stability": "external",
            "summary": "The name associated with an Amazon EKS managed node group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2306
          },
          "name": "attrNodegroupName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2484
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-tags"
            },
            "remarks": "Each tag consists of a key and an optional value. You define both. Node group tags do not propagate to any other resources associated with the node group, such as the Amazon EC2 instances or subnets.",
            "stability": "external",
            "summary": "The metadata to apply to the node group to assist with categorization and organization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2413
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-clustername"
            },
            "stability": "external",
            "summary": "The name of the cluster to create the node group in."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2313
          },
          "name": "clusterName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-labels"
            },
            "stability": "external",
            "summary": "The Kubernetes labels to be applied to the nodes in the node group when they are created."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2369
          },
          "name": "labels",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-noderole"
            },
            "remarks": "The Amazon EKS worker node `kubelet` daemon makes calls to AWS APIs on your behalf. Nodes receive permissions for these API calls through an IAM instance profile and associated policies. Before you can launch nodes and register them into a cluster, you must create an IAM role for those nodes to use when they are launched. For more information, see [Amazon EKS node IAM role](https://docs.aws.amazon.com/eks/latest/userguide/create-node-role.html) in the **Amazon EKS User Guide** . If you specify `launchTemplate` , then don't specify [`IamInstanceProfile`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_IamInstanceProfile.html) in your launch template, or the node group deployment will fail. For more information about using launch templates with Amazon EKS, see [Launch template support](https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html) in the *Amazon EKS User Guide* .",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the IAM role to associate with your node group."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2320
          },
          "name": "nodeRole",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-subnets"
            },
            "remarks": "If you specify `launchTemplate` , then don't specify [`SubnetId`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInterface.html) in your launch template, or the node group deployment will fail. For more information about using launch templates with Amazon EKS, see [Launch template support](https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html) in the *Amazon EKS User Guide* .",
            "stability": "external",
            "summary": "The subnets to use for the Auto Scaling group that is created for your node group."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2327
          },
          "name": "subnets",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-amitype"
            },
            "remarks": "GPU instance types should use the `AL2_x86_64_GPU` AMI type. Non-GPU instances should use the `AL2_x86_64` AMI type. Arm instances should use the `AL2_ARM_64` AMI type. All types use the Amazon EKS optimized Amazon Linux 2 AMI. If you specify `launchTemplate` , and your launch template uses a custom AMI, then don't specify `amiType` , or the node group deployment will fail. For more information about using launch templates with Amazon EKS, see [Launch template support](https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html) in the *Amazon EKS User Guide* .",
            "stability": "external",
            "summary": "The AMI type for your node group."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2334
          },
          "name": "amiType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-capacitytype"
            },
            "stability": "external",
            "summary": "The capacity type of your managed node group."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2341
          },
          "name": "capacityType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-disksize"
            },
            "remarks": "The default disk size is 20 GiB. If you specify `launchTemplate` , then don't specify `diskSize` , or the node group deployment will fail. For more information about using launch templates with Amazon EKS, see [Launch template support](https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html) in the *Amazon EKS User Guide* .",
            "stability": "external",
            "summary": "The root device disk size (in GiB) for your node group instances."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2348
          },
          "name": "diskSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-forceupdateenabled"
            },
            "remarks": "If an update fails because pods could not be drained, you can force the update after it fails to terminate the old node whether or not any pods are running on the node.",
            "stability": "external",
            "summary": "Force the update if the existing node group's pods are unable to be drained due to a pod disruption budget issue."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2355
          },
          "name": "forceUpdateEnabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes"
            },
            "remarks": "If you specify a GPU instance type, be sure to specify `AL2_x86_64_GPU` with the `amiType` parameter. If you specify `launchTemplate` , then you can specify zero or one instance type in your launch template *or* you can specify 0-20 instance types for `instanceTypes` . If however, you specify an instance type in your launch template *and* specify any `instanceTypes` , the node group deployment will fail. If you don't specify an instance type in a launch template or for `instanceTypes` , then `t3.medium` is used, by default. If you specify `Spot` for `capacityType` , then we recommend specifying multiple values for `instanceTypes` . For more information, see [Managed node group capacity types](https://docs.aws.amazon.com/eks/latest/userguide/managed-node-groups.html#managed-node-group-capacity-types) and [Launch template support](https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html) in the *Amazon EKS User Guide* .",
            "stability": "external",
            "summary": "Specify the instance types for a node group."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2362
          },
          "name": "instanceTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-launchtemplate"
            },
            "remarks": "If specified, then do not specify `instanceTypes` , `diskSize` , or `remoteAccess` and make sure that the launch template meets the requirements in `launchTemplateSpecification` .",
            "stability": "external",
            "summary": "An object representing a node group's launch template specification."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2376
          },
          "name": "launchTemplate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-eks-legacy.CfnNodegroup.LaunchTemplateSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-nodegroupname"
            },
            "stability": "external",
            "summary": "The unique name to give your node group."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2383
          },
          "name": "nodegroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-releaseversion"
            },
            "remarks": "> Changing this value triggers an update of the node group if one is available. However, only the latest available AMI release version is valid as an input. You cannot roll back to a previous AMI release version.",
            "stability": "external",
            "summary": "The AMI version of the Amazon EKS optimized AMI to use with your node group (for example, `1.14.7- *YYYYMMDD*` ). By default, the latest available AMI version for the node group's current Kubernetes version is used. For more information, see [Amazon EKS optimized Linux AMI Versions](https://docs.aws.amazon.com/eks/latest/userguide/eks-linux-ami-versions.html) in the *Amazon EKS User Guide* ."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2392
          },
          "name": "releaseVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-remoteaccess"
            },
            "remarks": "If you specify `launchTemplate` , then don't specify `remoteAccess` , or the node group deployment will fail. For more information about using launch templates with Amazon EKS, see [Launch template support](https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html) in the *Amazon EKS User Guide* .",
            "stability": "external",
            "summary": "The remote access (SSH) configuration to use with your node group."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2399
          },
          "name": "remoteAccess",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-eks-legacy.CfnNodegroup.RemoteAccessProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-scalingconfig"
            },
            "stability": "external",
            "summary": "The scaling configuration details for the Auto Scaling group that is created for your node group."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2406
          },
          "name": "scalingConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-eks-legacy.CfnNodegroup.ScalingConfigProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-taints"
            },
            "remarks": "Effect is one of `No_Schedule` , `Prefer_No_Schedule` , or `No_Execute` . Kubernetes taints can be used together with tolerations to control how workloads are scheduled to your nodes. For more information, see [Node taints on managed node groups](https://docs.aws.amazon.com/eks/latest/userguide/node-taints-managed-node-groups.html) .",
            "stability": "external",
            "summary": "The Kubernetes taints to be applied to the nodes in the node group when they are created."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2420
          },
          "name": "taints",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-eks-legacy.CfnNodegroup.TaintProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-updateconfig"
            },
            "stability": "external",
            "summary": "The node group update configuration."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2427
          },
          "name": "updateConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-eks-legacy.CfnNodegroup.UpdateConfigProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-version"
            },
            "remarks": "By default, the Kubernetes version of the cluster is used, and this is the only accepted specified value. If you specify `launchTemplate` , and your launch template uses a custom AMI, then don't specify `version` , or the node group deployment will fail. For more information about using launch templates with Amazon EKS, see [Launch template support](https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html) in the *Amazon EKS User Guide* .",
            "stability": "external",
            "summary": "The Kubernetes version to use for your managed nodes."
          },
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2434
          },
          "name": "version",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/eks.generated:CfnNodegroup"
    },
    "@aws-cdk/aws-eks-legacy.CfnNodegroup.LaunchTemplateSpecificationProperty": {
      "assembly": "@aws-cdk/aws-eks-legacy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html"
        },
        "remarks": "The launch template cannot include [`SubnetId`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInterface.html) , [`IamInstanceProfile`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_IamInstanceProfile.html) , [`RequestSpotInstances`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotInstances.html) , [`HibernationOptions`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_HibernationOptionsRequest.html) , or [`TerminateInstances`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_TerminateInstances.html) , or the node group deployment or update will fail. For more information about launch templates, see [`CreateLaunchTemplate`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLaunchTemplate.html) in the Amazon EC2 API Reference. For more information about using launch templates with Amazon EKS, see [Launch template support](https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html) in the *Amazon EKS User Guide* .\n\nSpecify either `name` or `id` , but not both.",
        "stability": "external",
        "summary": "An object representing a node group launch template specification."
      },
      "fqn": "@aws-cdk/aws-eks-legacy.CfnNodegroup.LaunchTemplateSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/eks.generated.ts",
        "line": 2523
      },
      "name": "LaunchTemplateSpecificationProperty",
      "namespace": "CfnNodegroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html#cfn-eks-nodegroup-launchtemplatespecification-id"
            },
            "stability": "external",
            "summary": "The ID of the launch template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2529
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html#cfn-eks-nodegroup-launchtemplatespecification-name"
            },
            "stability": "external",
            "summary": "The name of the launch template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2535
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-launchtemplatespecification.html#cfn-eks-nodegroup-launchtemplatespecification-version"
            },
            "remarks": "If no version is specified, then the template's default version is used.",
            "stability": "external",
            "summary": "The version of the launch template to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2541
          },
          "name": "version",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/eks.generated:CfnNodegroup.LaunchTemplateSpecificationProperty"
    },
    "@aws-cdk/aws-eks-legacy.CfnNodegroup.RemoteAccessProperty": {
      "assembly": "@aws-cdk/aws-eks-legacy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html"
        },
        "stability": "external",
        "summary": "An object representing the remote access configuration for the managed node group."
      },
      "fqn": "@aws-cdk/aws-eks-legacy.CfnNodegroup.RemoteAccessProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/eks.generated.ts",
        "line": 2608
      },
      "name": "RemoteAccessProperty",
      "namespace": "CfnNodegroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html#cfn-eks-nodegroup-remoteaccess-ec2sshkey"
            },
            "remarks": "For more information, see [Amazon EC2 key pairs and Linux instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html) in the *Amazon Elastic Compute Cloud User Guide for Linux Instances* .",
            "stability": "external",
            "summary": "The Amazon EC2 SSH key that provides access for SSH communication with the nodes in the managed node group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2614
          },
          "name": "ec2SshKey",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-remoteaccess.html#cfn-eks-nodegroup-remoteaccess-sourcesecuritygroups"
            },
            "remarks": "If you specify an Amazon EC2 SSH key but do not specify a source security group when you create a managed node group, then port 22 on the nodes is opened to the internet (0.0.0.0/0). For more information, see [Security Groups for Your VPC](https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html) in the *Amazon Virtual Private Cloud User Guide* .",
            "stability": "external",
            "summary": "The security groups that are allowed SSH access (port 22) to the nodes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2620
          },
          "name": "sourceSecurityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/eks.generated:CfnNodegroup.RemoteAccessProperty"
    },
    "@aws-cdk/aws-eks-legacy.CfnNodegroup.ScalingConfigProperty": {
      "assembly": "@aws-cdk/aws-eks-legacy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html"
        },
        "remarks": "When creating a node group, you must specify all or none of the properties. When updating a node group, you can specify any or none of the properties.",
        "stability": "external",
        "summary": "An object representing the scaling configuration details for the Auto Scaling group that is associated with your node group."
      },
      "fqn": "@aws-cdk/aws-eks-legacy.CfnNodegroup.ScalingConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/eks.generated.ts",
        "line": 2685
      },
      "name": "ScalingConfigProperty",
      "namespace": "CfnNodegroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-desiredsize"
            },
            "remarks": "> If you use Cluster Autoscaler, you shouldn't change the desiredSize value directly, as this can cause the Cluster Autoscaler to suddenly scale up or scale down.\n\nWhenever this parameter changes, the number of worker nodes in the node group is updated to the specified size. If this parameter is given a value that is smaller than the current number of running worker nodes, the necessary number of worker nodes are terminated to match the given value. When using CloudFormation, no action occurs if you remove this parameter from your CFN template.\n\nThis parameter can be different from minSize in some cases, such as when starting with extra hosts for testing. This parameter can also be different when you want to start with an estimated number of needed hosts, but let Cluster Autoscaler reduce the number if there are too many. When Cluster Autoscaler is used, the desiredSize parameter is altered by Cluster Autoscaler (but can be out-of-date for short periods of time). Cluster Autoscaler doesn't scale a managed node group lower than minSize or higher than maxSize.",
            "stability": "external",
            "summary": "The current number of nodes that the managed node group should maintain."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2697
          },
          "name": "desiredSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-maxsize"
            },
            "remarks": "For information about the maximum number that you can specify, see [Amazon EKS service quotas](https://docs.aws.amazon.com/eks/latest/userguide/service-quotas.html) in the *Amazon EKS User Guide* .",
            "stability": "external",
            "summary": "The maximum number of nodes that the managed node group can scale out to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2703
          },
          "name": "maxSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-minsize"
            },
            "stability": "external",
            "summary": "The minimum number of nodes that the managed node group can scale in to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2709
          },
          "name": "minSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/eks.generated:CfnNodegroup.ScalingConfigProperty"
    },
    "@aws-cdk/aws-eks-legacy.CfnNodegroup.TaintProperty": {
      "assembly": "@aws-cdk/aws-eks-legacy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html"
        },
        "remarks": "For more information, see [Node taints on managed node groups](https://docs.aws.amazon.com/eks/latest/userguide/node-taints-managed-node-groups.html) .",
        "stability": "external",
        "summary": "A property that allows a node to repel a set of pods."
      },
      "fqn": "@aws-cdk/aws-eks-legacy.CfnNodegroup.TaintProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/eks.generated.ts",
        "line": 2776
      },
      "name": "TaintProperty",
      "namespace": "CfnNodegroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html#cfn-eks-nodegroup-taint-effect"
            },
            "stability": "external",
            "summary": "The effect of the taint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2782
          },
          "name": "effect",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html#cfn-eks-nodegroup-taint-key"
            },
            "stability": "external",
            "summary": "The key of the taint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2788
          },
          "name": "key",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-taint.html#cfn-eks-nodegroup-taint-value"
            },
            "stability": "external",
            "summary": "The value of the taint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2794
          },
          "name": "value",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/eks.generated:CfnNodegroup.TaintProperty"
    },
    "@aws-cdk/aws-eks-legacy.CfnNodegroup.UpdateConfigProperty": {
      "assembly": "@aws-cdk/aws-eks-legacy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-updateconfig.html"
        },
        "stability": "external",
        "summary": "The update configuration for the node group."
      },
      "fqn": "@aws-cdk/aws-eks-legacy.CfnNodegroup.UpdateConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/eks.generated.ts",
        "line": 2861
      },
      "name": "UpdateConfigProperty",
      "namespace": "CfnNodegroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-updateconfig.html#cfn-eks-nodegroup-updateconfig-maxunavailable"
            },
            "remarks": "Nodes will be updated in parallel. This value or `maxUnavailablePercentage` is required to have a value.The maximum number is 100.",
            "stability": "external",
            "summary": "The maximum number of nodes unavailable at once during a version update."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2867
          },
          "name": "maxUnavailable",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-updateconfig.html#cfn-eks-nodegroup-updateconfig-maxunavailablepercentage"
            },
            "remarks": "This percentage of nodes will be updated in parallel, up to 100 nodes at once. This value or `maxUnavailable` is required to have a value.",
            "stability": "external",
            "summary": "The maximum percentage of nodes unavailable during a version update."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2873
          },
          "name": "maxUnavailablePercentage",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/eks.generated:CfnNodegroup.UpdateConfigProperty"
    },
    "@aws-cdk/aws-eks-legacy.CfnNodegroupProps": {
      "assembly": "@aws-cdk/aws-eks-legacy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnNodegroup`."
      },
      "fqn": "@aws-cdk/aws-eks-legacy.CfnNodegroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/eks.generated.ts",
        "line": 2017
      },
      "name": "CfnNodegroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-clustername"
            },
            "stability": "external",
            "summary": "The name of the cluster to create the node group in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2024
          },
          "name": "clusterName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-noderole"
            },
            "remarks": "The Amazon EKS worker node `kubelet` daemon makes calls to AWS APIs on your behalf. Nodes receive permissions for these API calls through an IAM instance profile and associated policies. Before you can launch nodes and register them into a cluster, you must create an IAM role for those nodes to use when they are launched. For more information, see [Amazon EKS node IAM role](https://docs.aws.amazon.com/eks/latest/userguide/create-node-role.html) in the **Amazon EKS User Guide** . If you specify `launchTemplate` , then don't specify [`IamInstanceProfile`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_IamInstanceProfile.html) in your launch template, or the node group deployment will fail. For more information about using launch templates with Amazon EKS, see [Launch template support](https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html) in the *Amazon EKS User Guide* .",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the IAM role to associate with your node group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2031
          },
          "name": "nodeRole",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-subnets"
            },
            "remarks": "If you specify `launchTemplate` , then don't specify [`SubnetId`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInterface.html) in your launch template, or the node group deployment will fail. For more information about using launch templates with Amazon EKS, see [Launch template support](https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html) in the *Amazon EKS User Guide* .",
            "stability": "external",
            "summary": "The subnets to use for the Auto Scaling group that is created for your node group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2038
          },
          "name": "subnets",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-amitype"
            },
            "remarks": "GPU instance types should use the `AL2_x86_64_GPU` AMI type. Non-GPU instances should use the `AL2_x86_64` AMI type. Arm instances should use the `AL2_ARM_64` AMI type. All types use the Amazon EKS optimized Amazon Linux 2 AMI. If you specify `launchTemplate` , and your launch template uses a custom AMI, then don't specify `amiType` , or the node group deployment will fail. For more information about using launch templates with Amazon EKS, see [Launch template support](https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html) in the *Amazon EKS User Guide* .",
            "stability": "external",
            "summary": "The AMI type for your node group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2045
          },
          "name": "amiType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-capacitytype"
            },
            "stability": "external",
            "summary": "The capacity type of your managed node group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2052
          },
          "name": "capacityType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-disksize"
            },
            "remarks": "The default disk size is 20 GiB. If you specify `launchTemplate` , then don't specify `diskSize` , or the node group deployment will fail. For more information about using launch templates with Amazon EKS, see [Launch template support](https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html) in the *Amazon EKS User Guide* .",
            "stability": "external",
            "summary": "The root device disk size (in GiB) for your node group instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2059
          },
          "name": "diskSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-forceupdateenabled"
            },
            "remarks": "If an update fails because pods could not be drained, you can force the update after it fails to terminate the old node whether or not any pods are running on the node.",
            "stability": "external",
            "summary": "Force the update if the existing node group's pods are unable to be drained due to a pod disruption budget issue."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2066
          },
          "name": "forceUpdateEnabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes"
            },
            "remarks": "If you specify a GPU instance type, be sure to specify `AL2_x86_64_GPU` with the `amiType` parameter. If you specify `launchTemplate` , then you can specify zero or one instance type in your launch template *or* you can specify 0-20 instance types for `instanceTypes` . If however, you specify an instance type in your launch template *and* specify any `instanceTypes` , the node group deployment will fail. If you don't specify an instance type in a launch template or for `instanceTypes` , then `t3.medium` is used, by default. If you specify `Spot` for `capacityType` , then we recommend specifying multiple values for `instanceTypes` . For more information, see [Managed node group capacity types](https://docs.aws.amazon.com/eks/latest/userguide/managed-node-groups.html#managed-node-group-capacity-types) and [Launch template support](https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html) in the *Amazon EKS User Guide* .",
            "stability": "external",
            "summary": "Specify the instance types for a node group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2073
          },
          "name": "instanceTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-labels"
            },
            "stability": "external",
            "summary": "The Kubernetes labels to be applied to the nodes in the node group when they are created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2080
          },
          "name": "labels",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-launchtemplate"
            },
            "remarks": "If specified, then do not specify `instanceTypes` , `diskSize` , or `remoteAccess` and make sure that the launch template meets the requirements in `launchTemplateSpecification` .",
            "stability": "external",
            "summary": "An object representing a node group's launch template specification."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2087
          },
          "name": "launchTemplate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-eks-legacy.CfnNodegroup.LaunchTemplateSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-nodegroupname"
            },
            "stability": "external",
            "summary": "The unique name to give your node group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2094
          },
          "name": "nodegroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-releaseversion"
            },
            "remarks": "> Changing this value triggers an update of the node group if one is available. However, only the latest available AMI release version is valid as an input. You cannot roll back to a previous AMI release version.",
            "stability": "external",
            "summary": "The AMI version of the Amazon EKS optimized AMI to use with your node group (for example, `1.14.7- *YYYYMMDD*` ). By default, the latest available AMI version for the node group's current Kubernetes version is used. For more information, see [Amazon EKS optimized Linux AMI Versions](https://docs.aws.amazon.com/eks/latest/userguide/eks-linux-ami-versions.html) in the *Amazon EKS User Guide* ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2103
          },
          "name": "releaseVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-remoteaccess"
            },
            "remarks": "If you specify `launchTemplate` , then don't specify `remoteAccess` , or the node group deployment will fail. For more information about using launch templates with Amazon EKS, see [Launch template support](https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html) in the *Amazon EKS User Guide* .",
            "stability": "external",
            "summary": "The remote access (SSH) configuration to use with your node group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2110
          },
          "name": "remoteAccess",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-eks-legacy.CfnNodegroup.RemoteAccessProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-scalingconfig"
            },
            "stability": "external",
            "summary": "The scaling configuration details for the Auto Scaling group that is created for your node group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2117
          },
          "name": "scalingConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-eks-legacy.CfnNodegroup.ScalingConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-tags"
            },
            "remarks": "Each tag consists of a key and an optional value. You define both. Node group tags do not propagate to any other resources associated with the node group, such as the Amazon EC2 instances or subnets.",
            "stability": "external",
            "summary": "The metadata to apply to the node group to assist with categorization and organization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2124
          },
          "name": "tags",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-taints"
            },
            "remarks": "Effect is one of `No_Schedule` , `Prefer_No_Schedule` , or `No_Execute` . Kubernetes taints can be used together with tolerations to control how workloads are scheduled to your nodes. For more information, see [Node taints on managed node groups](https://docs.aws.amazon.com/eks/latest/userguide/node-taints-managed-node-groups.html) .",
            "stability": "external",
            "summary": "The Kubernetes taints to be applied to the nodes in the node group when they are created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2131
          },
          "name": "taints",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-eks-legacy.CfnNodegroup.TaintProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-updateconfig"
            },
            "stability": "external",
            "summary": "The node group update configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2138
          },
          "name": "updateConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-eks-legacy.CfnNodegroup.UpdateConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-version"
            },
            "remarks": "By default, the Kubernetes version of the cluster is used, and this is the only accepted specified value. If you specify `launchTemplate` , and your launch template uses a custom AMI, then don't specify `version` , or the node group deployment will fail. For more information about using launch templates with Amazon EKS, see [Launch template support](https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html) in the *Amazon EKS User Guide* .",
            "stability": "external",
            "summary": "The Kubernetes version to use for your managed nodes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks.generated.ts",
            "line": 2145
          },
          "name": "version",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/eks.generated:CfnNodegroupProps"
    },
    "@aws-cdk/aws-eks-legacy.Cluster": {
      "assembly": "@aws-cdk/aws-eks-legacy",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::EKS::Cluster"
        },
        "remarks": "This is a fully managed cluster of API Servers (control-plane)\nThe user is still required to create the worker nodes.",
        "stability": "deprecated",
        "summary": "A Cluster represents a managed Kubernetes Service (EKS)."
      },
      "fqn": "@aws-cdk/aws-eks-legacy.Cluster",
      "initializer": {
        "docs": {
          "stability": "deprecated",
          "summary": "Initiates an EKS Cluster with the supplied arguments."
        },
        "locationInModule": {
          "filename": "lib/cluster.ts",
          "line": 335
        },
        "parameters": [
          {
            "docs": {
              "summary": "a Construct, most likely a cdk.Stack created."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "properties in the IClusterProps interface."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-eks-legacy.ClusterProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-eks-legacy.ICluster"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 236
      },
      "methods": [
        {
          "docs": {
            "stability": "deprecated",
            "summary": "Import an existing cluster."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 244
          },
          "name": "fromClusterAttributes",
          "parameters": [
            {
              "docs": {
                "summary": "the construct scope, in most cases 'this'."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "the id or name to import as."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the cluster properties to use for importing information."
              },
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-eks-legacy.ClusterAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-eks-legacy.ICluster"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "The AutoScalingGroup must be running an EKS-optimized AMI containing the\n/etc/eks/bootstrap.sh script. This method will configure Security Groups,\nadd the right policies to the instance role, apply the right tags, and add\nthe required user data to the instance's launch configuration.\n\nSpot instances will be labeled `lifecycle=Ec2Spot` and tainted with `PreferNoSchedule`.\nIf kubectl is enabled, the\n[spot interrupt handler](https://github.com/awslabs/ec2-spot-labs/tree/master/ec2-spot-eks-solution/spot-termination-handler)\ndaemon will be installed on all spot instances to handle\n[EC2 Spot Instance Termination Notices](https://aws.amazon.com/blogs/aws/new-ec2-spot-instance-termination-notices/).\n\nPrefer to use `addCapacity` if possible.",
            "see": "https://docs.aws.amazon.com/eks/latest/userguide/launch-workers.html",
            "stability": "deprecated",
            "summary": "Add compute capacity to this EKS cluster in the form of an AutoScalingGroup."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 496
          },
          "name": "addAutoScalingGroup",
          "parameters": [
            {
              "docs": {
                "summary": "[disable-awslint:ref-via-interface]."
              },
              "name": "autoScalingGroup",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.AutoScalingGroup"
              }
            },
            {
              "docs": {
                "summary": "options for adding auto scaling groups, like customizing the bootstrap script."
              },
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-eks-legacy.AutoScalingGroupOptions"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "The nodes will automatically be configured with the right VPC and AMI\nfor the instance type and Kubernetes version.\n\nSpot instances will be labeled `lifecycle=Ec2Spot` and tainted with `PreferNoSchedule`.\nIf kubectl is enabled, the\n[spot interrupt handler](https://github.com/awslabs/ec2-spot-labs/tree/master/ec2-spot-eks-solution/spot-termination-handler)\ndaemon will be installed on all spot instances to handle\n[EC2 Spot Instance Termination Notices](https://aws.amazon.com/blogs/aws/new-ec2-spot-instance-termination-notices/).",
            "stability": "deprecated",
            "summary": "Add nodes to this EKS cluster."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 455
          },
          "name": "addCapacity",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-eks-legacy.CapacityOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.AutoScalingGroup"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "throws": "If `kubectlEnabled` is `false`"
            },
            "returns": "a `HelmChart` object",
            "stability": "deprecated",
            "summary": "Defines a Helm chart in this cluster."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 598
          },
          "name": "addChart",
          "parameters": [
            {
              "docs": {
                "summary": "logical id of this chart."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "options of this chart."
              },
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-eks-legacy.HelmChartOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-eks-legacy.HelmChart"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "throws": "If `kubectlEnabled` is `false`"
            },
            "remarks": "The manifest will be applied/deleted using kubectl as needed.",
            "returns": "a `KubernetesResource` object.",
            "stability": "deprecated",
            "summary": "Defines a Kubernetes resource in this cluster."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 586
          },
          "name": "addResource",
          "parameters": [
            {
              "docs": {
                "summary": "logical id of this manifest."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "a list of Kubernetes resource specifications."
              },
              "name": "manifest",
              "type": {
                "primitive": "any"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-eks-legacy.KubernetesResource"
            }
          },
          "variadic": true
        }
      ],
      "name": "Cluster",
      "properties": [
        {
          "docs": {
            "stability": "deprecated",
            "summary": "Lazily creates the AwsAuth resource, which manages AWS authentication mapping."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 564
          },
          "name": "awsAuth",
          "type": {
            "fqn": "@aws-cdk/aws-eks-legacy.AwsAuth"
          }
        },
        {
          "docs": {
            "remarks": "For example, `arn:aws:eks:us-west-2:666666666666:cluster/prod`",
            "stability": "deprecated",
            "summary": "The AWS generated ARN for the Cluster resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 263
          },
          "name": "clusterArn",
          "overrides": "@aws-cdk/aws-eks-legacy.ICluster",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "deprecated",
            "summary": "The certificate-authority-data for your cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 277
          },
          "name": "clusterCertificateAuthorityData",
          "overrides": "@aws-cdk/aws-eks-legacy.ICluster",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "This is the URL inside the kubeconfig file to use with kubectl\n\nFor example, `https://5E1D0CEXAMPLEA591B746AFC5AB30262.yl4.us-west-2.eks.amazonaws.com`",
            "stability": "deprecated",
            "summary": "The endpoint URL for the Cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 272
          },
          "name": "clusterEndpoint",
          "overrides": "@aws-cdk/aws-eks-legacy.ICluster",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "deprecated",
            "summary": "The Name of the created EKS Cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 256
          },
          "name": "clusterName",
          "overrides": "@aws-cdk/aws-eks-legacy.ICluster",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "memberof": "Cluster",
              "type": "{ec2.Connections}"
            },
            "stability": "deprecated",
            "summary": "Manages connection rules (Security Group Rules) for the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 285
          },
          "name": "connections",
          "overrides": "@aws-cdk/aws-ec2.IConnectable",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "docs": {
            "stability": "deprecated",
            "summary": "Indicates if `kubectl` related operations can be performed on this cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 295
          },
          "name": "kubectlEnabled",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "deprecated",
            "summary": "IAM role assumed by the EKS Control Plane."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 290
          },
          "name": "role",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "docs": {
            "stability": "deprecated",
            "summary": "The VPC in which this Cluster was created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 251
          },
          "name": "vpc",
          "overrides": "@aws-cdk/aws-eks-legacy.ICluster",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        },
        {
          "docs": {
            "remarks": "This will be `undefined` if the default capacity is set to 0.",
            "stability": "deprecated",
            "summary": "The auto scaling group that hosts the default capacity for this cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 309
          },
          "name": "defaultCapacity",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.AutoScalingGroup"
          }
        }
      ],
      "symbolId": "lib/cluster:Cluster"
    },
    "@aws-cdk/aws-eks-legacy.ClusterAttributes": {
      "assembly": "@aws-cdk/aws-eks-legacy",
      "datatype": true,
      "docs": {
        "stability": "deprecated"
      },
      "fqn": "@aws-cdk/aws-eks-legacy.ClusterAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 57
      },
      "name": "ClusterAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "deprecated",
            "summary": "The unique ARN assigned to the service by AWS in the form of arn:aws:eks:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 72
          },
          "name": "clusterArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "deprecated",
            "summary": "The certificate-authority-data for your cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 82
          },
          "name": "clusterCertificateAuthorityData",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "deprecated",
            "summary": "The API Server endpoint URL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 77
          },
          "name": "clusterEndpoint",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "deprecated",
            "summary": "The physical name of the Cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 66
          },
          "name": "clusterName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "deprecated",
            "summary": "The security groups associated with this cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 87
          },
          "name": "securityGroups",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "deprecated",
            "summary": "The VPC in which this Cluster was created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 61
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        }
      ],
      "symbolId": "lib/cluster:ClusterAttributes"
    },
    "@aws-cdk/aws-eks-legacy.ClusterProps": {
      "assembly": "@aws-cdk/aws-eks-legacy",
      "datatype": true,
      "docs": {
        "stability": "deprecated",
        "summary": "Properties to instantiate the Cluster."
      },
      "fqn": "@aws-cdk/aws-eks-legacy.ClusterProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 93
      },
      "name": "ClusterProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Automatically generated name",
            "stability": "deprecated",
            "summary": "Name for the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 130
          },
          "name": "clusterName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "2",
            "remarks": "Instance type can be configured through `defaultCapacityInstanceType`,\nwhich defaults to `m5.large`.\n\nUse `cluster.addCapacity` to add additional customized capacity. Set this\nto `0` is you wish to avoid the initial capacity allocation.",
            "stability": "deprecated",
            "summary": "Number of instances to allocate as an initial capacity for this cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 192
          },
          "name": "defaultCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "m5.large",
            "remarks": "This will only be taken\ninto account if `defaultCapacity` is > 0.",
            "stability": "deprecated",
            "summary": "The instance type to use for the default capacity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 200
          },
          "name": "defaultCapacityInstance",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InstanceType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true The cluster can be managed by the AWS CDK application.",
            "remarks": "If this is disabled, it will not be possible to use the following\ncapabilities:\n- `addResource`\n- `addRoleMapping`\n- `addUserMapping`\n- `addMastersRole` and `props.mastersRole`\n\nIf this is disabled, the cluster can only be managed by issuing `kubectl`\ncommands from a session that uses the IAM role/user that created the\naccount.\n\n_NOTE_: changing this value will destoy the cluster. This is because a\nmanagable cluster must be created using an AWS CloudFormation custom\nresource which executes with an IAM role owned by the CDK app.",
            "stability": "deprecated",
            "summary": "Allows defining `kubectrl`-related resources on this cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 180
          },
          "name": "kubectlEnabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- By default, it will only possible to update this Kubernetes\n  system by adding resources to this cluster via `addResource` or\n  by defining `KubernetesResource` resources in your AWS CDK app.\n  Use this if you wish to grant cluster administration privileges\n  to another role.",
            "see": "https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings",
            "stability": "deprecated",
            "summary": "An IAM role that will be added to the `system:masters` Kubernetes RBAC group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 158
          },
          "name": "mastersRole",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "deprecated",
            "summary": "Determines whether a CloudFormation output with the name of the cluster will be synthesized."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 208
          },
          "name": "outputClusterName",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "This command will include\nthe cluster name and, if applicable, the ARN of the masters IAM role.",
            "stability": "deprecated",
            "summary": "Determines whether a CloudFormation output with the `aws eks update-kubeconfig` command will be synthesized."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 225
          },
          "name": "outputConfigCommand",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "deprecated",
            "summary": "Determines whether a CloudFormation output with the ARN of the \"masters\" IAM role will be synthesized (if `mastersRole` is specified)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 216
          },
          "name": "outputMastersRoleArn",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A role is automatically created for you",
            "stability": "deprecated",
            "summary": "Role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 123
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A security group is automatically created",
            "stability": "deprecated",
            "summary": "Security Group to use for Control Plane ENIs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 137
          },
          "name": "securityGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- If not supplied, will use Amazon default version",
            "stability": "deprecated",
            "summary": "The Kubernetes version to run in the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 144
          },
          "name": "version",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a VPC with default configuration will be created and can be accessed through `cluster.vpc`.",
            "stability": "deprecated",
            "summary": "The VPC in which to create the Cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 99
          },
          "name": "vpc",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- All public and private subnets",
            "remarks": "If you want to create public load balancers, this must include public subnets.\n\nFor example, to only select private subnets, supply the following:\n\n```ts\nconst vpcSubnets = [\n   { subnetType: ec2.SubnetType.PRIVATE_WITH_NAT }\n]\n```",
            "stability": "deprecated",
            "summary": "Where to place EKS Control Plane ENIs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 116
          },
          "name": "vpcSubnets",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/cluster:ClusterProps"
    },
    "@aws-cdk/aws-eks-legacy.EksOptimizedImage": {
      "assembly": "@aws-cdk/aws-eks-legacy",
      "docs": {
        "stability": "deprecated",
        "summary": "Construct an Amazon Linux 2 image from the latest EKS Optimized AMI published in SSM."
      },
      "fqn": "@aws-cdk/aws-eks-legacy.EksOptimizedImage",
      "initializer": {
        "docs": {
          "stability": "deprecated",
          "summary": "Constructs a new instance of the EcsOptimizedAmi class."
        },
        "locationInModule": {
          "filename": "lib/cluster.ts",
          "line": 832
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-eks-legacy.EksOptimizedImageProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IMachineImage"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 823
      },
      "methods": [
        {
          "docs": {
            "stability": "deprecated",
            "summary": "Return the correct image."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 846
          },
          "name": "getImage",
          "overrides": "@aws-cdk/aws-ec2.IMachineImage",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.MachineImageConfig"
            }
          }
        }
      ],
      "name": "EksOptimizedImage",
      "symbolId": "lib/cluster:EksOptimizedImage"
    },
    "@aws-cdk/aws-eks-legacy.EksOptimizedImageProps": {
      "assembly": "@aws-cdk/aws-eks-legacy",
      "datatype": true,
      "docs": {
        "stability": "deprecated",
        "summary": "Properties for EksOptimizedImage."
      },
      "fqn": "@aws-cdk/aws-eks-legacy.EksOptimizedImageProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 804
      },
      "name": "EksOptimizedImageProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- The latest version",
            "stability": "deprecated",
            "summary": "The Kubernetes version to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 817
          },
          "name": "kubernetesVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "NodeType.STANDARD",
            "stability": "deprecated",
            "summary": "What instance type to retrieve the image for (standard or GPU-optimized)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 810
          },
          "name": "nodeType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-eks-legacy.NodeType"
          }
        }
      ],
      "symbolId": "lib/cluster:EksOptimizedImageProps"
    },
    "@aws-cdk/aws-eks-legacy.HelmChart": {
      "assembly": "@aws-cdk/aws-eks-legacy",
      "base": "constructs.Construct",
      "docs": {
        "remarks": "Applies/deletes the resources using `kubectl` in sync with the resource.",
        "stability": "deprecated",
        "summary": "Represents a helm chart within the Kubernetes system."
      },
      "fqn": "@aws-cdk/aws-eks-legacy.HelmChart",
      "initializer": {
        "docs": {
          "stability": "deprecated"
        },
        "locationInModule": {
          "filename": "lib/helm-chart.ts",
          "line": 72
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-eks-legacy.HelmChartProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/helm-chart.ts",
        "line": 66
      },
      "name": "HelmChart",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "deprecated",
            "summary": "The CloudFormation reosurce type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/helm-chart.ts",
            "line": 70
          },
          "name": "RESOURCE_TYPE",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/helm-chart:HelmChart"
    },
    "@aws-cdk/aws-eks-legacy.HelmChartOptions": {
      "assembly": "@aws-cdk/aws-eks-legacy",
      "datatype": true,
      "docs": {
        "stability": "deprecated",
        "summary": "Helm Chart options."
      },
      "fqn": "@aws-cdk/aws-eks-legacy.HelmChartOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/helm-chart.ts",
        "line": 12
      },
      "name": "HelmChartOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "deprecated",
            "summary": "The name of the chart."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/helm-chart.ts",
            "line": 16
          },
          "name": "chart",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "default",
            "stability": "deprecated",
            "summary": "The Kubernetes namespace scope of the requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/helm-chart.ts",
            "line": 40
          },
          "name": "namespace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- If no release name is given, it will use the last 63 characters of the node's unique id.",
            "stability": "deprecated",
            "summary": "The name of the release."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/helm-chart.ts",
            "line": 22
          },
          "name": "release",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No repository will be used, which means that the chart needs to be an absolute URL.",
            "remarks": "For example: https://kubernetes-charts.storage.googleapis.com/",
            "stability": "deprecated",
            "summary": "The repository which contains the chart."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/helm-chart.ts",
            "line": 34
          },
          "name": "repository",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No values are provided to the chart.",
            "stability": "deprecated",
            "summary": "The values to be used by the chart."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/helm-chart.ts",
            "line": 46
          },
          "name": "values",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- If this is not specified, the latest version is installed",
            "stability": "deprecated",
            "summary": "The chart version to install."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/helm-chart.ts",
            "line": 28
          },
          "name": "version",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/helm-chart:HelmChartOptions"
    },
    "@aws-cdk/aws-eks-legacy.HelmChartProps": {
      "assembly": "@aws-cdk/aws-eks-legacy",
      "datatype": true,
      "docs": {
        "stability": "deprecated",
        "summary": "Helm Chart properties."
      },
      "fqn": "@aws-cdk/aws-eks-legacy.HelmChartProps",
      "interfaces": [
        "@aws-cdk/aws-eks-legacy.HelmChartOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/helm-chart.ts",
        "line": 52
      },
      "name": "HelmChartProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "[disable-awslint:ref-via-interface]",
            "stability": "deprecated",
            "summary": "The EKS cluster to apply this configuration to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/helm-chart.ts",
            "line": 58
          },
          "name": "cluster",
          "type": {
            "fqn": "@aws-cdk/aws-eks-legacy.Cluster"
          }
        }
      ],
      "symbolId": "lib/helm-chart:HelmChartProps"
    },
    "@aws-cdk/aws-eks-legacy.ICluster": {
      "assembly": "@aws-cdk/aws-eks-legacy",
      "docs": {
        "stability": "deprecated",
        "summary": "An EKS cluster."
      },
      "fqn": "@aws-cdk/aws-eks-legacy.ICluster",
      "interfaces": [
        "@aws-cdk/core.IResource",
        "@aws-cdk/aws-ec2.IConnectable"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 25
      },
      "name": "ICluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "deprecated",
            "summary": "The unique ARN assigned to the service by AWS in the form of arn:aws:eks:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 42
          },
          "name": "clusterArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "deprecated",
            "summary": "The certificate-authority-data for your cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 54
          },
          "name": "clusterCertificateAuthorityData",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "deprecated",
            "summary": "The API Server endpoint URL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 48
          },
          "name": "clusterEndpoint",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "deprecated",
            "summary": "The physical name of the Cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 35
          },
          "name": "clusterName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "deprecated",
            "summary": "The VPC in which this Cluster was created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 29
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        }
      ],
      "symbolId": "lib/cluster:ICluster"
    },
    "@aws-cdk/aws-eks-legacy.KubernetesResource": {
      "assembly": "@aws-cdk/aws-eks-legacy",
      "base": "constructs.Construct",
      "docs": {
        "remarks": "Alternatively, you can use `cluster.addResource(resource[, resource, ...])`\nto define resources on this cluster.\n\nApplies/deletes the resources using `kubectl` in sync with the resource.",
        "stability": "deprecated",
        "summary": "Represents a resource within the Kubernetes system."
      },
      "fqn": "@aws-cdk/aws-eks-legacy.KubernetesResource",
      "initializer": {
        "docs": {
          "stability": "deprecated"
        },
        "locationInModule": {
          "filename": "lib/k8s-resource.ts",
          "line": 50
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-eks-legacy.KubernetesResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/k8s-resource.ts",
        "line": 44
      },
      "name": "KubernetesResource",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "deprecated",
            "summary": "The CloudFormation reosurce type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/k8s-resource.ts",
            "line": 48
          },
          "name": "RESOURCE_TYPE",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/k8s-resource:KubernetesResource"
    },
    "@aws-cdk/aws-eks-legacy.KubernetesResourceProps": {
      "assembly": "@aws-cdk/aws-eks-legacy",
      "datatype": true,
      "docs": {
        "stability": "deprecated"
      },
      "fqn": "@aws-cdk/aws-eks-legacy.KubernetesResourceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/k8s-resource.ts",
        "line": 5
      },
      "name": "KubernetesResourceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "[disable-awslint:ref-via-interface]",
            "stability": "deprecated",
            "summary": "The EKS cluster to apply this configuration to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/k8s-resource.ts",
            "line": 11
          },
          "name": "cluster",
          "type": {
            "fqn": "@aws-cdk/aws-eks-legacy.Cluster"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Consists of any number of child resources.\n\nWhen the resource is created/updated, this manifest will be applied to the\ncluster through `kubectl apply` and when the resource or the stack is\ndeleted, the manifest will be deleted through `kubectl delete`.\n\n```\nconst manifest = {\n   apiVersion: 'v1',\n   kind: 'Pod',\n   metadata: { name: 'mypod' },\n   spec: {\n     containers: [ { name: 'hello', image: 'paulbouwer/hello-kubernetes:1.5', ports: [ { containerPort: 8080 } ] } ]\n   }\n}\n```",
            "stability": "deprecated",
            "summary": "The resource manifest."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/k8s-resource.ts",
            "line": 33
          },
          "name": "manifest",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/k8s-resource:KubernetesResourceProps"
    },
    "@aws-cdk/aws-eks-legacy.Mapping": {
      "assembly": "@aws-cdk/aws-eks-legacy",
      "datatype": true,
      "docs": {
        "stability": "deprecated"
      },
      "fqn": "@aws-cdk/aws-eks-legacy.Mapping",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/aws-auth-mapping.ts",
        "line": 1
      },
      "name": "Mapping",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings",
            "stability": "deprecated",
            "summary": "A list of groups within Kubernetes to which the role is mapped."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aws-auth-mapping.ts",
            "line": 14
          },
          "name": "groups",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- By default, the user name is the ARN of the IAM role.",
            "stability": "deprecated",
            "summary": "The user name within Kubernetes to map to the IAM role."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aws-auth-mapping.ts",
            "line": 7
          },
          "name": "username",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/aws-auth-mapping:Mapping"
    },
    "@aws-cdk/aws-eks-legacy.NodeType": {
      "assembly": "@aws-cdk/aws-eks-legacy",
      "docs": {
        "stability": "deprecated",
        "summary": "Whether the worker nodes should support GPU or just standard instances."
      },
      "fqn": "@aws-cdk/aws-eks-legacy.NodeType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 862
      },
      "members": [
        {
          "docs": {
            "stability": "deprecated",
            "summary": "Standard instances."
          },
          "name": "STANDARD"
        },
        {
          "docs": {
            "stability": "deprecated",
            "summary": "GPU instances."
          },
          "name": "GPU"
        }
      ],
      "name": "NodeType",
      "symbolId": "lib/cluster:NodeType"
    }
  },
  "version": "0.0.0",
  "fingerprint": "5mARhQS1UwqpxQFJ8k85zPScGadiWWhWQtTTKq/ZY5Y="
}
