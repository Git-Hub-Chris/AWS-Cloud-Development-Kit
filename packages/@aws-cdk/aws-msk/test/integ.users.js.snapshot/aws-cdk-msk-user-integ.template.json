{
 "Resources": {
  "VPCB9E5F0B4": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-msk-user-integ/VPC"
     }
    ]
   }
  },
  "VPCPublicSubnet1SubnetB4246D30": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "aws-cdk-msk-user-integ/VPC/PublicSubnet1"
     }
    ]
   }
  },
  "VPCPublicSubnet1RouteTableFEE4B781": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-msk-user-integ/VPC/PublicSubnet1"
     }
    ]
   }
  },
  "VPCPublicSubnet1RouteTableAssociation0B0896DC": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
    },
    "SubnetId": {
     "Ref": "VPCPublicSubnet1SubnetB4246D30"
    }
   }
  },
  "VPCPublicSubnet1DefaultRoute91CEF279": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VPCIGWB7E252D3"
    }
   },
   "DependsOn": [
    "VPCVPCGW99B986DC"
   ]
  },
  "VPCPublicSubnet1EIP6AD938E8": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-msk-user-integ/VPC/PublicSubnet1"
     }
    ]
   }
  },
  "VPCPublicSubnet1NATGatewayE0556630": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "SubnetId": {
     "Ref": "VPCPublicSubnet1SubnetB4246D30"
    },
    "AllocationId": {
     "Fn::GetAtt": [
      "VPCPublicSubnet1EIP6AD938E8",
      "AllocationId"
     ]
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-msk-user-integ/VPC/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "VPCPublicSubnet1DefaultRoute91CEF279",
    "VPCPublicSubnet1RouteTableAssociation0B0896DC"
   ]
  },
  "VPCPublicSubnet2Subnet74179F39": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.64.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "aws-cdk-msk-user-integ/VPC/PublicSubnet2"
     }
    ]
   }
  },
  "VPCPublicSubnet2RouteTable6F1A15F1": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-msk-user-integ/VPC/PublicSubnet2"
     }
    ]
   }
  },
  "VPCPublicSubnet2RouteTableAssociation5A808732": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPublicSubnet2RouteTable6F1A15F1"
    },
    "SubnetId": {
     "Ref": "VPCPublicSubnet2Subnet74179F39"
    }
   }
  },
  "VPCPublicSubnet2DefaultRouteB7481BBA": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPublicSubnet2RouteTable6F1A15F1"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VPCIGWB7E252D3"
    }
   },
   "DependsOn": [
    "VPCVPCGW99B986DC"
   ]
  },
  "VPCPublicSubnet2EIP4947BC00": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-msk-user-integ/VPC/PublicSubnet2"
     }
    ]
   }
  },
  "VPCPublicSubnet2NATGateway3C070193": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "SubnetId": {
     "Ref": "VPCPublicSubnet2Subnet74179F39"
    },
    "AllocationId": {
     "Fn::GetAtt": [
      "VPCPublicSubnet2EIP4947BC00",
      "AllocationId"
     ]
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-msk-user-integ/VPC/PublicSubnet2"
     }
    ]
   },
   "DependsOn": [
    "VPCPublicSubnet2DefaultRouteB7481BBA",
    "VPCPublicSubnet2RouteTableAssociation5A808732"
   ]
  },
  "VPCPrivateSubnet1Subnet8BCA10E0": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.128.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "aws-cdk-msk-user-integ/VPC/PrivateSubnet1"
     }
    ]
   }
  },
  "VPCPrivateSubnet1RouteTableBE8A6027": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-msk-user-integ/VPC/PrivateSubnet1"
     }
    ]
   }
  },
  "VPCPrivateSubnet1RouteTableAssociation347902D1": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPrivateSubnet1RouteTableBE8A6027"
    },
    "SubnetId": {
     "Ref": "VPCPrivateSubnet1Subnet8BCA10E0"
    }
   }
  },
  "VPCPrivateSubnet1DefaultRouteAE1D6490": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPrivateSubnet1RouteTableBE8A6027"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VPCPublicSubnet1NATGatewayE0556630"
    }
   }
  },
  "VPCPrivateSubnet2SubnetCFCDAA7A": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.192.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "aws-cdk-msk-user-integ/VPC/PrivateSubnet2"
     }
    ]
   }
  },
  "VPCPrivateSubnet2RouteTable0A19E10E": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-msk-user-integ/VPC/PrivateSubnet2"
     }
    ]
   }
  },
  "VPCPrivateSubnet2RouteTableAssociation0C73D413": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPrivateSubnet2RouteTable0A19E10E"
    },
    "SubnetId": {
     "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A"
    }
   }
  },
  "VPCPrivateSubnet2DefaultRouteF4F5CFD2": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPrivateSubnet2RouteTable0A19E10E"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VPCPublicSubnet2NATGateway3C070193"
    }
   }
  },
  "VPCIGWB7E252D3": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-msk-user-integ/VPC"
     }
    ]
   }
  },
  "VPCVPCGW99B986DC": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    },
    "InternetGatewayId": {
     "Ref": "VPCIGWB7E252D3"
    }
   }
  },
  "ClusterSecurityGroup0921994B": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "MSK security group",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "ClusterSASLKeyC4AE65F3": {
   "Type": "AWS::KMS::Key",
   "Properties": {
    "KeyPolicy": {
     "Statement": [
      {
       "Action": "kms:*",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::",
           {
            "Ref": "AWS::AccountId"
           },
           ":root"
          ]
         ]
        }
       },
       "Resource": "*"
      },
      {
       "Action": [
        "kms:CreateGrant",
        "kms:Decrypt",
        "kms:DescribeKey",
        "kms:Encrypt",
        "kms:GenerateDataKey*",
        "kms:ReEncrypt*"
       ],
       "Condition": {
        "StringEquals": {
         "kms:ViaService": {
          "Fn::Join": [
           "",
           [
            "secretsmanager.",
            {
             "Ref": "AWS::Region"
            },
            ".amazonaws.com"
           ]
          ]
         },
         "kms:CallerAccount": {
          "Ref": "AWS::AccountId"
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "AWS": "*"
       },
       "Resource": "*",
       "Sid": "Allow access through AWS Secrets Manager for all principals in the account that are authorized to use AWS Secrets Manager"
      },
      {
       "Action": [
        "kms:CreateGrant",
        "kms:Decrypt",
        "kms:DescribeKey",
        "kms:Encrypt",
        "kms:GenerateDataKey*",
        "kms:ReEncrypt*"
       ],
       "Condition": {
        "StringEquals": {
         "kms:ViaService": {
          "Fn::Join": [
           "",
           [
            "secretsmanager.",
            {
             "Ref": "AWS::Region"
            },
            ".amazonaws.com"
           ]
          ]
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::",
           {
            "Ref": "AWS::AccountId"
           },
           ":root"
          ]
         ]
        }
       },
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Used for encrypting MSK secrets for SASL/SCRAM authentication."
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "ClusterSASLKeyAliasCBD2665F": {
   "Type": "AWS::KMS::Alias",
   "Properties": {
    "AliasName": "alias/msk/integ-test-users/sasl/scram",
    "TargetKeyId": {
     "Fn::GetAtt": [
      "ClusterSASLKeyC4AE65F3",
      "Arn"
     ]
    }
   }
  },
  "ClusterEB0386A7": {
   "Type": "AWS::MSK::Cluster",
   "Properties": {
    "BrokerNodeGroupInfo": {
     "ClientSubnets": [
      {
       "Ref": "VPCPrivateSubnet1Subnet8BCA10E0"
      },
      {
       "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A"
      }
     ],
     "InstanceType": "kafka.m5.large",
     "SecurityGroups": [
      {
       "Fn::GetAtt": [
        "ClusterSecurityGroup0921994B",
        "GroupId"
       ]
      }
     ],
     "StorageInfo": {
      "EBSStorageInfo": {
       "VolumeSize": 1000
      }
     }
    },
    "ClusterName": "integ-test-users",
    "KafkaVersion": "2.8.1",
    "NumberOfBrokerNodes": 2,
    "ClientAuthentication": {
     "Sasl": {
      "Scram": {
       "Enabled": true
      }
     }
    },
    "EncryptionInfo": {
     "EncryptionInTransit": {
      "ClientBroker": "TLS",
      "InCluster": true
     }
    },
    "LoggingInfo": {
     "BrokerLogs": {
      "CloudWatchLogs": {
       "Enabled": false
      },
      "Firehose": {
       "Enabled": false
      },
      "S3": {
       "Enabled": false
      }
     }
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "ClusterKafkaUsertestuser1955B82EE": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "GenerateSecretString": {
     "ExcludeCharacters": "\"/\\",
     "GenerateStringKey": "password",
     "SecretStringTemplate": "{\"username\":\"test-user1\"}"
    },
    "KmsKeyId": {
     "Fn::GetAtt": [
      "ClusterSASLKeyC4AE65F3",
      "Arn"
     ]
    },
    "Name": {
     "Fn::Join": [
      "",
      [
       "AmazonMSK_",
       {
        "Fn::Select": [
         1,
         {
          "Fn::Split": [
           "/",
           {
            "Ref": "ClusterEB0386A7"
           }
          ]
         }
        ]
       },
       "_test-user1"
      ]
     ]
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "ClusterKafkaUsertestuser2485F15AD": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "GenerateSecretString": {
     "ExcludeCharacters": "\"/\\",
     "GenerateStringKey": "password",
     "SecretStringTemplate": "{\"username\":\"test-user-2\"}"
    },
    "KmsKeyId": {
     "Fn::GetAtt": [
      "ClusterSASLKeyC4AE65F3",
      "Arn"
     ]
    },
    "Name": {
     "Fn::Join": [
      "",
      [
       "AmazonMSK_",
       {
        "Fn::Select": [
         1,
         {
          "Fn::Split": [
           "/",
           {
            "Ref": "ClusterEB0386A7"
           }
          ]
         }
        ]
       },
       "_test-user-2"
      ]
     ]
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "ClusterBatchAssociateScramSecretsc8539b6d9cf9eda9702ac027d207e81871a3eef69f4C0C9461": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"service\":\"Kafka\",\"action\":\"batchAssociateScramSecret\",\"parameters\":{\"ClusterArn\":\"",
       {
        "Ref": "ClusterEB0386A7"
       },
       "\",\"SecretArnList\":[\"",
       {
        "Ref": "ClusterKafkaUsertestuser1955B82EE"
       },
       "\",\"",
       {
        "Ref": "ClusterKafkaUsertestuser2485F15AD"
       },
       "\"]},\"physicalResourceId\":{\"id\":\"CreateUsers\"}}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"service\":\"Kafka\",\"action\":\"batchAssociateScramSecret\",\"parameters\":{\"ClusterArn\":\"",
       {
        "Ref": "ClusterEB0386A7"
       },
       "\",\"SecretArnList\":[\"",
       {
        "Ref": "ClusterKafkaUsertestuser1955B82EE"
       },
       "\",\"",
       {
        "Ref": "ClusterKafkaUsertestuser2485F15AD"
       },
       "\"]},\"physicalResourceId\":{\"id\":\"CreateUsers\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": true
   },
   "DependsOn": [
    "ClusterBatchAssociateScramSecretsc8539b6d9cf9eda9702ac027d207e81871a3eef69fCustomResourcePolicyD75F0434"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "ClusterBatchAssociateScramSecretsc8539b6d9cf9eda9702ac027d207e81871a3eef69fCustomResourcePolicyD75F0434": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "kms:CreateGrant",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "ClusterSASLKeyC4AE65F3",
         "Arn"
        ]
       }
      },
      {
       "Action": "kafka:BatchAssociateScramSecret",
       "Effect": "Allow",
       "Resource": {
        "Ref": "ClusterEB0386A7"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ClusterBatchAssociateScramSecretsc8539b6d9cf9eda9702ac027d207e81871a3eef69fCustomResourcePolicyD75F0434",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   }
  },
  "ClusterBootstrapBrokersBootstrapBrokerStringSaslScramE29F087C": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"service\":\"Kafka\",\"action\":\"getBootstrapBrokers\",\"parameters\":{\"ClusterArn\":\"",
       {
        "Ref": "ClusterEB0386A7"
       },
       "\"},\"physicalResourceId\":{\"id\":\"BootstrapBrokers\"}}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"service\":\"Kafka\",\"action\":\"getBootstrapBrokers\",\"parameters\":{\"ClusterArn\":\"",
       {
        "Ref": "ClusterEB0386A7"
       },
       "\"},\"physicalResourceId\":{\"id\":\"BootstrapBrokers\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": true
   },
   "DependsOn": [
    "ClusterBootstrapBrokersBootstrapBrokerStringSaslScramCustomResourcePolicy3A706D30"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "ClusterBootstrapBrokersBootstrapBrokerStringSaslScramCustomResourcePolicy3A706D30": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "kafka:GetBootstrapBrokers",
       "Effect": "Allow",
       "Resource": {
        "Ref": "ClusterEB0386A7"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ClusterBootstrapBrokersBootstrapBrokerStringSaslScramCustomResourcePolicy3A706D30",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   }
  },
  "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "AWS679f53fac002430cb0da5b7982bd22872D164C4C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "a268caa53756f51bda8ad5f499be4ed8484a81b314811806fbb66f874837c476.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
      "Arn"
     ]
    },
    "Handler": "index.handler",
    "Runtime": "nodejs14.x",
    "Timeout": 120
   },
   "DependsOn": [
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
   ]
  }
 },
 "Outputs": {
  "BootstrapBrokers": {
   "Value": {
    "Fn::GetAtt": [
     "ClusterBootstrapBrokersBootstrapBrokerStringSaslScramE29F087C",
     "BootstrapBrokerStringSaslScram"
    ]
   }
  },
  "User1SecretName": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "AmazonMSK_",
      {
       "Fn::Select": [
        1,
        {
         "Fn::Split": [
          "/",
          {
           "Ref": "ClusterEB0386A7"
          }
         ]
        }
       ]
      },
      "_test-user1"
     ]
    ]
   }
  },
  "User2SecretName": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "AmazonMSK_",
      {
       "Fn::Select": [
        1,
        {
         "Fn::Split": [
          "/",
          {
           "Ref": "ClusterEB0386A7"
          }
         ]
        }
       ]
      },
      "_test-user-2"
     ]
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}