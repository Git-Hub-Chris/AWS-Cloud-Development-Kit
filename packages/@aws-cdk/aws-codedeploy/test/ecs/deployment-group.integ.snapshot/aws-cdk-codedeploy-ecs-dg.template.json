{
 "Resources": {
  "VPCB9E5F0B4": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-codedeploy-ecs-dg/VPC"
     }
    ]
   }
  },
  "VPCPublicSubnet1SubnetB4246D30": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "aws-cdk-codedeploy-ecs-dg/VPC/PublicSubnet1"
     }
    ]
   }
  },
  "VPCPublicSubnet1RouteTableFEE4B781": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-codedeploy-ecs-dg/VPC/PublicSubnet1"
     }
    ]
   }
  },
  "VPCPublicSubnet1RouteTableAssociation0B0896DC": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
    },
    "SubnetId": {
     "Ref": "VPCPublicSubnet1SubnetB4246D30"
    }
   }
  },
  "VPCPublicSubnet1DefaultRoute91CEF279": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VPCIGWB7E252D3"
    }
   },
   "DependsOn": [
    "VPCVPCGW99B986DC"
   ]
  },
  "VPCPublicSubnet1EIP6AD938E8": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-codedeploy-ecs-dg/VPC/PublicSubnet1"
     }
    ]
   }
  },
  "VPCPublicSubnet1NATGatewayE0556630": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "SubnetId": {
     "Ref": "VPCPublicSubnet1SubnetB4246D30"
    },
    "AllocationId": {
     "Fn::GetAtt": [
      "VPCPublicSubnet1EIP6AD938E8",
      "AllocationId"
     ]
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-codedeploy-ecs-dg/VPC/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "VPCPublicSubnet1DefaultRoute91CEF279",
    "VPCPublicSubnet1RouteTableAssociation0B0896DC"
   ]
  },
  "VPCPublicSubnet2Subnet74179F39": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.64.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "aws-cdk-codedeploy-ecs-dg/VPC/PublicSubnet2"
     }
    ]
   }
  },
  "VPCPublicSubnet2RouteTable6F1A15F1": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-codedeploy-ecs-dg/VPC/PublicSubnet2"
     }
    ]
   }
  },
  "VPCPublicSubnet2RouteTableAssociation5A808732": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPublicSubnet2RouteTable6F1A15F1"
    },
    "SubnetId": {
     "Ref": "VPCPublicSubnet2Subnet74179F39"
    }
   }
  },
  "VPCPublicSubnet2DefaultRouteB7481BBA": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPublicSubnet2RouteTable6F1A15F1"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VPCIGWB7E252D3"
    }
   },
   "DependsOn": [
    "VPCVPCGW99B986DC"
   ]
  },
  "VPCPublicSubnet2EIP4947BC00": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-codedeploy-ecs-dg/VPC/PublicSubnet2"
     }
    ]
   }
  },
  "VPCPublicSubnet2NATGateway3C070193": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "SubnetId": {
     "Ref": "VPCPublicSubnet2Subnet74179F39"
    },
    "AllocationId": {
     "Fn::GetAtt": [
      "VPCPublicSubnet2EIP4947BC00",
      "AllocationId"
     ]
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-codedeploy-ecs-dg/VPC/PublicSubnet2"
     }
    ]
   },
   "DependsOn": [
    "VPCPublicSubnet2DefaultRouteB7481BBA",
    "VPCPublicSubnet2RouteTableAssociation5A808732"
   ]
  },
  "VPCPrivateSubnet1Subnet8BCA10E0": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.128.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "aws-cdk-codedeploy-ecs-dg/VPC/PrivateSubnet1"
     }
    ]
   }
  },
  "VPCPrivateSubnet1RouteTableBE8A6027": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-codedeploy-ecs-dg/VPC/PrivateSubnet1"
     }
    ]
   }
  },
  "VPCPrivateSubnet1RouteTableAssociation347902D1": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPrivateSubnet1RouteTableBE8A6027"
    },
    "SubnetId": {
     "Ref": "VPCPrivateSubnet1Subnet8BCA10E0"
    }
   }
  },
  "VPCPrivateSubnet1DefaultRouteAE1D6490": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPrivateSubnet1RouteTableBE8A6027"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VPCPublicSubnet1NATGatewayE0556630"
    }
   }
  },
  "VPCPrivateSubnet2SubnetCFCDAA7A": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.192.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "aws-cdk-codedeploy-ecs-dg/VPC/PrivateSubnet2"
     }
    ]
   }
  },
  "VPCPrivateSubnet2RouteTable0A19E10E": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-codedeploy-ecs-dg/VPC/PrivateSubnet2"
     }
    ]
   }
  },
  "VPCPrivateSubnet2RouteTableAssociation0C73D413": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPrivateSubnet2RouteTable0A19E10E"
    },
    "SubnetId": {
     "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A"
    }
   }
  },
  "VPCPrivateSubnet2DefaultRouteF4F5CFD2": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPrivateSubnet2RouteTable0A19E10E"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VPCPublicSubnet2NATGateway3C070193"
    }
   }
  },
  "VPCIGWB7E252D3": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-codedeploy-ecs-dg/VPC"
     }
    ]
   }
  },
  "VPCVPCGW99B986DC": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    },
    "InternetGatewayId": {
     "Ref": "VPCIGWB7E252D3"
    }
   }
  },
  "MyCluster4C1BA579": {
   "Type": "AWS::ECS::Cluster"
  },
  "MyTaskDefTaskRole727F9D3B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "MyTaskDef01F0D39B": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Essential": true,
      "Image": "nginx",
      "Name": "MyContainer",
      "PortMappings": [
       {
        "ContainerPort": 80,
        "Protocol": "tcp"
       }
      ]
     }
    ],
    "Cpu": "256",
    "Family": "awscdkcodedeployecsdgMyTaskDef6F57B141",
    "Memory": "512",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "MyTaskDefTaskRole727F9D3B",
      "Arn"
     ]
    }
   }
  },
  "MyServiceB4132EDA": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "Cluster": {
     "Ref": "MyCluster4C1BA579"
    },
    "DeploymentConfiguration": {
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "DeploymentController": {
     "Type": "CODE_DEPLOY"
    },
    "EnableECSManagedTags": false,
    "HealthCheckGracePeriodSeconds": 60,
    "LaunchType": "FARGATE",
    "LoadBalancers": [
     {
      "ContainerName": "MyContainer",
      "ContainerPort": 80,
      "TargetGroupArn": {
       "Ref": "TargetGroup3D7CD9B8"
      }
     }
    ],
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "MyServiceSecurityGroup6281A313",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Ref": "VPCPrivateSubnet1Subnet8BCA10E0"
       },
       {
        "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A"
       }
      ]
     }
    },
    "TaskDefinition": "awscdkcodedeployecsdgMyTaskDef6F57B141"
   },
   "DependsOn": [
    "ALBListener3B99FF85",
    "MyTaskDef01F0D39B",
    "MyTaskDefTaskRole727F9D3B"
   ]
  },
  "MyServiceSecurityGroup6281A313": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "aws-cdk-codedeploy-ecs-dg/MyService/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "DependsOn": [
    "MyTaskDef01F0D39B",
    "MyTaskDefTaskRole727F9D3B"
   ]
  },
  "MyServiceSecurityGroupfromawscdkcodedeployecsdgALBSecurityGroup48D554A080C46A885A": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "Description": "Load balancer to target",
    "FromPort": 80,
    "GroupId": {
     "Fn::GetAtt": [
      "MyServiceSecurityGroup6281A313",
      "GroupId"
     ]
    },
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "ALBSecurityGroup8B8624F8",
      "GroupId"
     ]
    },
    "ToPort": 80
   },
   "DependsOn": [
    "MyTaskDef01F0D39B",
    "MyTaskDefTaskRole727F9D3B"
   ]
  },
  "TargetGroup3D7CD9B8": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "Port": 80,
    "Protocol": "HTTP",
    "TargetGroupAttributes": [
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "ip",
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "ALBAEE750D2": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Scheme": "internal",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "ALBSecurityGroup8B8624F8",
       "GroupId"
      ]
     }
    ],
    "Subnets": [
     {
      "Ref": "VPCPrivateSubnet1Subnet8BCA10E0"
     },
     {
      "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A"
     }
    ],
    "Type": "application"
   }
  },
  "ALBSecurityGroup8B8624F8": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Automatically created Security Group for ELB awscdkcodedeployecsdgALBEA16F3F1",
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow from anyone on port 80",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "ALBSecurityGrouptoawscdkcodedeployecsdgMyServiceSecurityGroupEE2386E380F23C2EA5": {
   "Type": "AWS::EC2::SecurityGroupEgress",
   "Properties": {
    "GroupId": {
     "Fn::GetAtt": [
      "ALBSecurityGroup8B8624F8",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "Description": "Load balancer to target",
    "DestinationSecurityGroupId": {
     "Fn::GetAtt": [
      "MyServiceSecurityGroup6281A313",
      "GroupId"
     ]
    },
    "FromPort": 80,
    "ToPort": 80
   }
  },
  "ALBListener3B99FF85": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "TargetGroupArn": {
       "Ref": "TargetGroup3D7CD9B8"
      },
      "Type": "forward"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "ALBAEE750D2"
    },
    "Port": 80,
    "Protocol": "HTTP"
   }
  },
  "Alarm1F9009D71": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 2,
    "Dimensions": [
     {
      "Name": "LoadBalancer",
      "Value": {
       "Fn::GetAtt": [
        "ALBAEE750D2",
        "LoadBalancerFullName"
       ]
      }
     }
    ],
    "MetricName": "TargetResponseTime",
    "Namespace": "AWS/ApplicationELB",
    "Period": 300,
    "Statistic": "Average",
    "Threshold": 3
   }
  },
  "CodeDeployGroupApplication13EFBDA6": {
   "Type": "AWS::CodeDeploy::Application",
   "Properties": {
    "ComputePlatform": "ECS"
   }
  },
  "CodeDeployGroupServiceRole50553EBF": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::FindInMap": [
          "ServiceprincipalMap",
          {
           "Ref": "AWS::Region"
          },
          "codedeploy"
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AWSCodeDeployRoleForECS"
       ]
      ]
     }
    ]
   }
  },
  "CodeDeployGroupTestTargetGroup0A6B4870": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "Port": 80,
    "Protocol": "HTTP",
    "TargetGroupAttributes": [
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "ip",
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "CodeDeployGroup58220FC8": {
   "Type": "AWS::CodeDeploy::DeploymentGroup",
   "Properties": {
    "ApplicationName": {
     "Ref": "CodeDeployGroupApplication13EFBDA6"
    },
    "ServiceRoleArn": {
     "Fn::GetAtt": [
      "CodeDeployGroupServiceRole50553EBF",
      "Arn"
     ]
    },
    "AlarmConfiguration": {
     "Alarms": [
      {
       "Name": {
        "Ref": "Alarm1F9009D71"
       }
      }
     ],
     "Enabled": true
    },
    "BlueGreenDeploymentConfiguration": {
     "DeploymentReadyOption": {
      "ActionOnTimeout": "CONTINUE_DEPLOYMENT"
     },
     "TerminateBlueInstancesOnDeploymentSuccess": {
      "Action": "TERMINATE",
      "TerminationWaitTimeInMinutes": 0
     }
    },
    "DeploymentConfigName": "CodeDeployDefault.ECSCanary10Percent5Minutes",
    "DeploymentStyle": {
     "DeploymentOption": "WITH_TRAFFIC_CONTROL",
     "DeploymentType": "BLUE_GREEN"
    },
    "ECSServices": [
     {
      "ClusterName": {
       "Ref": "MyCluster4C1BA579"
      },
      "ServiceName": {
       "Fn::GetAtt": [
        "MyServiceB4132EDA",
        "Name"
       ]
      }
     }
    ],
    "LoadBalancerInfo": {
     "TargetGroupPairInfoList": [
      {
       "ProdTrafficRoute": {
        "ListenerArns": [
         {
          "Ref": "ALBListener3B99FF85"
         }
        ]
       },
       "TargetGroups": [
        {
         "Name": {
          "Fn::GetAtt": [
           "TargetGroup3D7CD9B8",
           "TargetGroupName"
          ]
         }
        },
        {
         "Name": {
          "Fn::Select": [
           2,
           {
            "Fn::Split": [
             "/",
             {
              "Fn::Select": [
               5,
               {
                "Fn::Split": [
                 ":",
                 {
                  "Ref": "CodeDeployGroupTestTargetGroup0A6B4870"
                 }
                ]
               }
              ]
             }
            ]
           }
          ]
         }
        }
       ]
      }
     ]
    }
   }
  }
 },
 "Mappings": {
  "ServiceprincipalMap": {
   "af-south-1": {
    "codedeploy": "codedeploy.af-south-1.amazonaws.com"
   },
   "ap-east-1": {
    "codedeploy": "codedeploy.ap-east-1.amazonaws.com"
   },
   "ap-northeast-1": {
    "codedeploy": "codedeploy.ap-northeast-1.amazonaws.com"
   },
   "ap-northeast-2": {
    "codedeploy": "codedeploy.ap-northeast-2.amazonaws.com"
   },
   "ap-northeast-3": {
    "codedeploy": "codedeploy.ap-northeast-3.amazonaws.com"
   },
   "ap-south-1": {
    "codedeploy": "codedeploy.ap-south-1.amazonaws.com"
   },
   "ap-southeast-1": {
    "codedeploy": "codedeploy.ap-southeast-1.amazonaws.com"
   },
   "ap-southeast-2": {
    "codedeploy": "codedeploy.ap-southeast-2.amazonaws.com"
   },
   "ap-southeast-3": {
    "codedeploy": "codedeploy.ap-southeast-3.amazonaws.com"
   },
   "ca-central-1": {
    "codedeploy": "codedeploy.ca-central-1.amazonaws.com"
   },
   "cn-north-1": {
    "codedeploy": "codedeploy.cn-north-1.amazonaws.com.cn"
   },
   "cn-northwest-1": {
    "codedeploy": "codedeploy.cn-northwest-1.amazonaws.com.cn"
   },
   "eu-central-1": {
    "codedeploy": "codedeploy.eu-central-1.amazonaws.com"
   },
   "eu-north-1": {
    "codedeploy": "codedeploy.eu-north-1.amazonaws.com"
   },
   "eu-south-1": {
    "codedeploy": "codedeploy.eu-south-1.amazonaws.com"
   },
   "eu-south-2": {
    "codedeploy": "codedeploy.eu-south-2.amazonaws.com"
   },
   "eu-west-1": {
    "codedeploy": "codedeploy.eu-west-1.amazonaws.com"
   },
   "eu-west-2": {
    "codedeploy": "codedeploy.eu-west-2.amazonaws.com"
   },
   "eu-west-3": {
    "codedeploy": "codedeploy.eu-west-3.amazonaws.com"
   },
   "me-south-1": {
    "codedeploy": "codedeploy.me-south-1.amazonaws.com"
   },
   "sa-east-1": {
    "codedeploy": "codedeploy.sa-east-1.amazonaws.com"
   },
   "us-east-1": {
    "codedeploy": "codedeploy.us-east-1.amazonaws.com"
   },
   "us-east-2": {
    "codedeploy": "codedeploy.us-east-2.amazonaws.com"
   },
   "us-gov-east-1": {
    "codedeploy": "codedeploy.us-gov-east-1.amazonaws.com"
   },
   "us-gov-west-1": {
    "codedeploy": "codedeploy.us-gov-west-1.amazonaws.com"
   },
   "us-iso-east-1": {
    "codedeploy": "codedeploy.amazonaws.com"
   },
   "us-iso-west-1": {
    "codedeploy": "codedeploy.amazonaws.com"
   },
   "us-isob-east-1": {
    "codedeploy": "codedeploy.amazonaws.com"
   },
   "us-west-1": {
    "codedeploy": "codedeploy.us-west-1.amazonaws.com"
   },
   "us-west-2": {
    "codedeploy": "codedeploy.us-west-2.amazonaws.com"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}