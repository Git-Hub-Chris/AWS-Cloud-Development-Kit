"use strict";
const assert_1 = require("@aws-cdk/assert");
const aws_dynamodb_1 = require("@aws-cdk/aws-dynamodb");
const cdk_1 = require("@aws-cdk/cdk");
const ddb = require("@aws-cdk/aws-dynamodb");
// tslint:disable:object-literal-key-quotes
// CDK parameters
// const CONSTRUCT_NAME = 'aws-cdk-dynamodb-global';
// DynamoDB table parameters
const TABLE_NAME = 'GlobalTable';
const TABLE_PARTITION_KEY = { name: 'hashKey', type: aws_dynamodb_1.AttributeType.String };
const STACK_PROPS = {
    dynamoProps: {
        partitionKey: TABLE_PARTITION_KEY,
        tableName: TABLE_NAME
    },
    regions: ["us-east-1", "us-east-2", "us-west-2"]
};
module.exports = {
    'default stack': {
        'default'(test) {
            const app = new cdk_1.App();
            const stack = new cdk_1.Stack(app, 'Stack');
            // new GlobalTable(stack, CONSTRUCT_NAME, STACK_PROPS);
            new ddb.Table(stack, 'xxx', {
                partitionKey: { name: 'asdf', type: ddb.AttributeType.String },
            });
            console.log(stack._toCloudFormation());
            assert_1.expect(stack).to(assert_1.haveResource('AWS::Lambda::Function', {
                "Regions": STACK_PROPS.regions
            }));
            test.done();
        }
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVzdC5keW5hbW9kYi5nbG9iYWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ0ZXN0LmR5bmFtb2RiLmdsb2JhbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsNENBQXVEO0FBQ3ZELHdEQUFpRTtBQUNqRSxzQ0FBMEM7QUFPMUMsNkNBQThDO0FBRTlDLDJDQUEyQztBQUUzQyxpQkFBaUI7QUFDakIsb0RBQW9EO0FBRXBELDRCQUE0QjtBQUM1QixNQUFNLFVBQVUsR0FBRyxhQUFhLENBQUM7QUFDakMsTUFBTSxtQkFBbUIsR0FBYyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLDRCQUFhLENBQUMsTUFBTSxFQUFFLENBQUM7QUFFdkYsTUFBTSxXQUFXLEdBQTZCO0lBQzFDLFdBQVcsRUFBRTtRQUNULFlBQVksRUFBRSxtQkFBbUI7UUFDakMsU0FBUyxFQUFFLFVBQVU7S0FDeEI7SUFDRCxPQUFPLEVBQUUsQ0FBRSxXQUFXLEVBQUUsV0FBVyxFQUFFLFdBQVcsQ0FBRTtDQUNyRCxDQUFDO0FBRUYsaUJBQVM7SUFDTCxlQUFlLEVBQUU7UUFDYixTQUFTLENBQUMsSUFBVTtZQUNoQixNQUFNLEdBQUcsR0FBRyxJQUFJLFNBQUcsRUFBRSxDQUFDO1lBQ3RCLE1BQU0sS0FBSyxHQUFHLElBQUksV0FBSyxDQUFDLEdBQUcsRUFBRSxPQUFPLENBQUMsQ0FBQztZQUN0Qyx1REFBdUQ7WUFDdkQsSUFBSSxHQUFHLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUU7Z0JBQ3hCLFlBQVksRUFBRSxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLEdBQUcsQ0FBQyxhQUFhLENBQUMsTUFBTSxFQUFFO2FBQ2pFLENBQUMsQ0FBQztZQUVILE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLGlCQUFpQixFQUFFLENBQUMsQ0FBQztZQUV2QyxlQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLHFCQUFZLENBQUMsdUJBQXVCLEVBQUU7Z0JBQ25ELFNBQVMsRUFBRSxXQUFXLENBQUMsT0FBTzthQUNqQyxDQUFDLENBQUMsQ0FBQztZQUVKLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUNoQixDQUFDO0tBQ0o7Q0FDSixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZXhwZWN0LCBoYXZlUmVzb3VyY2UgfSBmcm9tICdAYXdzLWNkay9hc3NlcnQnO1xuaW1wb3J0IHsgQXR0cmlidXRlLCBBdHRyaWJ1dGVUeXBlIH0gZnJvbSAnQGF3cy1jZGsvYXdzLWR5bmFtb2RiJztcbmltcG9ydCB7IEFwcCwgU3RhY2sgfSBmcm9tICdAYXdzLWNkay9jZGsnO1xuaW1wb3J0IHsgVGVzdCB9IGZyb20gJ25vZGV1bml0JztcbmltcG9ydCB7XG4gICAgRHluYW1vREJHbG9iYWxTdGFja1Byb3BzLFxuLy8gICAgR2xvYmFsVGFibGUsXG59IGZyb20gJy4uL2xpYic7XG5cbmltcG9ydCBkZGIgPSByZXF1aXJlKCdAYXdzLWNkay9hd3MtZHluYW1vZGInKTtcblxuLy8gdHNsaW50OmRpc2FibGU6b2JqZWN0LWxpdGVyYWwta2V5LXF1b3Rlc1xuXG4vLyBDREsgcGFyYW1ldGVyc1xuLy8gY29uc3QgQ09OU1RSVUNUX05BTUUgPSAnYXdzLWNkay1keW5hbW9kYi1nbG9iYWwnO1xuXG4vLyBEeW5hbW9EQiB0YWJsZSBwYXJhbWV0ZXJzXG5jb25zdCBUQUJMRV9OQU1FID0gJ0dsb2JhbFRhYmxlJztcbmNvbnN0IFRBQkxFX1BBUlRJVElPTl9LRVk6IEF0dHJpYnV0ZSA9IHsgbmFtZTogJ2hhc2hLZXknLCB0eXBlOiBBdHRyaWJ1dGVUeXBlLlN0cmluZyB9O1xuXG5jb25zdCBTVEFDS19QUk9QUzogRHluYW1vREJHbG9iYWxTdGFja1Byb3BzID0ge1xuICAgIGR5bmFtb1Byb3BzOiB7XG4gICAgICAgIHBhcnRpdGlvbktleTogVEFCTEVfUEFSVElUSU9OX0tFWSxcbiAgICAgICAgdGFibGVOYW1lOiBUQUJMRV9OQU1FXG4gICAgfSxcbiAgICByZWdpb25zOiBbIFwidXMtZWFzdC0xXCIsIFwidXMtZWFzdC0yXCIsIFwidXMtd2VzdC0yXCIgXVxufTtcblxuZXhwb3J0ID0ge1xuICAgICdkZWZhdWx0IHN0YWNrJzoge1xuICAgICAgICAnZGVmYXVsdCcodGVzdDogVGVzdCkge1xuICAgICAgICAgICAgY29uc3QgYXBwID0gbmV3IEFwcCgpO1xuICAgICAgICAgICAgY29uc3Qgc3RhY2sgPSBuZXcgU3RhY2soYXBwLCAnU3RhY2snKTtcbiAgICAgICAgICAgIC8vIG5ldyBHbG9iYWxUYWJsZShzdGFjaywgQ09OU1RSVUNUX05BTUUsIFNUQUNLX1BST1BTKTtcbiAgICAgICAgICAgIG5ldyBkZGIuVGFibGUoc3RhY2ssICd4eHgnLCB7XG4gICAgICAgICAgICAgICAgcGFydGl0aW9uS2V5OiB7IG5hbWU6ICdhc2RmJywgdHlwZTogZGRiLkF0dHJpYnV0ZVR5cGUuU3RyaW5nIH0sXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgY29uc29sZS5sb2coc3RhY2suX3RvQ2xvdWRGb3JtYXRpb24oKSk7XG5cbiAgICAgICAgICAgIGV4cGVjdChzdGFjaykudG8oaGF2ZVJlc291cmNlKCdBV1M6OkxhbWJkYTo6RnVuY3Rpb24nLCB7XG4gICAgICAgICAgICAgICAgXCJSZWdpb25zXCI6IFNUQUNLX1BST1BTLnJlZ2lvbnNcbiAgICAgICAgICAgIH0pKTtcblxuICAgICAgICAgICAgdGVzdC5kb25lKCk7XG4gICAgICAgIH1cbiAgICB9XG59O1xuIl19