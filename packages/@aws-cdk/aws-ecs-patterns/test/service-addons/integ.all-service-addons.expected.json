{
  "Resources": {
    "productionenvironmentvpcAEB47DF7": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/production-environment-vpc"
          }
        ]
      }
    },
    "productionenvironmentvpcPublicSubnet1Subnet8D92C089": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/19",
        "VpcId": {
          "Ref": "productionenvironmentvpcAEB47DF7"
        },
        "AvailabilityZone": "test-region-1a",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/production-environment-vpc/PublicSubnet1"
          }
        ]
      }
    },
    "productionenvironmentvpcPublicSubnet1RouteTable6E9ABC21": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "productionenvironmentvpcAEB47DF7"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/production-environment-vpc/PublicSubnet1"
          }
        ]
      }
    },
    "productionenvironmentvpcPublicSubnet1RouteTableAssociationA8117374": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "productionenvironmentvpcPublicSubnet1RouteTable6E9ABC21"
        },
        "SubnetId": {
          "Ref": "productionenvironmentvpcPublicSubnet1Subnet8D92C089"
        }
      }
    },
    "productionenvironmentvpcPublicSubnet1DefaultRoute524C894D": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "productionenvironmentvpcPublicSubnet1RouteTable6E9ABC21"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "productionenvironmentvpcIGWE7C39890"
        }
      },
      "DependsOn": [
        "productionenvironmentvpcVPCGW1B428D07"
      ]
    },
    "productionenvironmentvpcPublicSubnet1EIP54BA88DB": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/production-environment-vpc/PublicSubnet1"
          }
        ]
      }
    },
    "productionenvironmentvpcPublicSubnet1NATGateway6075E4CA": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "productionenvironmentvpcPublicSubnet1EIP54BA88DB",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "productionenvironmentvpcPublicSubnet1Subnet8D92C089"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/production-environment-vpc/PublicSubnet1"
          }
        ]
      }
    },
    "productionenvironmentvpcPublicSubnet2Subnet298E6C31": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.32.0/19",
        "VpcId": {
          "Ref": "productionenvironmentvpcAEB47DF7"
        },
        "AvailabilityZone": "test-region-1b",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/production-environment-vpc/PublicSubnet2"
          }
        ]
      }
    },
    "productionenvironmentvpcPublicSubnet2RouteTable842A68D7": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "productionenvironmentvpcAEB47DF7"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/production-environment-vpc/PublicSubnet2"
          }
        ]
      }
    },
    "productionenvironmentvpcPublicSubnet2RouteTableAssociation0A7549F3": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "productionenvironmentvpcPublicSubnet2RouteTable842A68D7"
        },
        "SubnetId": {
          "Ref": "productionenvironmentvpcPublicSubnet2Subnet298E6C31"
        }
      }
    },
    "productionenvironmentvpcPublicSubnet2DefaultRoute92CD697D": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "productionenvironmentvpcPublicSubnet2RouteTable842A68D7"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "productionenvironmentvpcIGWE7C39890"
        }
      },
      "DependsOn": [
        "productionenvironmentvpcVPCGW1B428D07"
      ]
    },
    "productionenvironmentvpcPublicSubnet2EIP14CA46AA": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/production-environment-vpc/PublicSubnet2"
          }
        ]
      }
    },
    "productionenvironmentvpcPublicSubnet2NATGatewayE1850FCC": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "productionenvironmentvpcPublicSubnet2EIP14CA46AA",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "productionenvironmentvpcPublicSubnet2Subnet298E6C31"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/production-environment-vpc/PublicSubnet2"
          }
        ]
      }
    },
    "productionenvironmentvpcPublicSubnet3SubnetC7B5665D": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.64.0/19",
        "VpcId": {
          "Ref": "productionenvironmentvpcAEB47DF7"
        },
        "AvailabilityZone": "test-region-1c",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/production-environment-vpc/PublicSubnet3"
          }
        ]
      }
    },
    "productionenvironmentvpcPublicSubnet3RouteTable00E3BF60": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "productionenvironmentvpcAEB47DF7"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/production-environment-vpc/PublicSubnet3"
          }
        ]
      }
    },
    "productionenvironmentvpcPublicSubnet3RouteTableAssociationFA34D6E7": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "productionenvironmentvpcPublicSubnet3RouteTable00E3BF60"
        },
        "SubnetId": {
          "Ref": "productionenvironmentvpcPublicSubnet3SubnetC7B5665D"
        }
      }
    },
    "productionenvironmentvpcPublicSubnet3DefaultRouteE1ADEA6C": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "productionenvironmentvpcPublicSubnet3RouteTable00E3BF60"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "productionenvironmentvpcIGWE7C39890"
        }
      },
      "DependsOn": [
        "productionenvironmentvpcVPCGW1B428D07"
      ]
    },
    "productionenvironmentvpcPublicSubnet3EIP53405AED": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/production-environment-vpc/PublicSubnet3"
          }
        ]
      }
    },
    "productionenvironmentvpcPublicSubnet3NATGateway94604057": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "productionenvironmentvpcPublicSubnet3EIP53405AED",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "productionenvironmentvpcPublicSubnet3SubnetC7B5665D"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/production-environment-vpc/PublicSubnet3"
          }
        ]
      }
    },
    "productionenvironmentvpcPrivateSubnet1Subnet53F632E6": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.96.0/19",
        "VpcId": {
          "Ref": "productionenvironmentvpcAEB47DF7"
        },
        "AvailabilityZone": "test-region-1a",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/production-environment-vpc/PrivateSubnet1"
          }
        ]
      }
    },
    "productionenvironmentvpcPrivateSubnet1RouteTable2C6DFF0C": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "productionenvironmentvpcAEB47DF7"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/production-environment-vpc/PrivateSubnet1"
          }
        ]
      }
    },
    "productionenvironmentvpcPrivateSubnet1RouteTableAssociation8BA32463": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "productionenvironmentvpcPrivateSubnet1RouteTable2C6DFF0C"
        },
        "SubnetId": {
          "Ref": "productionenvironmentvpcPrivateSubnet1Subnet53F632E6"
        }
      }
    },
    "productionenvironmentvpcPrivateSubnet1DefaultRouteFBB3DE6C": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "productionenvironmentvpcPrivateSubnet1RouteTable2C6DFF0C"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "productionenvironmentvpcPublicSubnet1NATGateway6075E4CA"
        }
      }
    },
    "productionenvironmentvpcPrivateSubnet2Subnet756FB93C": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.128.0/19",
        "VpcId": {
          "Ref": "productionenvironmentvpcAEB47DF7"
        },
        "AvailabilityZone": "test-region-1b",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/production-environment-vpc/PrivateSubnet2"
          }
        ]
      }
    },
    "productionenvironmentvpcPrivateSubnet2RouteTable2F77D0D2": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "productionenvironmentvpcAEB47DF7"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/production-environment-vpc/PrivateSubnet2"
          }
        ]
      }
    },
    "productionenvironmentvpcPrivateSubnet2RouteTableAssociation09188261": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "productionenvironmentvpcPrivateSubnet2RouteTable2F77D0D2"
        },
        "SubnetId": {
          "Ref": "productionenvironmentvpcPrivateSubnet2Subnet756FB93C"
        }
      }
    },
    "productionenvironmentvpcPrivateSubnet2DefaultRoute5F9AB6C1": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "productionenvironmentvpcPrivateSubnet2RouteTable2F77D0D2"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "productionenvironmentvpcPublicSubnet2NATGatewayE1850FCC"
        }
      }
    },
    "productionenvironmentvpcPrivateSubnet3Subnet3BD4064E": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.160.0/19",
        "VpcId": {
          "Ref": "productionenvironmentvpcAEB47DF7"
        },
        "AvailabilityZone": "test-region-1c",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/production-environment-vpc/PrivateSubnet3"
          }
        ]
      }
    },
    "productionenvironmentvpcPrivateSubnet3RouteTable1A244D34": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "productionenvironmentvpcAEB47DF7"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/production-environment-vpc/PrivateSubnet3"
          }
        ]
      }
    },
    "productionenvironmentvpcPrivateSubnet3RouteTableAssociation65F18B9C": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "productionenvironmentvpcPrivateSubnet3RouteTable1A244D34"
        },
        "SubnetId": {
          "Ref": "productionenvironmentvpcPrivateSubnet3Subnet3BD4064E"
        }
      }
    },
    "productionenvironmentvpcPrivateSubnet3DefaultRoute2438918B": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "productionenvironmentvpcPrivateSubnet3RouteTable1A244D34"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "productionenvironmentvpcPublicSubnet3NATGateway94604057"
        }
      }
    },
    "productionenvironmentvpcIGWE7C39890": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/production-environment-vpc"
          }
        ]
      }
    },
    "productionenvironmentvpcVPCGW1B428D07": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "productionenvironmentvpcAEB47DF7"
        },
        "InternetGatewayId": {
          "Ref": "productionenvironmentvpcIGWE7C39890"
        }
      }
    },
    "productionenvironmentclusterC6599D2D": {
      "Type": "AWS::ECS::Cluster"
    },
    "productionenvironmentclusterDefaultServiceDiscoveryNamespaceBE74D64D": {
      "Type": "AWS::ServiceDiscovery::PrivateDnsNamespace",
      "Properties": {
        "Name": "internal",
        "Vpc": {
          "Ref": "productionenvironmentvpcAEB47DF7"
        }
      }
    },
    "mymeshEA67EDEF": {
      "Type": "AWS::AppMesh::Mesh",
      "Properties": {
        "MeshName": "awsecsintegmymeshFCC0D554",
        "Spec": {}
      }
    },
    "myservicelogs176EE19F": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "my-service-logs",
        "RetentionInDays": 7
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "myserviceloadbalancer97422CAE": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "myserviceloadbalancerSecurityGroupDA109921",
              "GroupId"
            ]
          }
        ],
        "Subnets": [
          {
            "Ref": "productionenvironmentvpcPublicSubnet1Subnet8D92C089"
          },
          {
            "Ref": "productionenvironmentvpcPublicSubnet2Subnet298E6C31"
          },
          {
            "Ref": "productionenvironmentvpcPublicSubnet3SubnetC7B5665D"
          }
        ],
        "Type": "application"
      },
      "DependsOn": [
        "productionenvironmentvpcPublicSubnet1DefaultRoute524C894D",
        "productionenvironmentvpcPublicSubnet2DefaultRoute92CD697D",
        "productionenvironmentvpcPublicSubnet3DefaultRouteE1ADEA6C"
      ]
    },
    "myserviceloadbalancerSecurityGroupDA109921": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB awsecsintegmyserviceloadbalancer5F81EB3D",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80
          }
        ],
        "VpcId": {
          "Ref": "productionenvironmentvpcAEB47DF7"
        }
      }
    },
    "myserviceloadbalancerSecurityGrouptoawsecsintegmyserviceserviceSecurityGroup269308B380C127ABE4": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": [
            "myserviceloadbalancerSecurityGroupDA109921",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "myserviceserviceSecurityGroup3A44A969",
            "GroupId"
          ]
        },
        "FromPort": 80,
        "ToPort": 80
      }
    },
    "myserviceloadbalancermyservicelistener8E36ED7A": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "myserviceloadbalancermyservicelistenermyserviceGroup11F3D798"
            },
            "Type": "forward"
          }
        ],
        "LoadBalancerArn": {
          "Ref": "myserviceloadbalancer97422CAE"
        },
        "Port": 80,
        "Protocol": "HTTP"
      }
    },
    "myserviceloadbalancermyservicelistenermyserviceGroup11F3D798": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "10"
          }
        ],
        "TargetType": "ip",
        "VpcId": {
          "Ref": "productionenvironmentvpcAEB47DF7"
        }
      }
    },
    "myservicetaskdefinitionTaskRole92ACD903": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AWSXRayDaemonWriteAccess"
              ]
            ]
          }
        ]
      }
    },
    "myservicetaskdefinitionTaskRoleDefaultPolicyDF45C4EE": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:DescribeLogStreams",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "myservicetaskdefinitionTaskRoleDefaultPolicyDF45C4EE",
        "Roles": [
          {
            "Ref": "myservicetaskdefinitionTaskRole92ACD903"
          }
        ]
      }
    },
    "myservicetaskdefinitionF3E2D86F": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [
          {
            "Cpu": 1024,
            "DependsOn": [
              {
                "Condition": "START",
                "ContainerName": "firelens"
              },
              {
                "Condition": "HEALTHY",
                "ContainerName": "envoy"
              },
              {
                "Condition": "START",
                "ContainerName": "cloudwatch-agent"
              },
              {
                "Condition": "HEALTHY",
                "ContainerName": "xray"
              }
            ],
            "Environment": [
              {
                "Name": "PORT",
                "Value": "80"
              }
            ],
            "Essential": true,
            "Image": "nathanpeck/name",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "cloudwatch",
                "region": {
                  "Ref": "AWS::Region"
                },
                "log_group_name": {
                  "Ref": "myservicelogs176EE19F"
                },
                "log_stream_prefix": "my-service/"
              }
            },
            "Memory": 2048,
            "Name": "app",
            "PortMappings": [
              {
                "ContainerPort": 80,
                "Protocol": "tcp"
              }
            ],
            "Ulimits": [
              {
                "HardLimit": 1024000,
                "Name": "nofile",
                "SoftLimit": 1024000
              }
            ]
          },
          {
            "DependsOn": [
              {
                "Condition": "HEALTHY",
                "ContainerName": "envoy"
              }
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit"
            },
            "Image": {
              "Ref": "SsmParameterValueawsserviceawsforfluentbitlatestC96584B6F00A464EAD1953AFF4B05118Parameter"
            },
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "myservicetaskdefinitionfirelensLogGroup0D59B0EB"
                },
                "awslogs-stream-prefix": "firelens",
                "awslogs-region": {
                  "Ref": "AWS::Region"
                }
              }
            },
            "MemoryReservation": 50,
            "Name": "firelens",
            "User": "0:1338"
          },
          {
            "DependsOn": [
              {
                "Condition": "HEALTHY",
                "ContainerName": "envoy"
              }
            ],
            "Environment": [
              {
                "Name": "AWS_REGION",
                "Value": {
                  "Ref": "AWS::Region"
                }
              }
            ],
            "Essential": true,
            "HealthCheck": {
              "Command": [
                "CMD-SHELL",
                "curl -s http://localhost:2000"
              ],
              "Interval": 5,
              "Retries": 3,
              "StartPeriod": 10,
              "Timeout": 2
            },
            "Image": "amazon/aws-xray-daemon",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "myservicetaskdefinitionxrayLogGroupC0252525"
                },
                "awslogs-stream-prefix": "xray",
                "awslogs-region": {
                  "Ref": "AWS::Region"
                }
              }
            },
            "MemoryReservation": 256,
            "Name": "xray",
            "User": "1337"
          },
          {
            "DependsOn": [
              {
                "Condition": "HEALTHY",
                "ContainerName": "envoy"
              }
            ],
            "Environment": [
              {
                "Name": "CW_CONFIG_CONTENT",
                "Value": "{\"logs\":{\"metrics_collected\":{\"emf\":{}}},\"metrics\":{\"metrics_collected\":{\"statsd\":{}}}}"
              }
            ],
            "Essential": true,
            "Image": "amazon/cloudwatch-agent:latest",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "myservicetaskdefinitioncloudwatchagentLogGroupDF0CD679"
                },
                "awslogs-stream-prefix": "cloudwatch-agent",
                "awslogs-region": {
                  "Ref": "AWS::Region"
                }
              }
            },
            "MemoryReservation": 50,
            "Name": "cloudwatch-agent",
            "User": "0:1338"
          },
          {
            "Environment": [
              {
                "Name": "APPMESH_VIRTUAL_NODE_NAME",
                "Value": {
                  "Fn::Join": [
                    "",
                    [
                      "mesh/",
                      {
                        "Fn::GetAtt": [
                          "mymeshEA67EDEF",
                          "MeshName"
                        ]
                      },
                      "/virtualNode/my-service"
                    ]
                  ]
                }
              },
              {
                "Name": "AWS_REGION",
                "Value": {
                  "Ref": "AWS::Region"
                }
              },
              {
                "Name": "ENABLE_ENVOY_STATS_TAGS",
                "Value": "1"
              },
              {
                "Name": "ENABLE_ENVOY_DOG_STATSD",
                "Value": "1"
              }
            ],
            "Essential": true,
            "HealthCheck": {
              "Command": [
                "CMD-SHELL",
                "curl -s http://localhost:9901/server_info | grep state | grep -q LIVE"
              ],
              "Interval": 5,
              "Retries": 3,
              "StartPeriod": 10,
              "Timeout": 2
            },
            "Image": {
              "Fn::Join": [
                "",
                [
                  "840364872350.dkr.ecr.us-east-1.",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/aws-appmesh-envoy:v1.13.1.1-prod"
                ]
              ]
            },
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "myservicetaskdefinitionenvoyLogGroup0C27EBDB"
                },
                "awslogs-stream-prefix": "envoy",
                "awslogs-region": {
                  "Ref": "AWS::Region"
                }
              }
            },
            "MemoryReservation": 128,
            "Name": "envoy",
            "Ulimits": [
              {
                "HardLimit": 1024000,
                "Name": "nofile",
                "SoftLimit": 1024000
              }
            ],
            "User": "1337"
          }
        ],
        "Cpu": "1024",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "myservicetaskdefinitionExecutionRole0CE74AD0",
            "Arn"
          ]
        },
        "Family": "awsecsintegmyservicetaskdefinition1F0D3F06",
        "Memory": "2048",
        "NetworkMode": "awsvpc",
        "ProxyConfiguration": {
          "ContainerName": "envoy",
          "ProxyConfigurationProperties": [
            {
              "Name": "AppPorts",
              "Value": "80"
            },
            {
              "Name": "ProxyEgressPort",
              "Value": "15001"
            },
            {
              "Name": "ProxyIngressPort",
              "Value": "15000"
            },
            {
              "Name": "IgnoredUID",
              "Value": "1337"
            },
            {
              "Name": "IgnoredGID",
              "Value": "1338"
            },
            {
              "Name": "EgressIgnoredIPs",
              "Value": "169.254.170.2,169.254.169.254"
            }
          ],
          "Type": "APPMESH"
        },
        "RequiresCompatibilities": [
          "EC2",
          "FARGATE"
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "myservicetaskdefinitionTaskRole92ACD903",
            "Arn"
          ]
        }
      }
    },
    "myservicetaskdefinitionExecutionRole0CE74AD0": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "myservicetaskdefinitionExecutionRoleDefaultPolicy9533DCFA": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecr:GetAuthorizationToken",
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "myservicetaskdefinitionfirelensLogGroup0D59B0EB",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "myservicetaskdefinitionxrayLogGroupC0252525",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "myservicetaskdefinitioncloudwatchagentLogGroupDF0CD679",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:ecr:us-east-1:840364872350:repository/aws-appmesh-envoy"
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "myservicetaskdefinitionenvoyLogGroup0C27EBDB",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "myservicetaskdefinitionExecutionRoleDefaultPolicy9533DCFA",
        "Roles": [
          {
            "Ref": "myservicetaskdefinitionExecutionRole0CE74AD0"
          }
        ]
      }
    },
    "myservicetaskdefinitionfirelensLogGroup0D59B0EB": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "myservicetaskdefinitionxrayLogGroupC0252525": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "myservicetaskdefinitioncloudwatchagentLogGroupDF0CD679": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "myservicetaskdefinitionenvoyLogGroup0C27EBDB": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "myservicepublishmetrics498EF3DF": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cloudwatch:PutMetricData",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "myservicepublishmetrics498EF3DF",
        "Roles": [
          {
            "Ref": "myservicetaskdefinitionTaskRole92ACD903"
          }
        ]
      }
    },
    "myserviceserviceServiceE9A5732D": {
      "Type": "AWS::ECS::Service",
      "Properties": {
        "Cluster": {
          "Ref": "productionenvironmentclusterC6599D2D"
        },
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": [
          {
            "ContainerName": "app",
            "ContainerPort": 80,
            "TargetGroupArn": {
              "Ref": "myserviceloadbalancermyservicelistenermyserviceGroup11F3D798"
            }
          }
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "myserviceserviceSecurityGroup3A44A969",
                  "GroupId"
                ]
              }
            ],
            "Subnets": [
              {
                "Ref": "productionenvironmentvpcPrivateSubnet1Subnet53F632E6"
              },
              {
                "Ref": "productionenvironmentvpcPrivateSubnet2Subnet756FB93C"
              },
              {
                "Ref": "productionenvironmentvpcPrivateSubnet3Subnet3BD4064E"
              }
            ]
          }
        },
        "ServiceRegistries": [
          {
            "RegistryArn": {
              "Fn::GetAtt": [
                "myserviceserviceCloudmapService32F63163",
                "Arn"
              ]
            }
          }
        ],
        "TaskDefinition": {
          "Ref": "myservicetaskdefinitionF3E2D86F"
        }
      },
      "DependsOn": [
        "myserviceloadbalancermyservicelistenermyserviceGroup11F3D798",
        "myserviceloadbalancermyservicelistener8E36ED7A"
      ]
    },
    "myserviceserviceCloudmapService32F63163": {
      "Type": "AWS::ServiceDiscovery::Service",
      "Properties": {
        "DnsConfig": {
          "DnsRecords": [
            {
              "TTL": 10,
              "Type": "A"
            }
          ],
          "NamespaceId": {
            "Fn::GetAtt": [
              "productionenvironmentclusterDefaultServiceDiscoveryNamespaceBE74D64D",
              "Id"
            ]
          },
          "RoutingPolicy": "MULTIVALUE"
        },
        "HealthCheckCustomConfig": {
          "FailureThreshold": 2
        },
        "Name": "my-service",
        "NamespaceId": {
          "Fn::GetAtt": [
            "productionenvironmentclusterDefaultServiceDiscoveryNamespaceBE74D64D",
            "Id"
          ]
        }
      }
    },
    "myserviceserviceSecurityGroup3A44A969": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "aws-ecs-integ/my-service-service/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "productionenvironmentvpcAEB47DF7"
        }
      }
    },
    "myserviceserviceSecurityGroupfromawsecsintegmyserviceloadbalancerSecurityGroupA2A850C18098907B68": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "myserviceserviceSecurityGroup3A44A969",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "myserviceloadbalancerSecurityGroupDA109921",
            "GroupId"
          ]
        },
        "ToPort": 80
      }
    },
    "myservicevirtualnode82F14673": {
      "Type": "AWS::AppMesh::VirtualNode",
      "Properties": {
        "MeshName": {
          "Fn::GetAtt": [
            "mymeshEA67EDEF",
            "MeshName"
          ]
        },
        "Spec": {
          "Listeners": [
            {
              "PortMapping": {
                "Port": 80,
                "Protocol": "http"
              }
            }
          ],
          "Logging": {
            "AccessLog": {
              "File": {
                "Path": "/dev/stdout"
              }
            }
          },
          "ServiceDiscovery": {
            "AWSCloudMap": {
              "NamespaceName": "internal",
              "ServiceName": {
                "Fn::GetAtt": [
                  "myserviceserviceCloudmapService32F63163",
                  "Name"
                ]
              }
            }
          }
        },
        "VirtualNodeName": "my-service"
      }
    },
    "myservicevirtualserviceF33F9B9B": {
      "Type": "AWS::AppMesh::VirtualService",
      "Properties": {
        "MeshName": {
          "Fn::GetAtt": [
            "mymeshEA67EDEF",
            "MeshName"
          ]
        },
        "Spec": {
          "Provider": {
            "VirtualNode": {
              "VirtualNodeName": {
                "Fn::GetAtt": [
                  "myservicevirtualnode82F14673",
                  "VirtualNodeName"
                ]
              }
            }
          }
        },
        "VirtualServiceName": "my-service.internal"
      }
    }
  },
  "Outputs": {
    "myserviceloadbalancerdnsoutput": {
      "Value": {
        "Fn::GetAtt": [
          "myserviceloadbalancer97422CAE",
          "DNSName"
        ]
      }
    }
  },
  "Parameters": {
    "SsmParameterValueawsserviceawsforfluentbitlatestC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/aws/service/aws-for-fluent-bit/latest"
    }
  }
}