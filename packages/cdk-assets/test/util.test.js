"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const util_1 = require("../lib/private/util");
test('critical section', async () => {
    // GIVEN
    const criticalSection = (0, util_1.createCriticalSection)();
    // WHEN
    const arr = new Array();
    void criticalSection(async () => {
        await new Promise(res => setTimeout(res, 500));
        arr.push('first');
    });
    await criticalSection(async () => {
        arr.push('second');
    });
    // THEN
    expect(arr).toEqual([
        'first',
        'second',
    ]);
});
test('exceptions in critical sections', async () => {
    // GIVEN
    const criticalSection = (0, util_1.createCriticalSection)();
    // WHEN/THEN
    await expect(() => criticalSection(async () => {
        throw new Error('Thrown');
    })).rejects.toThrow('Thrown');
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbC50ZXN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsidXRpbC50ZXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsOENBQTREO0FBRTVELElBQUksQ0FBQyxrQkFBa0IsRUFBRSxLQUFLLElBQUksRUFBRTtJQUNsQyxRQUFRO0lBQ1IsTUFBTSxlQUFlLEdBQUcsSUFBQSw0QkFBcUIsR0FBRSxDQUFDO0lBRWhELE9BQU87SUFDUCxNQUFNLEdBQUcsR0FBRyxJQUFJLEtBQUssRUFBVSxDQUFDO0lBQ2hDLEtBQUssZUFBZSxDQUFDLEtBQUssSUFBSSxFQUFFO1FBQzlCLE1BQU0sSUFBSSxPQUFPLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxVQUFVLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDL0MsR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNwQixDQUFDLENBQUMsQ0FBQztJQUNILE1BQU0sZUFBZSxDQUFDLEtBQUssSUFBSSxFQUFFO1FBQy9CLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDckIsQ0FBQyxDQUFDLENBQUM7SUFFSCxPQUFPO0lBQ1AsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQztRQUNsQixPQUFPO1FBQ1AsUUFBUTtLQUNULENBQUMsQ0FBQztBQUNMLENBQUMsQ0FBQyxDQUFDO0FBRUgsSUFBSSxDQUFDLGlDQUFpQyxFQUFFLEtBQUssSUFBSSxFQUFFO0lBQ2pELFFBQVE7SUFDUixNQUFNLGVBQWUsR0FBRyxJQUFBLDRCQUFxQixHQUFFLENBQUM7SUFFaEQsWUFBWTtJQUNaLE1BQU0sTUFBTSxDQUFDLEdBQUcsRUFBRSxDQUFDLGVBQWUsQ0FBQyxLQUFLLElBQUksRUFBRTtRQUM1QyxNQUFNLElBQUksS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzVCLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUNoQyxDQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUNyaXRpY2FsU2VjdGlvbiB9IGZyb20gJy4uL2xpYi9wcml2YXRlL3V0aWwnO1xuXG50ZXN0KCdjcml0aWNhbCBzZWN0aW9uJywgYXN5bmMgKCkgPT4ge1xuICAvLyBHSVZFTlxuICBjb25zdCBjcml0aWNhbFNlY3Rpb24gPSBjcmVhdGVDcml0aWNhbFNlY3Rpb24oKTtcblxuICAvLyBXSEVOXG4gIGNvbnN0IGFyciA9IG5ldyBBcnJheTxzdHJpbmc+KCk7XG4gIHZvaWQgY3JpdGljYWxTZWN0aW9uKGFzeW5jICgpID0+IHtcbiAgICBhd2FpdCBuZXcgUHJvbWlzZShyZXMgPT4gc2V0VGltZW91dChyZXMsIDUwMCkpO1xuICAgIGFyci5wdXNoKCdmaXJzdCcpO1xuICB9KTtcbiAgYXdhaXQgY3JpdGljYWxTZWN0aW9uKGFzeW5jICgpID0+IHtcbiAgICBhcnIucHVzaCgnc2Vjb25kJyk7XG4gIH0pO1xuXG4gIC8vIFRIRU5cbiAgZXhwZWN0KGFycikudG9FcXVhbChbXG4gICAgJ2ZpcnN0JyxcbiAgICAnc2Vjb25kJyxcbiAgXSk7XG59KTtcblxudGVzdCgnZXhjZXB0aW9ucyBpbiBjcml0aWNhbCBzZWN0aW9ucycsIGFzeW5jICgpID0+IHtcbiAgLy8gR0lWRU5cbiAgY29uc3QgY3JpdGljYWxTZWN0aW9uID0gY3JlYXRlQ3JpdGljYWxTZWN0aW9uKCk7XG5cbiAgLy8gV0hFTi9USEVOXG4gIGF3YWl0IGV4cGVjdCgoKSA9PiBjcml0aWNhbFNlY3Rpb24oYXN5bmMgKCkgPT4ge1xuICAgIHRocm93IG5ldyBFcnJvcignVGhyb3duJyk7XG4gIH0pKS5yZWplY3RzLnRvVGhyb3coJ1Rocm93bicpO1xufSk7Il19