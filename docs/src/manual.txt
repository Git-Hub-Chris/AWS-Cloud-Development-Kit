        
        .. _manual_project:
        
        Manually Creating a Project
        ===========================
        
        In this section we create a new |cdk| project using explicit command-line commands.
        Be sure to navigate to the *hello-cdk* directory before you start.
        
        .. _initializing_manually:
        
        Initializing the Project
        ------------------------
        
        Create an empty project for the |cdk| app.
        
        .. tabs::
        
            .. group-tab:: C#
        
                Create a new console application.
        
                .. code-block:: sh
        
                    dotnet new console
        
            .. group-tab:: JavaScript
        
                Create an initial npm **package.json** file:
        
                .. code-block:: sh
        
                    npm init -y # creates package.json
        
                Create a **.gitignore** file with the following content:
        
                .. code-block:: sh
        
                    *.js
                    node_modules
        
            .. group-tab:: TypeScript
        
                Create an initial npm **package.json** file:
        
                .. code-block:: sh
        
                    npm init -y # creates package.json
        
                Create a **.gitignore** file with the following content:
        
                .. code-block:: sh
        
                    *.js
                    *.d.ts
                    node_modules
        
                Add the `build` and `watch` TypeScript commands to **package.json**:
        
                .. code-block:: json
        
                    {
                        "scripts": {
                            "build": "tsc",
                            "watch": "tsc -w"
                        }
                    }
        
                Create a minimal **tsconfig.json**:
        
                .. code-block:: json
        
                    {
                        "compilerOptions": {
                            "target": "es2018",
                            "module": "commonjs"
                        }
                    }
        
                Create a minimal **cdk.json** (this saves you from including `--app node bin/hello-cdk.js` in every `cdk` command):
        
                .. code-block:: json
                    
                    {
                        "app": "node bin/hello-cdk.js"
                    }
        
            .. group-tab:: Java
        
                Create a **.gitignore** file with the following content:
        
                .. code-block:: sh
        
                    .classpath.txt
                    target
                    .classpath
                    .project
                    .idea
                    .settings
                    .vscode
                    *.iml
        
                Use your favorite IDE to create a Maven-based empty Java 8 project.
        
                Set the Java **source** and **target** to 1.8 in your **pom.xml** file:
        
                .. code-block:: xml
        
                    <!-- pom.xml -->
                    <build>
                        <plugins>
                            <plugin>
                                <groupId>org.apache.maven.plugins</groupId>
                                <artifactId>maven-compiler-plugin</artifactId>
                                <version>3.1</version>
                                <configuration>
                                    <source>1.8</source>
                                    <target>1.8</target>
                                </configuration>
                            </plugin>
                        </plugins>
                    </build>
        
        .. _add_core:
        
        Adding the CDK Core as a Dependency
        -----------------------------------
        
        Install the |cdk| core library (:py:mod:`@aws-cdk/cdk`)
        This library includes the basic classes needed to write |cdk| stacks and apps.
        
        .. tabs::
        
            .. group-tab:: C#
        
                Install the **Amazon.CDK NuGet** package:
        
                .. code-block:: sh
        
                    dotnet add package Amazon.CDK
        
            .. group-tab:: JavaScript
        
                Install the **@aws-cdk/cdk** package:
        
                .. code-block:: sh
        
                    npm install @aws-cdk/cdk
        
            .. group-tab:: TypeScript
        
                Install the **@aws-cdk/cdk** package:
        
                .. code-block:: sh
        
                    npm install @aws-cdk/cdk
        
            .. group-tab:: Java
        
                Add the following to your project's `pom.xml` file:
        
                .. code-block:: xml
        
                    <dependencies>
                        <dependency>
                            <groupId>software.amazon.awscdk</groupId>
                            <artifactId>cdk</artifactId>
                            <version><!-- cdk-version --></version>
                        </dependency>
                    </dependencies>
        
        .. _define_app:
        
        Defining the |cdk| App
        ----------------------
        
        |cdk| apps are classes that extend the :py:class:`App <@aws-cdk/cdk.App>`
        class. Create an empty **App**:
        
        .. tabs::
        
            .. group-tab:: C#
        
                In **Program.cs**
        
                .. code-block:: c#
        
                    using Amazon.CDK;
        
                    namespace HelloCdk
                    {
                        class Program
                        {
                            static void Main(string[] args)
                            {
                                var myApp = new App();
                                myApp.Run();
                            }
                        }
                    }
        
            .. group-tab:: JavaScript
        
                Create the file **bin/hello-cdk.js**:
        
                .. code-block:: js
        
                    const cdk = require('@aws-cdk/cdk');
        
                    class MyApp extends cdk.App {
                        constructor() {
                            super();
                        }
                    }
        
                    new MyApp().run();
        
            .. group-tab:: TypeScript
        
                Create the file **bin/hello-cdk.ts**:
        
                .. code-block:: ts
        
                    import cdk = require('@aws-cdk/cdk');
                    import { HelloCdkStack } from '../lib/hello-cdkstack';
        
                    const app = new cdk.App();
                    new HelloCdkStack(app, 'HelloCdkStack');
                    app.run();
        
                Create the file **lib/hello-cdkstack.ts**:
        
                .. code-block:: ts
        
                    import cdk = require('@aws-cdk/cdk');
        
                    export class HelloCdkStack extends cdk.Stack {
                        constructor(parent: cdk.App, name: string, props?: cdk.StackProps) {
                            super(parent, name, props);
        
                            // The code that defines your stack goes here
                        }
                    }
                    
            .. group-tab:: Java
        
                In **src/main/java/com/acme/MyApp.java**:
        
                .. code-block:: java
        
                    package com.acme;
        
                    import software.amazon.awscdk.App;
        
                    import java.util.Arrays;
        
                    public class MyApp {
                        public static void main(final String argv[]) {
                            App app = new App();
        
                            app.run();
                        }
                    }
        
        .. _compile_code:
        
        Compiling the Code
        ------------------
        
        If needed, compile the code:
        
        .. tabs::
        
            .. group-tab:: C#
        
                Compile the code using your IDE or via the dotnet CLI:
        
                .. code-block:: sh
        
                    dotnet build
        
            .. group-tab:: JavaScript
        
                No need to compile
        
            .. group-tab:: TypeScript
        
                To compile your program from **.ts** to **.js**:
        
                .. code-block:: sh
        
                    npm run build
        
                You can also use the **watch** command to continuously compile your code
                as it changes, so you don't have to invoke the compiler explicitly:
        
                .. code-block:: sh
        
                    # run in another terminal session
                    npm run watch
        
            .. group-tab:: Java
        
                Compile your code using your IDE or via the command line via **mvn**:
        
                .. code-block:: sh
        
                    mvn compile
        
        You have now created your first |cdk| app.
