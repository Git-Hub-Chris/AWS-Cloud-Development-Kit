#!/usr/bin/env node
//
// localdeps: Prints all local dependencies of current package in topological order
//
// For example, you can use this to build all deps:
//
//    localdeps | xargs -I {} bash -c "cd {} && npm run build"
//
const fs = require('fs');
const path = require('path');
const { promisify } = require('util');
const readFile = promisify(fs.readFile);
const readdir = promisify(fs.readdir);
const lstat = promisify(fs.lstat);
const realpath = promisify(fs.realpath);

async function deps() {
    const visited = new Set();
    const result = [];

    return await visit('.');

    async function visit(dir) {
        const pkg = JSON.parse(await readFile(path.join(dir, 'package.json')));
        const deps = [ ...Object.keys(pkg.dependencies || []), ...Object.keys(pkg.devDependencies || []) ];
        for (const dep of deps) {
            const moduleDir = path.join(dir, 'node_modules', dep);
            if ((await lstat(moduleDir)).isSymbolicLink()) {
                const resolved = await realpath(moduleDir);
                if (visited.has(resolved)) {
                    continue;
                }
                visited.add(resolved);
                await visit(resolved);
            }
        }

        result.push(await realpath(dir));

        return result;
    }
}

deps()
    .then(deps => deps.forEach(dep => process.stdout.write(dep + '\n')))
    .catch(e => {
        console.error(e);
        process.exit(1);
    });
